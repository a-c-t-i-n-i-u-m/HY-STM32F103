; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\usb_regs.o --depend=.\Obj\usb_regs.d --cpu=Cortex-M3 --apcs=interwork -O3 -I.\usb_library\inc -I..\USB_test -I.\FWlib\inc -I.\user -Id:\Keil\ARM\INC -Id:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Obj\usb_regs.crf usb_library\src\usb_regs.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SetCNTR PROC
;;;33     *******************************************************************************/
;;;34     void SetCNTR(u16 wRegValue)
000000  49fb              LDR      r1,|L1.1008|
;;;35     {
;;;36       _SetCNTR(wRegValue);
000002  6008              STR      r0,[r1,#0]
;;;37     }
000004  4770              BX       lr
;;;38     
                          ENDP

                  GetCNTR PROC
;;;45     *******************************************************************************/
;;;46     u16 GetCNTR(void)
000006  48fa              LDR      r0,|L1.1008|
;;;47     {
;;;48       return(_GetCNTR());
000008  6800              LDR      r0,[r0,#0]
00000a  b280              UXTH     r0,r0
;;;49     }
00000c  4770              BX       lr
;;;50     
                          ENDP

                  SetISTR PROC
;;;57     *******************************************************************************/
;;;58     void SetISTR(u16 wRegValue)
00000e  49f9              LDR      r1,|L1.1012|
;;;59     {
;;;60       _SetISTR(wRegValue);
000010  6008              STR      r0,[r1,#0]
;;;61     }
000012  4770              BX       lr
;;;62     
                          ENDP

                  GetISTR PROC
;;;69     *******************************************************************************/
;;;70     u16 GetISTR(void)
000014  48f7              LDR      r0,|L1.1012|
;;;71     {
;;;72       return(_GetISTR());
000016  6800              LDR      r0,[r0,#0]
000018  b280              UXTH     r0,r0
;;;73     }
00001a  4770              BX       lr
;;;74     
                          ENDP

                  GetFNR PROC
;;;81     *******************************************************************************/
;;;82     u16 GetFNR(void)
00001c  48f6              LDR      r0,|L1.1016|
;;;83     {
;;;84       return(_GetFNR());
00001e  6800              LDR      r0,[r0,#0]
000020  b280              UXTH     r0,r0
;;;85     }
000022  4770              BX       lr
;;;86     
                          ENDP

                  SetDADDR PROC
;;;93     *******************************************************************************/
;;;94     void SetDADDR(u16 wRegValue)
000024  49f5              LDR      r1,|L1.1020|
;;;95     {
;;;96       _SetDADDR(wRegValue);
000026  6008              STR      r0,[r1,#0]
;;;97     }
000028  4770              BX       lr
;;;98     
                          ENDP

                  GetDADDR PROC
;;;105    *******************************************************************************/
;;;106    u16 GetDADDR(void)
00002a  48f4              LDR      r0,|L1.1020|
;;;107    {
;;;108      return(_GetDADDR());
00002c  6800              LDR      r0,[r0,#0]
00002e  b280              UXTH     r0,r0
;;;109    }
000030  4770              BX       lr
;;;110    
                          ENDP

                  SetBTABLE PROC
;;;117    *******************************************************************************/
;;;118    void SetBTABLE(u16 wRegValue)
000032  49f3              LDR      r1,|L1.1024|
;;;119    {
;;;120      _SetBTABLE(wRegValue);
000034  f0200007          BIC      r0,r0,#7
000038  6008              STR      r0,[r1,#0]
;;;121    }
00003a  4770              BX       lr
;;;122    
                          ENDP

                  GetBTABLE PROC
;;;129    *******************************************************************************/
;;;130    u16 GetBTABLE(void)
00003c  48f0              LDR      r0,|L1.1024|
;;;131    {
;;;132      return(_GetBTABLE());
00003e  6800              LDR      r0,[r0,#0]
000040  b280              UXTH     r0,r0
;;;133    }
000042  4770              BX       lr
;;;134    
                          ENDP

                  SetENDPOINT PROC
;;;142    *******************************************************************************/
;;;143    void SetENDPOINT(u8 bEpNum, u16 wRegValue)
000044  4aef              LDR      r2,|L1.1028|
;;;144    {
;;;145      _SetENDPOINT(bEpNum, wRegValue);
000046  eb020080          ADD      r0,r2,r0,LSL #2
00004a  f8c01c00          STR      r1,[r0,#0xc00]
;;;146    }
00004e  4770              BX       lr
;;;147    
                          ENDP

                  GetENDPOINT PROC
;;;154    *******************************************************************************/
;;;155    u16 GetENDPOINT(u8 bEpNum)
000050  49ec              LDR      r1,|L1.1028|
;;;156    {
;;;157      return(_GetENDPOINT(bEpNum));
000052  eb010080          ADD      r0,r1,r0,LSL #2
000056  f8d00c00          LDR      r0,[r0,#0xc00]
00005a  b280              UXTH     r0,r0
;;;158    }
00005c  4770              BX       lr
;;;159    
                          ENDP

                  SetEPType PROC
;;;167    *******************************************************************************/
;;;168    void SetEPType(u8 bEpNum, u16 wType)
00005e  4ae9              LDR      r2,|L1.1028|
;;;169    {
;;;170      _SetEPType(bEpNum, wType);
000060  eb020080          ADD      r0,r2,r0,LSL #2
000064  f8d02c00          LDR      r2,[r0,#0xc00]
000068  f648138f          MOV      r3,#0x898f
00006c  b292              UXTH     r2,r2
00006e  401a              ANDS     r2,r2,r3
000070  430a              ORRS     r2,r2,r1
000072  f8c02c00          STR      r2,[r0,#0xc00]
;;;171    }
000076  4770              BX       lr
;;;172    
                          ENDP

                  GetEPType PROC
;;;179    *******************************************************************************/
;;;180    u16 GetEPType(u8 bEpNum)
000078  49e2              LDR      r1,|L1.1028|
;;;181    {
;;;182      return(_GetEPType(bEpNum));
00007a  eb010080          ADD      r0,r1,r0,LSL #2
00007e  f8d00c00          LDR      r0,[r0,#0xc00]
000082  f3c02041          UBFX     r0,r0,#9,#2
000086  0240              LSLS     r0,r0,#9
;;;183    }
000088  4770              BX       lr
;;;184    
                          ENDP

                  SetEPTxStatus PROC
;;;192    *******************************************************************************/
;;;193    void SetEPTxStatus(u8 bEpNum, u16 wState)
00008a  4ade              LDR      r2,|L1.1028|
;;;194    {
00008c  b510              PUSH     {r4,lr}
;;;195      _SetEPTxStatus(bEpNum, wState);
00008e  eb020280          ADD      r2,r2,r0,LSL #2
000092  f8d20c00          LDR      r0,[r2,#0xc00]
000096  f64874bf          MOV      r4,#0x8fbf
00009a  b280              UXTH     r0,r0
00009c  06cb              LSLS     r3,r1,#27
00009e  ea000004          AND      r0,r0,r4
0000a2  d501              BPL      |L1.168|
0000a4  f0800010          EOR      r0,r0,#0x10
                  |L1.168|
0000a8  0689              LSLS     r1,r1,#26
0000aa  d501              BPL      |L1.176|
0000ac  f0800020          EOR      r0,r0,#0x20
                  |L1.176|
0000b0  f8c20c00          STR      r0,[r2,#0xc00]
;;;196    }
0000b4  bd10              POP      {r4,pc}
;;;197    
                          ENDP

                  SetEPRxStatus PROC
;;;205    *******************************************************************************/
;;;206    void SetEPRxStatus(u8 bEpNum, u16 wState)
0000b6  4ad3              LDR      r2,|L1.1028|
;;;207    {
0000b8  b510              PUSH     {r4,lr}
;;;208      _SetEPRxStatus(bEpNum, wState);
0000ba  eb020280          ADD      r2,r2,r0,LSL #2
0000be  f8d20c00          LDR      r0,[r2,#0xc00]
0000c2  f64b748f          MOV      r4,#0xbf8f
0000c6  b280              UXTH     r0,r0
0000c8  04cb              LSLS     r3,r1,#19
0000ca  ea000004          AND      r0,r0,r4
0000ce  d501              BPL      |L1.212|
0000d0  f4805080          EOR      r0,r0,#0x1000
                  |L1.212|
0000d4  0489              LSLS     r1,r1,#18
0000d6  d501              BPL      |L1.220|
0000d8  f4805000          EOR      r0,r0,#0x2000
                  |L1.220|
0000dc  f8c20c00          STR      r0,[r2,#0xc00]
;;;209    }
0000e0  bd10              POP      {r4,pc}
;;;210    
                          ENDP

                  SetDouBleBuffEPStall PROC
;;;218    *******************************************************************************/
;;;219    void SetDouBleBuffEPStall(u8 bEpNum, u8 bDir)
0000e2  b500              PUSH     {lr}
;;;220    {
0000e4  460a              MOV      r2,r1
0000e6  4603              MOV      r3,r0
;;;221      u16 Endpoint_DTOG_Status;
;;;222      Endpoint_DTOG_Status = GetENDPOINT(bEpNum);
0000e8  f7fffffe          BL       GetENDPOINT
;;;223      if (bDir == EP_DBUF_OUT)
;;;224      { /* OUT double buffered endpoint */
;;;225        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPRX_DTOG1);
0000ec  49c5              LDR      r1,|L1.1028|
0000ee  2a01              CMP      r2,#1                 ;223
0000f0  eb010183          ADD      r1,r1,r3,LSL #2
0000f4  d007              BEQ      |L1.262|
;;;226      }
;;;227      else if (bDir == EP_DBUF_IN)
0000f6  2a02              CMP      r2,#2
0000f8  d104              BNE      |L1.260|
;;;228      { /* IN double buffered endpoint */
;;;229        _SetENDPOINT(bEpNum, Endpoint_DTOG_Status & ~EPTX_DTOG1);
0000fa  f0200010          BIC      r0,r0,#0x10
0000fe  bf00              NOP                            ;225
                  |L1.256|
000100  f8c10c00          STR      r0,[r1,#0xc00]        ;225
                  |L1.260|
;;;230      }
;;;231    }
000104  bd00              POP      {pc}
                  |L1.262|
000106  f4205080          BIC      r0,r0,#0x1000         ;225
00010a  e7f9              B        |L1.256|
;;;232    
                          ENDP

                  GetEPTxStatus PROC
;;;239    *******************************************************************************/
;;;240    u16 GetEPTxStatus(u8 bEpNum)
00010c  49bd              LDR      r1,|L1.1028|
;;;241    {
;;;242      return(_GetEPTxStatus(bEpNum));
00010e  eb010080          ADD      r0,r1,r0,LSL #2
000112  f8d00c00          LDR      r0,[r0,#0xc00]
000116  f3c01001          UBFX     r0,r0,#4,#2
00011a  0100              LSLS     r0,r0,#4
;;;243    }
00011c  4770              BX       lr
;;;244    
                          ENDP

                  GetEPRxStatus PROC
;;;251    *******************************************************************************/
;;;252    u16 GetEPRxStatus(u8 bEpNum)
00011e  49b9              LDR      r1,|L1.1028|
;;;253    {
;;;254      return(_GetEPRxStatus(bEpNum));
000120  eb010080          ADD      r0,r1,r0,LSL #2
000124  f8d00c00          LDR      r0,[r0,#0xc00]
000128  f3c03001          UBFX     r0,r0,#12,#2
00012c  0300              LSLS     r0,r0,#12
;;;255    }
00012e  4770              BX       lr
;;;256    
                          ENDP

                  SetEPTxValid PROC
;;;263    *******************************************************************************/
;;;264    void SetEPTxValid(u8 bEpNum)
000130  49b4              LDR      r1,|L1.1028|
;;;265    {
;;;266      _SetEPTxStatus(bEpNum, EP_TX_VALID);
000132  eb010180          ADD      r1,r1,r0,LSL #2
000136  f8d10c00          LDR      r0,[r1,#0xc00]
00013a  f64872bf          MOV      r2,#0x8fbf
00013e  b280              UXTH     r0,r0
000140  4010              ANDS     r0,r0,r2
000142  f0800030          EOR      r0,r0,#0x30
000146  f8c10c00          STR      r0,[r1,#0xc00]
;;;267    }
00014a  4770              BX       lr
;;;268    
                          ENDP

                  SetEPRxValid PROC
;;;275    *******************************************************************************/
;;;276    void SetEPRxValid(u8 bEpNum)
00014c  49ad              LDR      r1,|L1.1028|
;;;277    {
;;;278      _SetEPRxStatus(bEpNum, EP_RX_VALID);
00014e  eb010180          ADD      r1,r1,r0,LSL #2
000152  f8d10c00          LDR      r0,[r1,#0xc00]
000156  f64b728f          MOV      r2,#0xbf8f
00015a  b280              UXTH     r0,r0
00015c  4010              ANDS     r0,r0,r2
00015e  f4805040          EOR      r0,r0,#0x3000
000162  f8c10c00          STR      r0,[r1,#0xc00]
;;;279    }
000166  4770              BX       lr
;;;280    
                          ENDP

                  SetEP_KIND PROC
;;;287    *******************************************************************************/
;;;288    void SetEP_KIND(u8 bEpNum)
000168  49a6              LDR      r1,|L1.1028|
;;;289    {
;;;290      _SetEP_KIND(bEpNum);
00016a  eb010080          ADD      r0,r1,r0,LSL #2
00016e  f8d01c00          LDR      r1,[r0,#0xc00]
000172  f648728f          MOV      r2,#0x8f8f
000176  b289              UXTH     r1,r1
000178  f4417180          ORR      r1,r1,#0x100
00017c  4011              ANDS     r1,r1,r2
00017e  f8c01c00          STR      r1,[r0,#0xc00]
;;;291    }
000182  4770              BX       lr
;;;292    
                          ENDP

                  ClearEP_KIND PROC
;;;299    *******************************************************************************/
;;;300    void ClearEP_KIND(u8 bEpNum)
000184  499f              LDR      r1,|L1.1028|
;;;301    {
;;;302      _ClearEP_KIND(bEpNum);
000186  eb010080          ADD      r0,r1,r0,LSL #2
00018a  f8d01c00          LDR      r1,[r0,#0xc00]
00018e  f648628f          MOV      r2,#0x8e8f
000192  b289              UXTH     r1,r1
000194  4011              ANDS     r1,r1,r2
000196  f8c01c00          STR      r1,[r0,#0xc00]
;;;303    }
00019a  4770              BX       lr
;;;304    /*******************************************************************************
                          ENDP

                  Clear_Status_Out PROC
;;;310    *******************************************************************************/
;;;311    void Clear_Status_Out(u8 bEpNum)
00019c  4999              LDR      r1,|L1.1028|
;;;312    {
;;;313      _ClearEP_KIND(bEpNum);
00019e  eb010080          ADD      r0,r1,r0,LSL #2
0001a2  f8d01c00          LDR      r1,[r0,#0xc00]
0001a6  f648628f          MOV      r2,#0x8e8f
0001aa  b289              UXTH     r1,r1
0001ac  4011              ANDS     r1,r1,r2
0001ae  f8c01c00          STR      r1,[r0,#0xc00]
;;;314    }
0001b2  4770              BX       lr
;;;315    /*******************************************************************************
                          ENDP

                  Set_Status_Out PROC
;;;321    *******************************************************************************/
;;;322    void Set_Status_Out(u8 bEpNum)
0001b4  4993              LDR      r1,|L1.1028|
;;;323    {
;;;324      _SetEP_KIND(bEpNum);
0001b6  eb010080          ADD      r0,r1,r0,LSL #2
0001ba  f8d01c00          LDR      r1,[r0,#0xc00]
0001be  f648728f          MOV      r2,#0x8f8f
0001c2  b289              UXTH     r1,r1
0001c4  f4417180          ORR      r1,r1,#0x100
0001c8  4011              ANDS     r1,r1,r2
0001ca  f8c01c00          STR      r1,[r0,#0xc00]
;;;325    }
0001ce  4770              BX       lr
;;;326    /*******************************************************************************
                          ENDP

                  SetEPDoubleBuff PROC
;;;332    *******************************************************************************/
;;;333    void SetEPDoubleBuff(u8 bEpNum)
0001d0  498c              LDR      r1,|L1.1028|
;;;334    {
;;;335      _SetEP_KIND(bEpNum);
0001d2  eb010080          ADD      r0,r1,r0,LSL #2
0001d6  f8d01c00          LDR      r1,[r0,#0xc00]
0001da  f648728f          MOV      r2,#0x8f8f
0001de  b289              UXTH     r1,r1
0001e0  f4417180          ORR      r1,r1,#0x100
0001e4  4011              ANDS     r1,r1,r2
0001e6  f8c01c00          STR      r1,[r0,#0xc00]
;;;336    }
0001ea  4770              BX       lr
;;;337    /*******************************************************************************
                          ENDP

                  ClearEPDoubleBuff PROC
;;;343    *******************************************************************************/
;;;344    void ClearEPDoubleBuff(u8 bEpNum)
0001ec  4985              LDR      r1,|L1.1028|
;;;345    {
;;;346      _ClearEP_KIND(bEpNum);
0001ee  eb010080          ADD      r0,r1,r0,LSL #2
0001f2  f8d01c00          LDR      r1,[r0,#0xc00]
0001f6  f648628f          MOV      r2,#0x8e8f
0001fa  b289              UXTH     r1,r1
0001fc  4011              ANDS     r1,r1,r2
0001fe  f8c01c00          STR      r1,[r0,#0xc00]
;;;347    }
000202  4770              BX       lr
;;;348    /*******************************************************************************
                          ENDP

                  GetTxStallStatus PROC
;;;354    *******************************************************************************/
;;;355    u16 GetTxStallStatus(u8 bEpNum)
000204  497f              LDR      r1,|L1.1028|
;;;356    {
;;;357      return(_GetTxStallStatus(bEpNum));
000206  eb010080          ADD      r0,r1,r0,LSL #2
00020a  f8d00c00          LDR      r0,[r0,#0xc00]
00020e  f3c01001          UBFX     r0,r0,#4,#2
000212  2801              CMP      r0,#1
000214  d000              BEQ      |L1.536|
000216  2000              MOVS     r0,#0
                  |L1.536|
;;;358    }
000218  4770              BX       lr
;;;359    /*******************************************************************************
                          ENDP

                  GetRxStallStatus PROC
;;;365    *******************************************************************************/
;;;366    u16 GetRxStallStatus(u8 bEpNum)
00021a  497a              LDR      r1,|L1.1028|
;;;367    {
;;;368      return(_GetRxStallStatus(bEpNum));
00021c  eb010080          ADD      r0,r1,r0,LSL #2
000220  f8d00c00          LDR      r0,[r0,#0xc00]
000224  f3c03001          UBFX     r0,r0,#12,#2
000228  2801              CMP      r0,#1
00022a  d000              BEQ      |L1.558|
00022c  2000              MOVS     r0,#0
                  |L1.558|
;;;369    }
00022e  4770              BX       lr
;;;370    /*******************************************************************************
                          ENDP

                  ClearEP_CTR_RX PROC
;;;376    *******************************************************************************/
;;;377    void ClearEP_CTR_RX(u8 bEpNum)
000230  4974              LDR      r1,|L1.1028|
;;;378    {
;;;379      _ClearEP_CTR_RX(bEpNum);
000232  eb010080          ADD      r0,r1,r0,LSL #2
000236  f8d01c00          LDR      r1,[r0,#0xc00]
00023a  f640728f          MOV      r2,#0xf8f
00023e  b289              UXTH     r1,r1
000240  4011              ANDS     r1,r1,r2
000242  f8c01c00          STR      r1,[r0,#0xc00]
;;;380    }
000246  4770              BX       lr
;;;381    /*******************************************************************************
                          ENDP

                  ClearEP_CTR_TX PROC
;;;387    *******************************************************************************/
;;;388    void ClearEP_CTR_TX(u8 bEpNum)
000248  496e              LDR      r1,|L1.1028|
;;;389    {
;;;390      _ClearEP_CTR_TX(bEpNum);
00024a  eb010080          ADD      r0,r1,r0,LSL #2
00024e  f8d01c00          LDR      r1,[r0,#0xc00]
000252  f648720f          MOV      r2,#0x8f0f
000256  b289              UXTH     r1,r1
000258  4011              ANDS     r1,r1,r2
00025a  f8c01c00          STR      r1,[r0,#0xc00]
;;;391    }
00025e  4770              BX       lr
;;;392    /*******************************************************************************
                          ENDP

                  ToggleDTOG_RX PROC
;;;398    *******************************************************************************/
;;;399    void ToggleDTOG_RX(u8 bEpNum)
000260  4968              LDR      r1,|L1.1028|
;;;400    {
;;;401      _ToggleDTOG_RX(bEpNum);
000262  eb010080          ADD      r0,r1,r0,LSL #2
000266  f8d01c00          LDR      r1,[r0,#0xc00]
00026a  f648728f          MOV      r2,#0x8f8f
00026e  b289              UXTH     r1,r1
000270  4011              ANDS     r1,r1,r2
000272  f4414180          ORR      r1,r1,#0x4000
000276  f8c01c00          STR      r1,[r0,#0xc00]
;;;402    }
00027a  4770              BX       lr
;;;403    /*******************************************************************************
                          ENDP

                  ToggleDTOG_TX PROC
;;;409    *******************************************************************************/
;;;410    void ToggleDTOG_TX(u8 bEpNum)
00027c  4961              LDR      r1,|L1.1028|
;;;411    {
;;;412      _ToggleDTOG_TX(bEpNum);
00027e  eb010080          ADD      r0,r1,r0,LSL #2
000282  f8d01c00          LDR      r1,[r0,#0xc00]
000286  f648728f          MOV      r2,#0x8f8f
00028a  b289              UXTH     r1,r1
00028c  4011              ANDS     r1,r1,r2
00028e  f0410140          ORR      r1,r1,#0x40
000292  f8c01c00          STR      r1,[r0,#0xc00]
;;;413    }
000296  4770              BX       lr
;;;414    /*******************************************************************************
                          ENDP

                  ClearDTOG_RX PROC
;;;420    *******************************************************************************/
;;;421    void ClearDTOG_RX(u8 bEpNum)
000298  495a              LDR      r1,|L1.1028|
;;;422    {
;;;423      _ClearDTOG_RX(bEpNum);
00029a  eb010080          ADD      r0,r1,r0,LSL #2
00029e  f8d01c00          LDR      r1,[r0,#0xc00]
0002a2  0449              LSLS     r1,r1,#17
0002a4  d509              BPL      |L1.698|
0002a6  f8d01c00          LDR      r1,[r0,#0xc00]
0002aa  f648728f          MOV      r2,#0x8f8f
0002ae  b289              UXTH     r1,r1
0002b0  4011              ANDS     r1,r1,r2
0002b2  f4414180          ORR      r1,r1,#0x4000
0002b6  f8c01c00          STR      r1,[r0,#0xc00]
                  |L1.698|
;;;424    }
0002ba  4770              BX       lr
;;;425    /*******************************************************************************
                          ENDP

                  ClearDTOG_TX PROC
;;;431    *******************************************************************************/
;;;432    void ClearDTOG_TX(u8 bEpNum)
0002bc  4951              LDR      r1,|L1.1028|
;;;433    {
;;;434      _ClearDTOG_TX(bEpNum);
0002be  eb010080          ADD      r0,r1,r0,LSL #2
0002c2  f8d01c00          LDR      r1,[r0,#0xc00]
0002c6  0649              LSLS     r1,r1,#25
0002c8  d509              BPL      |L1.734|
0002ca  f8d01c00          LDR      r1,[r0,#0xc00]
0002ce  f648728f          MOV      r2,#0x8f8f
0002d2  b289              UXTH     r1,r1
0002d4  4011              ANDS     r1,r1,r2
0002d6  f0410140          ORR      r1,r1,#0x40
0002da  f8c01c00          STR      r1,[r0,#0xc00]
                  |L1.734|
;;;435    }
0002de  4770              BX       lr
;;;436    /*******************************************************************************
                          ENDP

                  SetEPAddress PROC
;;;443    *******************************************************************************/
;;;444    void SetEPAddress(u8 bEpNum, u8 bAddr)
0002e0  4a48              LDR      r2,|L1.1028|
;;;445    {
;;;446      _SetEPAddress(bEpNum, bAddr);
0002e2  eb020080          ADD      r0,r2,r0,LSL #2
0002e6  f8d02c00          LDR      r2,[r0,#0xc00]
0002ea  f648738f          MOV      r3,#0x8f8f
0002ee  b292              UXTH     r2,r2
0002f0  401a              ANDS     r2,r2,r3
0002f2  430a              ORRS     r2,r2,r1
0002f4  f8c02c00          STR      r2,[r0,#0xc00]
;;;447    }
0002f8  4770              BX       lr
;;;448    /*******************************************************************************
                          ENDP

                  GetEPAddress PROC
;;;454    *******************************************************************************/
;;;455    u8 GetEPAddress(u8 bEpNum)
0002fa  4942              LDR      r1,|L1.1028|
;;;456    {
;;;457      return(_GetEPAddress(bEpNum));
0002fc  eb010080          ADD      r0,r1,r0,LSL #2
000300  f8d00c00          LDR      r0,[r0,#0xc00]
000304  f3c00003          UBFX     r0,r0,#0,#4
;;;458    }
000308  4770              BX       lr
;;;459    /*******************************************************************************
                          ENDP

                  SetEPTxAddr PROC
;;;466    *******************************************************************************/
;;;467    void SetEPTxAddr(u8 bEpNum, u16 wAddr)
00030a  4a3d              LDR      r2,|L1.1024|
;;;468    {
;;;469      _SetEPTxAddr(bEpNum, wAddr);
00030c  f0210101          BIC      r1,r1,#1
000310  6813              LDR      r3,[r2,#0]
000312  4a3d              LDR      r2,|L1.1032|
000314  b29b              UXTH     r3,r3
000316  eb0300c0          ADD      r0,r3,r0,LSL #3
00031a  f8421010          STR      r1,[r2,r0,LSL #1]
;;;470    }
00031e  4770              BX       lr
;;;471    /*******************************************************************************
                          ENDP

                  SetEPRxAddr PROC
;;;478    *******************************************************************************/
;;;479    void SetEPRxAddr(u8 bEpNum, u16 wAddr)
000320  4a37              LDR      r2,|L1.1024|
;;;480    {
;;;481      _SetEPRxAddr(bEpNum, wAddr);
000322  f0210101          BIC      r1,r1,#1
000326  6813              LDR      r3,[r2,#0]
000328  4a37              LDR      r2,|L1.1032|
00032a  b29b              UXTH     r3,r3
00032c  eb0300c0          ADD      r0,r3,r0,LSL #3
000330  eb020040          ADD      r0,r2,r0,LSL #1
000334  6081              STR      r1,[r0,#8]
;;;482    }
000336  4770              BX       lr
;;;483    /*******************************************************************************
                          ENDP

                  GetEPTxAddr PROC
;;;489    *******************************************************************************/
;;;490    u16 GetEPTxAddr(u8 bEpNum)
000338  4931              LDR      r1,|L1.1024|
;;;491    {
;;;492      return(_GetEPTxAddr(bEpNum));
00033a  6809              LDR      r1,[r1,#0]
00033c  b289              UXTH     r1,r1
00033e  eb0100c0          ADD      r0,r1,r0,LSL #3
000342  4931              LDR      r1,|L1.1032|
000344  f8510010          LDR      r0,[r1,r0,LSL #1]
000348  b280              UXTH     r0,r0
;;;493    }
00034a  4770              BX       lr
;;;494    /*******************************************************************************
                          ENDP

                  GetEPRxAddr PROC
;;;500    *******************************************************************************/
;;;501    u16 GetEPRxAddr(u8 bEpNum)
00034c  492c              LDR      r1,|L1.1024|
;;;502    {
;;;503      return(_GetEPRxAddr(bEpNum));
00034e  6809              LDR      r1,[r1,#0]
000350  b289              UXTH     r1,r1
000352  eb0100c0          ADD      r0,r1,r0,LSL #3
000356  492c              LDR      r1,|L1.1032|
000358  eb010040          ADD      r0,r1,r0,LSL #1
00035c  6880              LDR      r0,[r0,#8]
00035e  b280              UXTH     r0,r0
;;;504    }
000360  4770              BX       lr
;;;505    /*******************************************************************************
                          ENDP

                  SetEPTxCount PROC
;;;512    *******************************************************************************/
;;;513    void SetEPTxCount(u8 bEpNum, u16 wCount)
000362  4a27              LDR      r2,|L1.1024|
;;;514    {
;;;515      _SetEPTxCount(bEpNum, wCount);
000364  6812              LDR      r2,[r2,#0]
000366  4b28              LDR      r3,|L1.1032|
000368  b292              UXTH     r2,r2
00036a  eb0200c0          ADD      r0,r2,r0,LSL #3
00036e  eb030040          ADD      r0,r3,r0,LSL #1
000372  6041              STR      r1,[r0,#4]
;;;516    }
000374  4770              BX       lr
;;;517    /*******************************************************************************
                          ENDP

                  SetEPCountRxReg PROC
;;;524    *******************************************************************************/
;;;525    void SetEPCountRxReg(u32 *pdwReg, u16 wCount)
000376  293e              CMP      r1,#0x3e
;;;526    {
;;;527      _SetEPCountRxReg(dwReg, wCount);
000378  d909              BLS      |L1.910|
00037a  094a              LSRS     r2,r1,#5
00037c  06c9              LSLS     r1,r1,#27
00037e  d101              BNE      |L1.900|
000380  1e52              SUBS     r2,r2,#1
000382  b292              UXTH     r2,r2
                  |L1.900|
000384  f44f4100          MOV      r1,#0x8000
000388  ea412182          ORR      r1,r1,r2,LSL #10
00038c  e005              B        |L1.922|
                  |L1.910|
00038e  084a              LSRS     r2,r1,#1
000390  07c9              LSLS     r1,r1,#31
000392  d001              BEQ      |L1.920|
000394  1c52              ADDS     r2,r2,#1
000396  b292              UXTH     r2,r2
                  |L1.920|
000398  0291              LSLS     r1,r2,#10
                  |L1.922|
00039a  6001              STR      r1,[r0,#0]
;;;528    }
00039c  4770              BX       lr
;;;529    /*******************************************************************************
                          ENDP

                  SetEPRxCount PROC
;;;536    *******************************************************************************/
;;;537    void SetEPRxCount(u8 bEpNum, u16 wCount)
00039e  4a18              LDR      r2,|L1.1024|
;;;538    {
;;;539      _SetEPRxCount(bEpNum, wCount);
0003a0  6813              LDR      r3,[r2,#0]
0003a2  4a1a              LDR      r2,|L1.1036|
0003a4  b29b              UXTH     r3,r3
0003a6  eb0300c0          ADD      r0,r3,r0,LSL #3
0003aa  eb020240          ADD      r2,r2,r0,LSL #1
0003ae  293e              CMP      r1,#0x3e
0003b0  d909              BLS      |L1.966|
0003b2  0948              LSRS     r0,r1,#5
0003b4  06c9              LSLS     r1,r1,#27
0003b6  d101              BNE      |L1.956|
0003b8  1e40              SUBS     r0,r0,#1
0003ba  b280              UXTH     r0,r0
                  |L1.956|
0003bc  f44f4100          MOV      r1,#0x8000
0003c0  ea412080          ORR      r0,r1,r0,LSL #10
0003c4  e005              B        |L1.978|
                  |L1.966|
0003c6  0848              LSRS     r0,r1,#1
0003c8  07c9              LSLS     r1,r1,#31
0003ca  d001              BEQ      |L1.976|
0003cc  1c40              ADDS     r0,r0,#1
0003ce  b280              UXTH     r0,r0
                  |L1.976|
0003d0  0280              LSLS     r0,r0,#10
                  |L1.978|
0003d2  6010              STR      r0,[r2,#0]
;;;540    }
0003d4  4770              BX       lr
;;;541    /*******************************************************************************
                          ENDP

                  GetEPTxCount PROC
;;;547    *******************************************************************************/
;;;548    u16 GetEPTxCount(u8 bEpNum)
0003d6  490a              LDR      r1,|L1.1024|
;;;549    {
;;;550      return(_GetEPTxCount(bEpNum));
0003d8  6809              LDR      r1,[r1,#0]
0003da  b289              UXTH     r1,r1
0003dc  eb0100c0          ADD      r0,r1,r0,LSL #3
0003e0  4909              LDR      r1,|L1.1032|
0003e2  eb010040          ADD      r0,r1,r0,LSL #1
0003e6  6840              LDR      r0,[r0,#4]
0003e8  f3c00009          UBFX     r0,r0,#0,#10
                  |L1.1004|
;;;551    }
0003ec  4770              BX       lr
0003ee  0000              DCW      0x0000
                  |L1.1008|
                          DCD      0x40005c40
                  |L1.1012|
                          DCD      0x40005c44
                  |L1.1016|
                          DCD      0x40005c48
                  |L1.1020|
                          DCD      0x40005c4c
                  |L1.1024|
                          DCD      0x40005c50
                  |L1.1028|
                          DCD      0x40005000
                  |L1.1032|
                          DCD      0x40006000
                  |L1.1036|
                          DCD      0x4000600c
                          ENDP

                  GetEPRxCount PROC
;;;558    *******************************************************************************/
;;;559    u16 GetEPRxCount(u8 bEpNum)
000410  49a6              LDR      r1,|L1.1708|
;;;560    {
;;;561      return(_GetEPRxCount(bEpNum));
000412  6809              LDR      r1,[r1,#0]
000414  b289              UXTH     r1,r1
000416  eb0100c0          ADD      r0,r1,r0,LSL #3
00041a  49a5              LDR      r1,|L1.1712|
00041c  eb010040          ADD      r0,r1,r0,LSL #1
000420  68c0              LDR      r0,[r0,#0xc]
000422  f3c00009          UBFX     r0,r0,#0,#10
;;;562    }
000426  e7e1              B        |L1.1004|
;;;563    /*******************************************************************************
                          ENDP

                  SetEPDblBuffAddr PROC
;;;571    *******************************************************************************/
;;;572    void SetEPDblBuffAddr(u8 bEpNum, u16 wBuf0Addr, u16 wBuf1Addr)
000428  b530              PUSH     {r4,r5,lr}
;;;573    {
;;;574      _SetEPDblBuffAddr(bEpNum, wBuf0Addr, wBuf1Addr);
00042a  f0210401          BIC      r4,r1,#1
00042e  499f              LDR      r1,|L1.1708|
000430  680d              LDR      r5,[r1,#0]
000432  4b9f              LDR      r3,|L1.1712|
000434  b2ad              UXTH     r5,r5
000436  eb0505c0          ADD      r5,r5,r0,LSL #3
00043a  f0220201          BIC      r2,r2,#1
00043e  f8434015          STR      r4,[r3,r5,LSL #1]
000442  6809              LDR      r1,[r1,#0]
000444  b289              UXTH     r1,r1
000446  eb0100c0          ADD      r0,r1,r0,LSL #3
00044a  eb030040          ADD      r0,r3,r0,LSL #1
00044e  6082              STR      r2,[r0,#8]
;;;575    }
000450  bd30              POP      {r4,r5,pc}
;;;576    /*******************************************************************************
                          ENDP

                  SetEPDblBuf0Addr PROC
;;;583    *******************************************************************************/
;;;584    void SetEPDblBuf0Addr(u8 bEpNum, u16 wBuf0Addr)
000452  4a96              LDR      r2,|L1.1708|
;;;585    {
;;;586      _SetEPDblBuf0Addr(bEpNum, wBuf0Addr);
000454  f0210101          BIC      r1,r1,#1
000458  6813              LDR      r3,[r2,#0]
00045a  4a95              LDR      r2,|L1.1712|
00045c  b29b              UXTH     r3,r3
00045e  eb0300c0          ADD      r0,r3,r0,LSL #3
000462  f8421010          STR      r1,[r2,r0,LSL #1]
;;;587    }
000466  e7c1              B        |L1.1004|
;;;588    /*******************************************************************************
                          ENDP

                  SetEPDblBuf1Addr PROC
;;;595    *******************************************************************************/
;;;596    void SetEPDblBuf1Addr(u8 bEpNum, u16 wBuf1Addr)
000468  4a90              LDR      r2,|L1.1708|
;;;597    {
;;;598      _SetEPDblBuf1Addr(bEpNum, wBuf1Addr);
00046a  f0210101          BIC      r1,r1,#1
00046e  6813              LDR      r3,[r2,#0]
000470  4a8f              LDR      r2,|L1.1712|
000472  b29b              UXTH     r3,r3
000474  eb0300c0          ADD      r0,r3,r0,LSL #3
000478  eb020040          ADD      r0,r2,r0,LSL #1
00047c  6081              STR      r1,[r0,#8]
;;;599    }
00047e  e7b5              B        |L1.1004|
;;;600    /*******************************************************************************
                          ENDP

                  GetEPDblBuf0Addr PROC
;;;606    *******************************************************************************/
;;;607    u16 GetEPDblBuf0Addr(u8 bEpNum)
000480  498a              LDR      r1,|L1.1708|
;;;608    {
;;;609      return(_GetEPDblBuf0Addr(bEpNum));
000482  6809              LDR      r1,[r1,#0]
000484  b289              UXTH     r1,r1
000486  eb0100c0          ADD      r0,r1,r0,LSL #3
00048a  4989              LDR      r1,|L1.1712|
00048c  f8510010          LDR      r0,[r1,r0,LSL #1]
000490  b280              UXTH     r0,r0
;;;610    }
000492  e7ab              B        |L1.1004|
;;;611    /*******************************************************************************
                          ENDP

                  GetEPDblBuf1Addr PROC
;;;617    *******************************************************************************/
;;;618    u16 GetEPDblBuf1Addr(u8 bEpNum)
000494  4985              LDR      r1,|L1.1708|
;;;619    {
;;;620      return(_GetEPDblBuf1Addr(bEpNum));
000496  6809              LDR      r1,[r1,#0]
000498  b289              UXTH     r1,r1
00049a  eb0100c0          ADD      r0,r1,r0,LSL #3
00049e  4984              LDR      r1,|L1.1712|
0004a0  eb010040          ADD      r0,r1,r0,LSL #1
0004a4  6880              LDR      r0,[r0,#8]
0004a6  b280              UXTH     r0,r0
;;;621    }
0004a8  e7a0              B        |L1.1004|
;;;622    /*******************************************************************************
                          ENDP

                  SetEPDblBuffCount PROC
;;;629    *******************************************************************************/
;;;630    void SetEPDblBuffCount(u8 bEpNum, u8 bDir, u16 wCount)
0004aa  e92d43f0          PUSH     {r4-r9,lr}
;;;631    {
;;;632      _SetEPDblBuffCount(bEpNum, bDir, wCount);
0004ae  4b81              LDR      r3,|L1.1716|
0004b0  2901              CMP      r1,#1
0004b2  d014              BEQ      |L1.1246|
0004b4  2902              CMP      r1,#2
0004b6  d110              BNE      |L1.1242|
0004b8  f8d34c50          LDR      r4,[r3,#0xc50]
0004bc  497c              LDR      r1,|L1.1712|
0004be  b2a4              UXTH     r4,r4
0004c0  eb0404c0          ADD      r4,r4,r0,LSL #3
0004c4  eb010444          ADD      r4,r1,r4,LSL #1
0004c8  6062              STR      r2,[r4,#4]
0004ca  f8d33c50          LDR      r3,[r3,#0xc50]
0004ce  b29b              UXTH     r3,r3
0004d0  eb0300c0          ADD      r0,r3,r0,LSL #3
0004d4  eb010040          ADD      r0,r1,r0,LSL #1
0004d8  60c2              STR      r2,[r0,#0xc]
                  |L1.1242|
;;;633    }
0004da  e8bd83f0          POP      {r4-r9,pc}
                  |L1.1246|
0004de  4699              MOV      r9,r3                 ;632
0004e0  f8d33c50          LDR      r3,[r3,#0xc50]        ;632
0004e4  4972              LDR      r1,|L1.1712|
0004e6  b29b              UXTH     r3,r3                 ;632
0004e8  1d09              ADDS     r1,r1,#4              ;632
0004ea  eb0303c0          ADD      r3,r3,r0,LSL #3       ;632
0004ee  eb010643          ADD      r6,r1,r3,LSL #1       ;632
0004f2  13cf              ASRS     r7,r1,#15             ;632
0004f4  0953              LSRS     r3,r2,#5              ;632
0004f6  0851              LSRS     r1,r2,#1              ;632
0004f8  1e5c              SUBS     r4,r3,#1              ;632
0004fa  f1010801          ADD      r8,r1,#1              ;632
0004fe  2a3e              CMP      r2,#0x3e              ;632
000500  d907              BLS      |L1.1298|
000502  461d              MOV      r5,r3                 ;632
000504  ea5f6cc2          LSLS     r12,r2,#27            ;632
000508  d100              BNE      |L1.1292|
00050a  b2a5              UXTH     r5,r4                 ;632
                  |L1.1292|
00050c  ea472585          ORR      r5,r7,r5,LSL #10      ;632
000510  e006              B        |L1.1312|
                  |L1.1298|
000512  07d5              LSLS     r5,r2,#31             ;632
000514  d003              BEQ      |L1.1310|
000516  ea4f4508          LSL      r5,r8,#16             ;632
00051a  09ad              LSRS     r5,r5,#6              ;632
00051c  e000              B        |L1.1312|
                  |L1.1310|
00051e  028d              LSLS     r5,r1,#10             ;632
                  |L1.1312|
000520  6035              STR      r5,[r6,#0]            ;632
000522  f8d95c50          LDR      r5,[r9,#0xc50]        ;632
000526  4e62              LDR      r6,|L1.1712|
000528  b2ad              UXTH     r5,r5                 ;632
00052a  360c              ADDS     r6,r6,#0xc            ;632
00052c  eb0500c0          ADD      r0,r5,r0,LSL #3       ;632
000530  eb060040          ADD      r0,r6,r0,LSL #1       ;632
000534  2a3e              CMP      r2,#0x3e              ;632
000536  d905              BLS      |L1.1348|
000538  06d1              LSLS     r1,r2,#27             ;632
00053a  d100              BNE      |L1.1342|
00053c  b2a3              UXTH     r3,r4                 ;632
                  |L1.1342|
00053e  ea472183          ORR      r1,r7,r3,LSL #10      ;632
000542  e004              B        |L1.1358|
                  |L1.1348|
000544  07d2              LSLS     r2,r2,#31             ;632
000546  d001              BEQ      |L1.1356|
000548  fa1ff188          UXTH     r1,r8                 ;632
                  |L1.1356|
00054c  0289              LSLS     r1,r1,#10             ;632
                  |L1.1358|
00054e  6001              STR      r1,[r0,#0]            ;632
000550  e7c3              B        |L1.1242|
;;;634    /*******************************************************************************
                          ENDP

                  SetEPDblBuf0Count PROC
;;;641    *******************************************************************************/
;;;642    void SetEPDblBuf0Count(u8 bEpNum, u8 bDir, u16 wCount)
000552  4b58              LDR      r3,|L1.1716|
;;;643    {
;;;644      _SetEPDblBuf0Count(bEpNum, bDir, wCount);
000554  2901              CMP      r1,#1
000556  d00b              BEQ      |L1.1392|
000558  2902              CMP      r1,#2
00055a  d108              BNE      |L1.1390|
00055c  f8d31c50          LDR      r1,[r3,#0xc50]
000560  4b53              LDR      r3,|L1.1712|
000562  b289              UXTH     r1,r1
000564  eb0100c0          ADD      r0,r1,r0,LSL #3
000568  eb030040          ADD      r0,r3,r0,LSL #1
00056c  6042              STR      r2,[r0,#4]
                  |L1.1390|
;;;645    }
00056e  e73d              B        |L1.1004|
                  |L1.1392|
000570  f8d31c50          LDR      r1,[r3,#0xc50]        ;644
000574  4b4e              LDR      r3,|L1.1712|
000576  b289              UXTH     r1,r1                 ;644
000578  1d1b              ADDS     r3,r3,#4              ;644
00057a  eb0100c0          ADD      r0,r1,r0,LSL #3       ;644
00057e  eb030140          ADD      r1,r3,r0,LSL #1       ;644
000582  2a3e              CMP      r2,#0x3e              ;644
000584  d909              BLS      |L1.1434|
000586  0950              LSRS     r0,r2,#5              ;644
000588  06d2              LSLS     r2,r2,#27             ;644
00058a  d101              BNE      |L1.1424|
00058c  1e40              SUBS     r0,r0,#1              ;644
00058e  b280              UXTH     r0,r0                 ;644
                  |L1.1424|
000590  f44f4200          MOV      r2,#0x8000            ;644
000594  ea422080          ORR      r0,r2,r0,LSL #10      ;644
000598  e005              B        |L1.1446|
                  |L1.1434|
00059a  0850              LSRS     r0,r2,#1              ;644
00059c  07d2              LSLS     r2,r2,#31             ;644
00059e  d001              BEQ      |L1.1444|
0005a0  1c40              ADDS     r0,r0,#1              ;644
0005a2  b280              UXTH     r0,r0                 ;644
                  |L1.1444|
0005a4  0280              LSLS     r0,r0,#10             ;644
                  |L1.1446|
0005a6  6008              STR      r0,[r1,#0]            ;644
0005a8  e720              B        |L1.1004|
;;;646    /*******************************************************************************
                          ENDP

                  SetEPDblBuf1Count PROC
;;;653    *******************************************************************************/
;;;654    void SetEPDblBuf1Count(u8 bEpNum, u8 bDir, u16 wCount)
0005aa  4b42              LDR      r3,|L1.1716|
;;;655    {
;;;656      _SetEPDblBuf1Count(bEpNum, bDir, wCount);
0005ac  2901              CMP      r1,#1
0005ae  d00b              BEQ      |L1.1480|
0005b0  2902              CMP      r1,#2
0005b2  d108              BNE      |L1.1478|
0005b4  f8d31c50          LDR      r1,[r3,#0xc50]
0005b8  4b3d              LDR      r3,|L1.1712|
0005ba  b289              UXTH     r1,r1
0005bc  eb0100c0          ADD      r0,r1,r0,LSL #3
0005c0  eb030040          ADD      r0,r3,r0,LSL #1
0005c4  60c2              STR      r2,[r0,#0xc]
                  |L1.1478|
;;;657    }
0005c6  e711              B        |L1.1004|
                  |L1.1480|
0005c8  f8d31c50          LDR      r1,[r3,#0xc50]        ;656
0005cc  4b38              LDR      r3,|L1.1712|
0005ce  b289              UXTH     r1,r1                 ;656
0005d0  330c              ADDS     r3,r3,#0xc            ;656
0005d2  eb0100c0          ADD      r0,r1,r0,LSL #3       ;656
0005d6  eb030140          ADD      r1,r3,r0,LSL #1       ;656
0005da  2a3e              CMP      r2,#0x3e              ;656
0005dc  d909              BLS      |L1.1522|
0005de  0950              LSRS     r0,r2,#5              ;656
0005e0  06d2              LSLS     r2,r2,#27             ;656
0005e2  d101              BNE      |L1.1512|
0005e4  1e40              SUBS     r0,r0,#1              ;656
0005e6  b280              UXTH     r0,r0                 ;656
                  |L1.1512|
0005e8  f44f4200          MOV      r2,#0x8000            ;656
0005ec  ea422080          ORR      r0,r2,r0,LSL #10      ;656
0005f0  e005              B        |L1.1534|
                  |L1.1522|
0005f2  0850              LSRS     r0,r2,#1              ;656
0005f4  07d2              LSLS     r2,r2,#31             ;656
0005f6  d001              BEQ      |L1.1532|
0005f8  1c40              ADDS     r0,r0,#1              ;656
0005fa  b280              UXTH     r0,r0                 ;656
                  |L1.1532|
0005fc  0280              LSLS     r0,r0,#10             ;656
                  |L1.1534|
0005fe  6008              STR      r0,[r1,#0]            ;656
000600  e6f4              B        |L1.1004|
;;;658    /*******************************************************************************
                          ENDP

                  GetEPDblBuf0Count PROC
;;;665    *******************************************************************************/
;;;666    u16 GetEPDblBuf0Count(u8 bEpNum)
000602  492a              LDR      r1,|L1.1708|
;;;667    {
;;;668      return(_GetEPDblBuf0Count(bEpNum));
000604  6809              LDR      r1,[r1,#0]
000606  b289              UXTH     r1,r1
000608  eb0100c0          ADD      r0,r1,r0,LSL #3
00060c  4928              LDR      r1,|L1.1712|
00060e  eb010040          ADD      r0,r1,r0,LSL #1
000612  6840              LDR      r0,[r0,#4]
000614  f3c00009          UBFX     r0,r0,#0,#10
;;;669    }
000618  e6e8              B        |L1.1004|
;;;670    /*******************************************************************************
                          ENDP

                  GetEPDblBuf1Count PROC
;;;677    *******************************************************************************/
;;;678    u16 GetEPDblBuf1Count(u8 bEpNum)
00061a  4924              LDR      r1,|L1.1708|
;;;679    {
;;;680      return(_GetEPDblBuf1Count(bEpNum));
00061c  6809              LDR      r1,[r1,#0]
00061e  b289              UXTH     r1,r1
000620  eb0100c0          ADD      r0,r1,r0,LSL #3
000624  4922              LDR      r1,|L1.1712|
000626  eb010040          ADD      r0,r1,r0,LSL #1
00062a  68c0              LDR      r0,[r0,#0xc]
00062c  f3c00009          UBFX     r0,r0,#0,#10
;;;681    }
000630  e6dc              B        |L1.1004|
;;;682    /*******************************************************************************
                          ENDP

                  GetEPDblBufDir PROC
;;;689    *******************************************************************************/
;;;690    EP_DBUF_DIR GetEPDblBufDir(u8 bEpNum)
000632  4920              LDR      r1,|L1.1716|
;;;691    {
;;;692      if ((u16)(*_pEPRxCount(bEpNum) & 0xFC00) != 0)
000634  f8d13c50          LDR      r3,[r1,#0xc50]
000638  4a1d              LDR      r2,|L1.1712|
00063a  b29b              UXTH     r3,r3
00063c  eb0303c0          ADD      r3,r3,r0,LSL #3
000640  eb020343          ADD      r3,r2,r3,LSL #1
000644  68db              LDR      r3,[r3,#0xc]
000646  f4134f7c          TST      r3,#0xfc00
00064a  d001              BEQ      |L1.1616|
;;;693        return(EP_DBUF_OUT);
00064c  2001              MOVS     r0,#1
                  |L1.1614|
;;;694      else if (((u16)(*_pEPTxCount(bEpNum)) & 0x03FF) != 0)
;;;695        return(EP_DBUF_IN);
;;;696      else
;;;697        return(EP_DBUF_ERR);
;;;698    }
00064e  e6cd              B        |L1.1004|
                  |L1.1616|
000650  f8d11c50          LDR      r1,[r1,#0xc50]        ;694
000654  b289              UXTH     r1,r1                 ;694
000656  eb0100c0          ADD      r0,r1,r0,LSL #3       ;694
00065a  eb020040          ADD      r0,r2,r0,LSL #1       ;694
00065e  6840              LDR      r0,[r0,#4]            ;694
000660  0580              LSLS     r0,r0,#22             ;694
000662  d0f4              BEQ      |L1.1614|
000664  2002              MOVS     r0,#2                 ;695
000666  e6c1              B        |L1.1004|
;;;699    /*******************************************************************************
                          ENDP

                  FreeUserBuffer PROC
;;;706    *******************************************************************************/
;;;707    void FreeUserBuffer(u8 bEpNum, u8 bDir)
000668  4b12              LDR      r3,|L1.1716|
;;;708    {
;;;709      if (bDir == EP_DBUF_OUT)
;;;710      { /* OUT double buffered endpoint */
;;;711        _ToggleDTOG_TX(bEpNum);
00066a  f648728f          MOV      r2,#0x8f8f
00066e  eb030080          ADD      r0,r3,r0,LSL #2
000672  2901              CMP      r1,#1                 ;709
000674  d00b              BEQ      |L1.1678|
;;;712      }
;;;713      else if (bDir == EP_DBUF_IN)
000676  2902              CMP      r1,#2
000678  d108              BNE      |L1.1676|
;;;714      { /* IN double buffered endpoint */
;;;715        _ToggleDTOG_RX(bEpNum);
00067a  f8d01c00          LDR      r1,[r0,#0xc00]
00067e  b289              UXTH     r1,r1
000680  4011              ANDS     r1,r1,r2
000682  f4414180          ORR      r1,r1,#0x4000
000686  bf00              NOP                            ;711
                  |L1.1672|
000688  f8c01c00          STR      r1,[r0,#0xc00]        ;711
                  |L1.1676|
;;;716      }
;;;717    }
00068c  e6ae              B        |L1.1004|
                  |L1.1678|
00068e  f8d01c00          LDR      r1,[r0,#0xc00]        ;711
000692  b289              UXTH     r1,r1                 ;711
000694  4011              ANDS     r1,r1,r2              ;711
000696  f0410140          ORR      r1,r1,#0x40           ;711
00069a  e7f5              B        |L1.1672|
;;;718    
                          ENDP

                  ToWord PROC
;;;725    *******************************************************************************/
;;;726    u16 ToWord(u8 bh, u8 bl)
00069c  ea412000          ORR      r0,r1,r0,LSL #8
;;;727    {
;;;728      u16 wRet;
;;;729      wRet = (u16)bl | ((u16)bh << 8);
;;;730      return(wRet);
;;;731    }
0006a0  e6a4              B        |L1.1004|
;;;732    /*******************************************************************************
                          ENDP

                  ByteSwap PROC
;;;738    *******************************************************************************/
;;;739    u16 ByteSwap(u16 wSwW)
0006a2  b2c1              UXTB     r1,r0
;;;740    {
;;;741      u8 bTemp;
;;;742      u16 wRet;
;;;743      bTemp = (u8)(wSwW & 0xff);
;;;744      wRet =  (wSwW >> 8) | ((u16)bTemp << 8);
0006a4  0a00              LSRS     r0,r0,#8
0006a6  ea402001          ORR      r0,r0,r1,LSL #8
;;;745      return(wRet);
;;;746    }
0006aa  e69f              B        |L1.1004|
;;;747    
                          ENDP

                  |L1.1708|
                          DCD      0x40005c50
                  |L1.1712|
                          DCD      0x40006000
                  |L1.1716|
                          DCD      0x40005000
