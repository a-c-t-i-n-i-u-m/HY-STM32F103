; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--split_sections --debug -c --asm --interleave -o.\Obj\stm32f10x_exti.o --depend=.\Obj\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -O3 -I.\usb_library\inc -I..\USB_test -I.\FWlib\inc -I.\user -Id:\Keil\ARM\INC -Id:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Obj\stm32f10x_exti.crf FWlib\SRC\stm32f10x_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;200      */
;;;201    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;202    {
;;;203      /* Check the parameters */
;;;204      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;205      
;;;206      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;207    }
000004  4770              BX       lr
;;;208    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;241      */
;;;242    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;243    {
;;;244      /* Check the parameters */
;;;245      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;246      
;;;247      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;248    }
000004  4770              BX       lr
;;;249    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40010414

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;84       */
;;;85     void EXTI_DeInit(void)
000000  4804              LDR      r0,|L3.20|
;;;86     {
;;;87       EXTI->IMR = 0x00000000;
000002  2100              MOVS     r1,#0
000004  6001              STR      r1,[r0,#0]
;;;88       EXTI->EMR = 0x00000000;
000006  6041              STR      r1,[r0,#4]
;;;89       EXTI->RTSR = 0x00000000; 
000008  6081              STR      r1,[r0,#8]
;;;90       EXTI->FTSR = 0x00000000; 
00000a  60c1              STR      r1,[r0,#0xc]
;;;91       EXTI->PR = 0x0007FFFF;
00000c  4902              LDR      r1,|L3.24|
00000e  6141              STR      r1,[r0,#0x14]
;;;92     }
000010  4770              BX       lr
;;;93     
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      0x40010400
                  |L3.24|
                          DCD      0x0007ffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;161      */
;;;162    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;163    {
;;;164      /* Check the parameters */
;;;165      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;166      
;;;167      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  ea420200          ORR      r2,r2,r0
000008  600a              STR      r2,[r1,#0]
;;;168    }
00000a  4770              BX       lr
;;;169    
                          ENDP

                  |L4.12|
                          DCD      0x40010410

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;176      */
;;;177    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L5.16|
;;;178    {
000002  4601              MOV      r1,r0
;;;179      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;180      /* Check the parameters */
;;;181      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;182      
;;;183      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L5.14|
;;;184      {
;;;185        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;186      }
;;;187      else
;;;188      {
;;;189        bitstatus = RESET;
;;;190      }
;;;191      return bitstatus;
;;;192    }
00000e  4770              BX       lr
;;;193    
                          ENDP

                  |L5.16|
                          DCD      0x40010414

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;215      */
;;;216    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4b06              LDR      r3,|L6.28|
;;;217    {
000002  4601              MOV      r1,r0
;;;218      ITStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;219      uint32_t enablestatus = 0;
;;;220      /* Check the parameters */
;;;221      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;222      
;;;223      enablestatus =  EXTI->IMR & EXTI_Line;
000006  681a              LDR      r2,[r3,#0]
;;;224      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
000008  695b              LDR      r3,[r3,#0x14]
00000a  ea020201          AND      r2,r2,r1              ;223
00000e  420b              TST      r3,r1
000010  d002              BEQ      |L6.24|
000012  2a00              CMP      r2,#0
000014  d000              BEQ      |L6.24|
;;;225      {
;;;226        bitstatus = SET;
000016  2001              MOVS     r0,#1
                  |L6.24|
;;;227      }
;;;228      else
;;;229      {
;;;230        bitstatus = RESET;
;;;231      }
;;;232      return bitstatus;
;;;233    }
000018  4770              BX       lr
;;;234    
                          ENDP

00001a  0000              DCW      0x0000
                  |L6.28|
                          DCD      0x40010400

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;101      */
;;;102    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b510              PUSH     {r4,lr}
;;;103    {
;;;104      /* Check the parameters */
;;;105      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;106      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;107      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;108      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;109         
;;;110      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000002  7983              LDRB     r3,[r0,#6]
;;;111      {
;;;112        /* Clear EXTI line configuration */
;;;113        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000004  4921              LDR      r1,|L7.140|
000006  6802              LDR      r2,[r0,#0]            ;110
000008  b3b3              CBZ      r3,|L7.120|
00000a  f8d13400          LDR      r3,[r1,#0x400]
00000e  4393              BICS     r3,r3,r2
000010  f8c13400          STR      r3,[r1,#0x400]
;;;114        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000014  f8d12404          LDR      r2,[r1,#0x404]
000018  6803              LDR      r3,[r0,#0]
00001a  439a              BICS     r2,r2,r3
00001c  f8c12404          STR      r2,[r1,#0x404]
;;;115        
;;;116        *(__IO uint32_t *)(EXTI_BASE + (uint32_t)EXTI_InitStruct->EXTI_Mode)|= EXTI_InitStruct->EXTI_Line;
000020  7902              LDRB     r2,[r0,#4]
000022  6804              LDR      r4,[r0,#0]
000024  440a              ADD      r2,r2,r1
000026  f8d23400          LDR      r3,[r2,#0x400]
00002a  4323              ORRS     r3,r3,r4
00002c  f8c23400          STR      r3,[r2,#0x400]
;;;117        /* Clear Rising Falling edge configuration */
;;;118        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000030  f8d12408          LDR      r2,[r1,#0x408]
000034  6803              LDR      r3,[r0,#0]
000036  439a              BICS     r2,r2,r3
000038  f8c12408          STR      r2,[r1,#0x408]
;;;119        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00003c  f8d1240c          LDR      r2,[r1,#0x40c]
000040  6803              LDR      r3,[r0,#0]
000042  439a              BICS     r2,r2,r3
000044  f8c1240c          STR      r2,[r1,#0x40c]
;;;120        
;;;121        /* Select the trigger for the selected external interrupts */
;;;122        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000048  7942              LDRB     r2,[r0,#5]
00004a  2a10              CMP      r2,#0x10
00004c  d007              BEQ      |L7.94|
;;;123        {
;;;124          /* Rising Falling edge */
;;;125          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;126          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;127        }
;;;128        else
;;;129        {
;;;130          *(__IO uint32_t *)(EXTI_BASE + (uint32_t)EXTI_InitStruct->EXTI_Trigger)|= EXTI_InitStruct->EXTI_Line;
00004e  4411              ADD      r1,r1,r2
000050  f8d12400          LDR      r2,[r1,#0x400]
000054  6800              LDR      r0,[r0,#0]
000056  4302              ORRS     r2,r2,r0
000058  f8c12400          STR      r2,[r1,#0x400]
;;;131        }
;;;132      }
;;;133      else
;;;134      {
;;;135        /* Disable the selected external lines */
;;;136        *(__IO uint32_t *)(EXTI_BASE + (uint32_t)EXTI_InitStruct->EXTI_Mode)&= ~EXTI_InitStruct->EXTI_Line;
;;;137      }
;;;138    }
00005c  bd10              POP      {r4,pc}
                  |L7.94|
00005e  f5016181          ADD      r1,r1,#0x408
000062  680a              LDR      r2,[r1,#0]            ;125
000064  6803              LDR      r3,[r0,#0]            ;125
000066  ea420203          ORR      r2,r2,r3              ;125
00006a  600a              STR      r2,[r1,#0]            ;125
00006c  684a              LDR      r2,[r1,#4]            ;126
00006e  6800              LDR      r0,[r0,#0]            ;126
000070  ea420200          ORR      r2,r2,r0              ;126
000074  604a              STR      r2,[r1,#4]            ;126
                  |L7.118|
000076  bd10              POP      {r4,pc}
                  |L7.120|
000078  e7ff              B        |L7.122|
                  |L7.122|
00007a  7900              LDRB     r0,[r0,#4]            ;136
00007c  4408              ADD      r0,r0,r1              ;136
00007e  f8d01400          LDR      r1,[r0,#0x400]        ;136
000082  4391              BICS     r1,r1,r2              ;136
000084  f8c01400          STR      r1,[r0,#0x400]        ;136
000088  e7f5              B        |L7.118|
;;;139    
                          ENDP

00008a  0000              DCW      0x0000
                  |L7.140|
                          DCD      0x40010000

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;145      */
;;;146    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;147    {
;;;148      EXTI_InitStruct->EXTI_Line = EXTI_LineNone;
;;;149      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;150      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;151      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;152    }
00000c  4770              BX       lr
;;;153    
                          ENDP

