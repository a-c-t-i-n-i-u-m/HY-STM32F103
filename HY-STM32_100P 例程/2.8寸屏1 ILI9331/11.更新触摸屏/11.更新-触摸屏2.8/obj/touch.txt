; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [-c --asm --interleave -o.\obj\touch.o --depend=.\obj\touch.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL user\touch.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  MYRCC_DeInit PROC
;;;13     //把所有时钟寄存器复位
;;;14     void MYRCC_DeInit(void)
000000  2000              MOVS     r0,#0
;;;15     {						   
;;;16     	RCC->APB1RSTR = 0x00000000;//复位结束			 
000002  49ff              LDR      r1,|L1.1024|
000004  6108              STR      r0,[r1,#0x10]
;;;17     	RCC->APB2RSTR = 0x00000000; 
000006  60c8              STR      r0,[r1,#0xc]
;;;18     	  
;;;19       	RCC->AHBENR = 0x00000014;  //flash时钟,闪存时钟使能.DMA时钟关闭	  
000008  2014              MOVS     r0,#0x14
00000a  6148              STR      r0,[r1,#0x14]
;;;20       	RCC->APB2ENR = 0x00000000; //外设时钟关闭.			   
00000c  2000              MOVS     r0,#0
00000e  6188              STR      r0,[r1,#0x18]
;;;21       	RCC->APB1ENR = 0x00000000;   
000010  61c8              STR      r0,[r1,#0x1c]
;;;22     	RCC->CR |= 0x00000001;     //使能内部高速时钟HSION	 															 
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  f0400001          ORR      r0,r0,#1
00001a  6008              STR      r0,[r1,#0]
;;;23     	RCC->CFGR &= 0xF8FF0000;   //复位SW[1:0],HPRE[3:0],PPRE1[2:0],PPRE2[2:0],ADCPRE[1:0],MCO[2:0]					 
00001c  4608              MOV      r0,r1
00001e  6840              LDR      r0,[r0,#4]
000020  49f8              LDR      r1,|L1.1028|
000022  4008              ANDS     r0,r0,r1
000024  49f6              LDR      r1,|L1.1024|
000026  6048              STR      r0,[r1,#4]
;;;24     	RCC->CR &= 0xFEF6FFFF;     //复位HSEON,CSSON,PLLON
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  49f6              LDR      r1,|L1.1032|
00002e  4008              ANDS     r0,r0,r1
000030  49f3              LDR      r1,|L1.1024|
000032  6008              STR      r0,[r1,#0]
;;;25     	RCC->CR &= 0xFFFBFFFF;     //复位HSEBYP	   	  
000034  4608              MOV      r0,r1
000036  6800              LDR      r0,[r0,#0]
000038  f4202080          BIC      r0,r0,#0x40000
00003c  6008              STR      r0,[r1,#0]
;;;26     	RCC->CFGR &= 0xFF80FFFF;   //复位PLLSRC, PLLXTPRE, PLLMUL[3:0] and USBPRE 
00003e  4608              MOV      r0,r1
000040  6840              LDR      r0,[r0,#4]
000042  f42000fe          BIC      r0,r0,#0x7f0000
000046  6048              STR      r0,[r1,#4]
;;;27     	RCC->CIR = 0x00000000;     //关闭所有中断
000048  2000              MOVS     r0,#0
00004a  6088              STR      r0,[r1,#8]
;;;28     }
00004c  4770              BX       lr
;;;29     
                          ENDP

                  Stm32_Clock_Init PROC
;;;30     //外部8M,则得到72M的系统时钟	
;;;31     void Stm32_Clock_Init(void)
00004e  b500              PUSH     {lr}
;;;32     {
;;;33     	unsigned char temp=0;   
000050  2200              MOVS     r2,#0
;;;34     	MYRCC_DeInit();
000052  f7fffffe          BL       MYRCC_DeInit
;;;35     	RCC->CR|=0x00010000;  //外部高速时钟使能HSEON
000056  48ea              LDR      r0,|L1.1024|
000058  6800              LDR      r0,[r0,#0]
00005a  f4403080          ORR      r0,r0,#0x10000
00005e  49e8              LDR      r1,|L1.1024|
000060  6008              STR      r0,[r1,#0]
;;;36     	while(!(RCC->CR>>17));//等待外部时钟就绪
000062  bf00              NOP      
                  |L1.100|
000064  48e6              LDR      r0,|L1.1024|
000066  6800              LDR      r0,[r0,#0]
000068  0c40              LSRS     r0,r0,#17
00006a  d0fb              BEQ      |L1.100|
;;;37     	RCC->CFGR=0X1C0400;   //APB1/2=DIV2;AHB=DIV1;PLL=9*CLK;
00006c  48e7              LDR      r0,|L1.1036|
00006e  49e4              LDR      r1,|L1.1024|
000070  6048              STR      r0,[r1,#4]
;;;38     	RCC->CFGR|=1<<16;	  //PLLSRC ON 
000072  4608              MOV      r0,r1
000074  6840              LDR      r0,[r0,#4]
000076  f4403080          ORR      r0,r0,#0x10000
00007a  6048              STR      r0,[r1,#4]
;;;39     	FLASH->ACR|=0x32;	  //FLASH 2个延时周期
00007c  48e4              LDR      r0,|L1.1040|
00007e  6800              LDR      r0,[r0,#0]
000080  f0400032          ORR      r0,r0,#0x32
000084  49e2              LDR      r1,|L1.1040|
000086  6008              STR      r0,[r1,#0]
;;;40     
;;;41     	RCC->CR|=0x01000000;  //PLLON
000088  48dd              LDR      r0,|L1.1024|
00008a  6800              LDR      r0,[r0,#0]
00008c  f0407080          ORR      r0,r0,#0x1000000
000090  49db              LDR      r1,|L1.1024|
000092  6008              STR      r0,[r1,#0]
;;;42     	while(!(RCC->CR>>25));//等待PLL锁定
000094  bf00              NOP      
                  |L1.150|
000096  48da              LDR      r0,|L1.1024|
000098  6800              LDR      r0,[r0,#0]
00009a  0e40              LSRS     r0,r0,#25
00009c  d0fb              BEQ      |L1.150|
;;;43     	RCC->CFGR|=0x00000002;//PLL作为系统时钟	 
00009e  48d8              LDR      r0,|L1.1024|
0000a0  6840              LDR      r0,[r0,#4]
0000a2  f0400002          ORR      r0,r0,#2
0000a6  49d6              LDR      r1,|L1.1024|
0000a8  6048              STR      r0,[r1,#4]
;;;44     	while(temp!=0x02)     //等待PLL作为系统时钟设置成功
0000aa  e005              B        |L1.184|
                  |L1.172|
;;;45     	{   
;;;46     		temp=RCC->CFGR>>2;
0000ac  48d4              LDR      r0,|L1.1024|
0000ae  6840              LDR      r0,[r0,#4]
0000b0  f3c00287          UBFX     r2,r0,#2,#8
;;;47     		temp&=0x03;
0000b4  f0020203          AND      r2,r2,#3
                  |L1.184|
0000b8  2a02              CMP      r2,#2                 ;44
0000ba  d1f7              BNE      |L1.172|
;;;48     	}    
;;;49     }
0000bc  bd00              POP      {pc}
;;;50     #endif
                          ENDP

                  drawbigpoint PROC
;;;429    //包括清屏"按钮"RST
;;;430    void drawbigpoint(u8 x,u16 y)
0000be  b570              PUSH     {r4-r6,lr}
;;;431    {
0000c0  4604              MOV      r4,r0
0000c2  460d              MOV      r5,r1
;;;432    	if((x<1||x>238)||(y<1||y>318)){y=0;x=0;}
0000c4  2c01              CMP      r4,#1
0000c6  db06              BLT      |L1.214|
0000c8  2cee              CMP      r4,#0xee
0000ca  dc04              BGT      |L1.214|
0000cc  2d01              CMP      r5,#1
0000ce  db02              BLT      |L1.214|
0000d0  f5b57f9f          CMP      r5,#0x13e
0000d4  dd01              BLE      |L1.218|
                  |L1.214|
0000d6  2500              MOVS     r5,#0
0000d8  2400              MOVS     r4,#0
                  |L1.218|
;;;433    	if(x>215&&y<20)
0000da  2cd7              CMP      r4,#0xd7
0000dc  dd09              BLE      |L1.242|
0000de  2d14              CMP      r5,#0x14
0000e0  da07              BGE      |L1.242|
;;;434    	{
;;;435    		TFT_CLEAR(0,20,240,320);//清屏 
0000e2  f44f73a0          MOV      r3,#0x140
0000e6  22f0              MOVS     r2,#0xf0
0000e8  2114              MOVS     r1,#0x14
0000ea  2000              MOVS     r0,#0
0000ec  f7fffffe          BL       TFT_CLEAR
0000f0  e064              B        |L1.444|
                  |L1.242|
;;;436    
;;;437    //	    heyaodz_TP();	//绘制界面
;;;438    	}
;;;439    	else if(y==0||x==0){
0000f2  b105              CBZ      r5,|L1.246|
0000f4  b984              CBNZ     r4,|L1.280|
                  |L1.246|
;;;440    		TFT_DrawPoint(x,y);//中心点 
0000f6  4629              MOV      r1,r5
0000f8  4620              MOV      r0,r4
0000fa  f7fffffe          BL       TFT_DrawPoint
;;;441    		TFT_DrawPoint(x+1,y);
0000fe  4629              MOV      r1,r5
000100  1c60              ADDS     r0,r4,#1
000102  f7fffffe          BL       TFT_DrawPoint
;;;442    		TFT_DrawPoint(x,y+1);
000106  1c69              ADDS     r1,r5,#1
000108  4620              MOV      r0,r4
00010a  f7fffffe          BL       TFT_DrawPoint
;;;443    		TFT_DrawPoint(x+1,y+1);	
00010e  1c69              ADDS     r1,r5,#1
000110  1c60              ADDS     r0,r4,#1
000112  f7fffffe          BL       TFT_DrawPoint
000116  e051              B        |L1.444|
                  |L1.280|
;;;444    	}		
;;;445    	else if(x<120&&y<20)								
000118  2c78              CMP      r4,#0x78
00011a  da3d              BGE      |L1.408|
00011c  2d14              CMP      r5,#0x14
00011e  da3b              BGE      |L1.408|
;;;446    	{
;;;447    
;;;448    
;;;449    	    if(x<=20) POINT_COLOR=RED;
000120  2c14              CMP      r4,#0x14
000122  dc04              BGT      |L1.302|
000124  f44f4078          MOV      r0,#0xf800
000128  49ba              LDR      r1,|L1.1044|
00012a  8008              STRH     r0,[r1,#0]
00012c  e046              B        |L1.444|
                  |L1.302|
;;;450    		else if(x>20,x<=40) POINT_COLOR=BLUE;
00012e  2c28              CMP      r4,#0x28
000130  dc01              BGT      |L1.310|
000132  2001              MOVS     r0,#1
000134  e000              B        |L1.312|
                  |L1.310|
000136  2000              MOVS     r0,#0
                  |L1.312|
000138  b118              CBZ      r0,|L1.322|
00013a  201f              MOVS     r0,#0x1f
00013c  49b5              LDR      r1,|L1.1044|
00013e  8008              STRH     r0,[r1,#0]
000140  e03c              B        |L1.444|
                  |L1.322|
;;;451    		else if(x>40,x<=60) POINT_COLOR=GREEN;
000142  2c3c              CMP      r4,#0x3c
000144  dc01              BGT      |L1.330|
000146  2001              MOVS     r0,#1
000148  e000              B        |L1.332|
                  |L1.330|
00014a  2000              MOVS     r0,#0
                  |L1.332|
00014c  b120              CBZ      r0,|L1.344|
00014e  f44f60fc          MOV      r0,#0x7e0
000152  49b0              LDR      r1,|L1.1044|
000154  8008              STRH     r0,[r1,#0]
000156  e031              B        |L1.444|
                  |L1.344|
;;;452    		else if(x>60,x<=80) POINT_COLOR=GRED;
000158  2c50              CMP      r4,#0x50
00015a  dc01              BGT      |L1.352|
00015c  2001              MOVS     r0,#1
00015e  e000              B        |L1.354|
                  |L1.352|
000160  2000              MOVS     r0,#0
                  |L1.354|
000162  b120              CBZ      r0,|L1.366|
000164  f64f70e0          MOV      r0,#0xffe0
000168  49aa              LDR      r1,|L1.1044|
00016a  8008              STRH     r0,[r1,#0]
00016c  e026              B        |L1.444|
                  |L1.366|
;;;453    		else if(x>80,x<=100) POINT_COLOR=BRED;	
00016e  2c64              CMP      r4,#0x64
000170  dc01              BGT      |L1.374|
000172  2001              MOVS     r0,#1
000174  e000              B        |L1.376|
                  |L1.374|
000176  2000              MOVS     r0,#0
                  |L1.376|
000178  b120              CBZ      r0,|L1.388|
00017a  f64f001f          MOV      r0,#0xf81f
00017e  49a5              LDR      r1,|L1.1044|
000180  8008              STRH     r0,[r1,#0]
000182  e01b              B        |L1.444|
                  |L1.388|
;;;454    		else if(x>100,x<=120) POINT_COLOR=BLACK;
000184  2c78              CMP      r4,#0x78
000186  dc01              BGT      |L1.396|
000188  2001              MOVS     r0,#1
00018a  e000              B        |L1.398|
                  |L1.396|
00018c  2000              MOVS     r0,#0
                  |L1.398|
00018e  b1a8              CBZ      r0,|L1.444|
000190  2000              MOVS     r0,#0
000192  49a0              LDR      r1,|L1.1044|
000194  8008              STRH     r0,[r1,#0]
000196  e011              B        |L1.444|
                  |L1.408|
;;;455    	}
;;;456    	else if(y>20){
000198  2d14              CMP      r5,#0x14
00019a  dd0f              BLE      |L1.444|
;;;457    		TFT_DrawPoint(x,y);//中心点 
00019c  4629              MOV      r1,r5
00019e  4620              MOV      r0,r4
0001a0  f7fffffe          BL       TFT_DrawPoint
;;;458    		TFT_DrawPoint(x+1,y);
0001a4  4629              MOV      r1,r5
0001a6  1c60              ADDS     r0,r4,#1
0001a8  f7fffffe          BL       TFT_DrawPoint
;;;459    		TFT_DrawPoint(x,y+1);
0001ac  1c69              ADDS     r1,r5,#1
0001ae  4620              MOV      r0,r4
0001b0  f7fffffe          BL       TFT_DrawPoint
;;;460    		TFT_DrawPoint(x+1,y+1);	
0001b4  1c69              ADDS     r1,r5,#1
0001b6  1c60              ADDS     r0,r4,#1
0001b8  f7fffffe          BL       TFT_DrawPoint
                  |L1.444|
;;;461    	}		  	
;;;462    }
0001bc  bd70              POP      {r4-r6,pc}
;;;463    
                          ENDP

                  delay_us PROC
;;;686    //延时us								   
;;;687    void delay_us(u32 Nus)
0001be  4601              MOV      r1,r0
;;;688    {		
;;;689    	u32 temp;	    	 
;;;690    	SysTick->LOAD=Nus*fac_us; //时间加载	  		 
0001c0  4a95              LDR      r2,|L1.1048|
0001c2  7812              LDRB     r2,[r2,#0]  ; fac_us
0001c4  434a              MULS     r2,r1,r2
0001c6  f04f23e0          MOV      r3,#0xe000e000
0001ca  615a              STR      r2,[r3,#0x14]
;;;691    	SysTick->VAL=0x00;        //清空计数器
0001cc  2200              MOVS     r2,#0
0001ce  619a              STR      r2,[r3,#0x18]
;;;692    	SysTick->CTRL=0x01 ;      //开始倒数 	 
0001d0  2201              MOVS     r2,#1
0001d2  611a              STR      r2,[r3,#0x10]
;;;693    	do
0001d4  bf00              NOP      
                  |L1.470|
;;;694    	{
;;;695    		temp=SysTick->CTRL;
0001d6  f04f22e0          MOV      r2,#0xe000e000
0001da  6910              LDR      r0,[r2,#0x10]
;;;696    	}
;;;697    	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
0001dc  f0100f01          TST      r0,#1
0001e0  d002              BEQ      |L1.488|
0001e2  f4103f80          TST      r0,#0x10000
0001e6  d0f6              BEQ      |L1.470|
                  |L1.488|
;;;698    	SysTick->CTRL=0x00;       //关闭计数器
0001e8  2200              MOVS     r2,#0
0001ea  f04f23e0          MOV      r3,#0xe000e000
0001ee  611a              STR      r2,[r3,#0x10]
;;;699    	SysTick->VAL =0X00;       //清空计数器	    
0001f0  619a              STR      r2,[r3,#0x18]
;;;700    }
0001f2  4770              BX       lr
                          ENDP

                  read_once PROC
;;;385    //读数限制在100~4000之间.
;;;386    u8 read_once(void)
0001f4  b570              PUSH     {r4-r6,lr}
;;;387    {	unsigned int a,b;
;;;388    	TCS_SET(0); 
0001f6  4889              LDR      r0,|L1.1052|
0001f8  6800              LDR      r0,[r0,#0]
0001fa  f0200080          BIC      r0,r0,#0x80
0001fe  4988              LDR      r1,|L1.1056|
000200  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;389    	delay_us(5);	   	 
000204  f04f0005          MOV      r0,#5
000208  f7fffffe          BL       delay_us
;;;390    	SPI_SendByte(CMD_RDY); 
00020c  20d0              MOVS     r0,#0xd0
00020e  f7fffffe          BL       SPI_SendByte
;;;391    	delay_us(5);	
000212  2005              MOVS     r0,#5
000214  f7fffffe          BL       delay_us
;;;392    	a=SPI_ReadByte(0);
000218  2000              MOVS     r0,#0
00021a  f7fffffe          BL       SPI_ReadByte
00021e  4604              MOV      r4,r0
;;;393    	a=a<<8;
000220  0224              LSLS     r4,r4,#8
;;;394    	a|=SPI_ReadByte(0);
000222  2000              MOVS     r0,#0
000224  f7fffffe          BL       SPI_ReadByte
000228  4304              ORRS     r4,r4,r0
;;;395    	delay_us(5);	
00022a  2005              MOVS     r0,#5
00022c  f7fffffe          BL       delay_us
;;;396    	TCS_SET(1); 	 
000230  487a              LDR      r0,|L1.1052|
000232  6800              LDR      r0,[r0,#0]
000234  f0400080          ORR      r0,r0,#0x80
000238  4979              LDR      r1,|L1.1056|
00023a  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;397    	a>>=3; 
00023e  ea4f04d4          LSR      r4,r4,#3
;;;398    	Y=a;
000242  4878              LDR      r0,|L1.1060|
000244  6004              STR      r4,[r0,#0]  ; Y
;;;399    	delay_us(15);	
000246  f04f000f          MOV      r0,#0xf
00024a  f7fffffe          BL       delay_us
;;;400    	TCS_SET(0); 
00024e  4874              LDR      r0,|L1.1056|
000250  f8d00c0c          LDR      r0,[r0,#0xc0c]
000254  f0200080          BIC      r0,r0,#0x80
000258  4971              LDR      r1,|L1.1056|
00025a  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;401    	delay_us(5);	 
00025e  2005              MOVS     r0,#5
000260  f7fffffe          BL       delay_us
;;;402        SPI_SendByte(CMD_RDX);
000264  2090              MOVS     r0,#0x90
000266  f7fffffe          BL       SPI_SendByte
;;;403    	delay_us(5);	
00026a  2005              MOVS     r0,#5
00026c  f7fffffe          BL       delay_us
;;;404    	b=SPI_ReadByte(0);
000270  2000              MOVS     r0,#0
000272  f7fffffe          BL       SPI_ReadByte
000276  4605              MOV      r5,r0
;;;405    	b=b<<8;
000278  022d              LSLS     r5,r5,#8
;;;406    	b|=SPI_ReadByte(0);
00027a  2000              MOVS     r0,#0
00027c  f7fffffe          BL       SPI_ReadByte
000280  4305              ORRS     r5,r5,r0
;;;407    	delay_us(5);	
000282  2005              MOVS     r0,#5
000284  f7fffffe          BL       delay_us
;;;408    	b>>=3; 
000288  08ed              LSRS     r5,r5,#3
;;;409    	X=b;   
00028a  4867              LDR      r0,|L1.1064|
00028c  6005              STR      r5,[r0,#0]  ; X
;;;410    
;;;411    	TCS_SET(1); 
00028e  4863              LDR      r0,|L1.1052|
000290  6800              LDR      r0,[r0,#0]
000292  f0400080          ORR      r0,r0,#0x80
000296  4962              LDR      r1,|L1.1056|
000298  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;412    	if(X>100&&Y>100&&X<4000&&Y<4000)return 1;//读数成功(范围限制)
00029c  4862              LDR      r0,|L1.1064|
00029e  6800              LDR      r0,[r0,#0]  ; X
0002a0  2864              CMP      r0,#0x64
0002a2  d90f              BLS      |L1.708|
0002a4  485f              LDR      r0,|L1.1060|
0002a6  6800              LDR      r0,[r0,#0]  ; Y
0002a8  2864              CMP      r0,#0x64
0002aa  d90b              BLS      |L1.708|
0002ac  485e              LDR      r0,|L1.1064|
0002ae  6800              LDR      r0,[r0,#0]  ; X
0002b0  f5b06f7a          CMP      r0,#0xfa0
0002b4  d206              BCS      |L1.708|
0002b6  485b              LDR      r0,|L1.1060|
0002b8  6800              LDR      r0,[r0,#0]  ; Y
0002ba  f5b06f7a          CMP      r0,#0xfa0
0002be  d201              BCS      |L1.708|
0002c0  2001              MOVS     r0,#1
                  |L1.706|
;;;413    	else return 0;			                 //读数失败
;;;414    }
0002c2  bd70              POP      {r4-r6,pc}
                  |L1.708|
0002c4  2000              MOVS     r0,#0                 ;413
0002c6  e7fc              B        |L1.706|
;;;415    
                          ENDP

                  Read_Ads7846 PROC
;;;475     
;;;476    void Read_Ads7846(void)
0002c8  b500              PUSH     {lr}
;;;477    {	float X1,Y1,hh;
0002ca  b09b              SUB      sp,sp,#0x6c
;;;478        u16 x1,x2,y1,y2,xx;
;;;479    	u8 t,t1,count=0;
0002cc  2000              MOVS     r0,#0
0002ce  9010              STR      r0,[sp,#0x40]
;;;480    	u16 databuffer[2][10];//数据组
;;;481    	u16 temp=0;	 
0002d0  9005              STR      r0,[sp,#0x14]
;;;482        do					  //循环读数10次
0002d2  bf00              NOP      
                  |L1.724|
;;;483    	{
;;;484    		//t=PEN;		   
;;;485    		if(read_once())//读数成功
0002d4  f7fffffe          BL       read_once
0002d8  b188              CBZ      r0,|L1.766|
;;;486    		{	  
;;;487    			databuffer[0][count]=X;
0002da  4853              LDR      r0,|L1.1064|
0002dc  6800              LDR      r0,[r0,#0]  ; X
0002de  b281              UXTH     r1,r0
0002e0  aa06              ADD      r2,sp,#0x18
0002e2  9810              LDR      r0,[sp,#0x40]
0002e4  f8221010          STRH     r1,[r2,r0,LSL #1]
;;;488    			databuffer[1][count]=Y;
0002e8  484e              LDR      r0,|L1.1060|
0002ea  6800              LDR      r0,[r0,#0]  ; Y
0002ec  b282              UXTH     r2,r0
0002ee  a80b              ADD      r0,sp,#0x2c
0002f0  9910              LDR      r1,[sp,#0x40]
0002f2  f8202011          STRH     r2,[r0,r1,LSL #1]
;;;489    			count++;  
0002f6  9810              LDR      r0,[sp,#0x40]
0002f8  1c40              ADDS     r0,r0,#1
0002fa  b2c0              UXTB     r0,r0
0002fc  9010              STR      r0,[sp,#0x40]
                  |L1.766|
;;;490    		}
;;;491    		t=PEN;
0002fe  2140              MOVS     r1,#0x40
000300  4846              LDR      r0,|L1.1052|
000302  380c              SUBS     r0,r0,#0xc
000304  f7fffffe          BL       GPIO_ReadInputDataBit
000308  9012              STR      r0,[sp,#0x48]
;;;492    	}while(!t&&count<10); 
00030a  9812              LDR      r0,[sp,#0x48]
00030c  b910              CBNZ     r0,|L1.788|
00030e  9810              LDR      r0,[sp,#0x40]
000310  280a              CMP      r0,#0xa
000312  dbdf              BLT      |L1.724|
                  |L1.788|
;;;493    	//}while(count<10); 
;;;494    	if(count==10)//一定要读到10次数据,否则丢弃
000314  9810              LDR      r0,[sp,#0x40]
000316  280a              CMP      r0,#0xa
000318  d171              BNE      |L1.1022|
;;;495    	{  
;;;496    	    do//将数据X升序排列
00031a  bf00              NOP      
                  |L1.796|
;;;497    		{	
;;;498    			t1=0;		  
00031c  2000              MOVS     r0,#0
00031e  9011              STR      r0,[sp,#0x44]
;;;499    			for(t=0;t<count-1;t++)
000320  9012              STR      r0,[sp,#0x48]
000322  e01f              B        |L1.868|
                  |L1.804|
;;;500    			{
;;;501    				if(databuffer[0][t]>databuffer[0][t+1])//升序排列
000324  a906              ADD      r1,sp,#0x18
000326  9812              LDR      r0,[sp,#0x48]
000328  f8311010          LDRH     r1,[r1,r0,LSL #1]
00032c  aa06              ADD      r2,sp,#0x18
00032e  1c40              ADDS     r0,r0,#1
000330  f8320010          LDRH     r0,[r2,r0,LSL #1]
000334  4281              CMP      r1,r0
000336  dd11              BLE      |L1.860|
;;;502    				{
;;;503    					temp=databuffer[0][t+1];
000338  a906              ADD      r1,sp,#0x18
00033a  9812              LDR      r0,[sp,#0x48]
00033c  1c40              ADDS     r0,r0,#1
00033e  f8310010          LDRH     r0,[r1,r0,LSL #1]
000342  9005              STR      r0,[sp,#0x14]
;;;504    					databuffer[0][t+1]=databuffer[0][t];
000344  9812              LDR      r0,[sp,#0x48]
000346  f8311010          LDRH     r1,[r1,r0,LSL #1]
00034a  1c40              ADDS     r0,r0,#1
00034c  f8221010          STRH     r1,[r2,r0,LSL #1]
;;;505    					databuffer[0][t]=temp;
000350  9912              LDR      r1,[sp,#0x48]
000352  9805              LDR      r0,[sp,#0x14]
000354  f8220011          STRH     r0,[r2,r1,LSL #1]
;;;506    					t1=1; 
000358  2001              MOVS     r0,#1
00035a  9011              STR      r0,[sp,#0x44]
                  |L1.860|
00035c  9812              LDR      r0,[sp,#0x48]         ;499
00035e  1c40              ADDS     r0,r0,#1              ;499
000360  b2c0              UXTB     r0,r0                 ;499
000362  9012              STR      r0,[sp,#0x48]         ;499
                  |L1.868|
000364  9810              LDR      r0,[sp,#0x40]         ;499
000366  1e40              SUBS     r0,r0,#1              ;499
000368  9912              LDR      r1,[sp,#0x48]         ;499
00036a  4288              CMP      r0,r1                 ;499
00036c  dcda              BGT      |L1.804|
;;;507    				}  
;;;508    			}
;;;509    		}while(t1); 	  
00036e  9811              LDR      r0,[sp,#0x44]
000370  2800              CMP      r0,#0
000372  d1d3              BNE      |L1.796|
;;;510    		do//将数据Y升序排列
000374  bf00              NOP      
                  |L1.886|
;;;511    		{	
;;;512    			t1=0;		 
000376  2000              MOVS     r0,#0
000378  9011              STR      r0,[sp,#0x44]
;;;513    			for(t=0;t<count-1;t++)
00037a  9012              STR      r0,[sp,#0x48]
00037c  e022              B        |L1.964|
                  |L1.894|
;;;514    			{
;;;515    				if(databuffer[1][t]>databuffer[1][t+1])//升序排列
00037e  a80b              ADD      r0,sp,#0x2c
000380  9912              LDR      r1,[sp,#0x48]
000382  f8302011          LDRH     r2,[r0,r1,LSL #1]
000386  a90b              ADD      r1,sp,#0x2c
000388  9812              LDR      r0,[sp,#0x48]
00038a  1c40              ADDS     r0,r0,#1
00038c  f8310010          LDRH     r0,[r1,r0,LSL #1]
000390  4282              CMP      r2,r0
000392  dd13              BLE      |L1.956|
;;;516    				{
;;;517    					temp=databuffer[1][t+1];
000394  9812              LDR      r0,[sp,#0x48]
000396  1c40              ADDS     r0,r0,#1
000398  f8310010          LDRH     r0,[r1,r0,LSL #1]
00039c  9005              STR      r0,[sp,#0x14]
;;;518    					databuffer[1][t+1]=databuffer[1][t];
00039e  a80b              ADD      r0,sp,#0x2c
0003a0  9912              LDR      r1,[sp,#0x48]
0003a2  f8302011          LDRH     r2,[r0,r1,LSL #1]
0003a6  a90b              ADD      r1,sp,#0x2c
0003a8  9812              LDR      r0,[sp,#0x48]
0003aa  1c40              ADDS     r0,r0,#1
0003ac  f8212010          STRH     r2,[r1,r0,LSL #1]
;;;519    					databuffer[1][t]=temp;
0003b0  9a12              LDR      r2,[sp,#0x48]
0003b2  9805              LDR      r0,[sp,#0x14]
0003b4  f8210012          STRH     r0,[r1,r2,LSL #1]
;;;520    					t1=1;	 
0003b8  2001              MOVS     r0,#1
0003ba  9011              STR      r0,[sp,#0x44]
                  |L1.956|
0003bc  9812              LDR      r0,[sp,#0x48]         ;513
0003be  1c40              ADDS     r0,r0,#1              ;513
0003c0  b2c0              UXTB     r0,r0                 ;513
0003c2  9012              STR      r0,[sp,#0x48]         ;513
                  |L1.964|
0003c4  9810              LDR      r0,[sp,#0x40]         ;513
0003c6  1e40              SUBS     r0,r0,#1              ;513
0003c8  9912              LDR      r1,[sp,#0x48]         ;513
0003ca  4288              CMP      r0,r1                 ;513
0003cc  dcd7              BGT      |L1.894|
;;;521    				}  
;;;522    			}
;;;523    		}while(t1);
0003ce  9811              LDR      r0,[sp,#0x44]
0003d0  2800              CMP      r0,#0
0003d2  d1d0              BNE      |L1.886|
;;;524    		x1=databuffer[0][3]; x2=databuffer[0][4]; //x3=databuffer[0][8];		
0003d4  f8bd001e          LDRH     r0,[sp,#0x1e]
0003d8  9017              STR      r0,[sp,#0x5c]
0003da  f8bd1020          LDRH     r1,[sp,#0x20]
0003de  9116              STR      r1,[sp,#0x58]
;;;525    		y1=databuffer[1][3]; y2=databuffer[1][4]; //y3=databuffer[1][8];	   
0003e0  f8bd0032          LDRH     r0,[sp,#0x32]
0003e4  9015              STR      r0,[sp,#0x54]
0003e6  f8bd0034          LDRH     r0,[sp,#0x34]
0003ea  9014              STR      r0,[sp,#0x50]
;;;526    		if(((x1>x2)&&(x1>x2+30))||((x2>x1)&&(x2>x1+30))||((y1>y2)&&(y1>y2+30))||((y2>y1)&&(y2>y1+30)));	 		  
0003ec  e9dd1016          LDRD     r1,r0,[sp,#0x58]
0003f0  4288              CMP      r0,r1
0003f2  dd1c              BLE      |L1.1070|
0003f4  e9dd0116          LDRD     r0,r1,[sp,#0x58]
0003f8  301e              ADDS     r0,r0,#0x1e
0003fa  4281              CMP      r1,r0
0003fc  e016              B        |L1.1068|
                  |L1.1022|
0003fe  e095              B        |L1.1324|
                  |L1.1024|
                          DCD      0x40021000
                  |L1.1028|
                          DCD      0xf8ff0000
                  |L1.1032|
                          DCD      0xfef6ffff
                  |L1.1036|
                          DCD      0x001c0400
                  |L1.1040|
                          DCD      0x40022000
                  |L1.1044|
                          DCD      POINT_COLOR
                  |L1.1048|
                          DCD      fac_us
                  |L1.1052|
                          DCD      0x40010c0c
                  |L1.1056|
                          DCD      0x40010000
                  |L1.1060|
                          DCD      Y
                  |L1.1064|
                          DCD      X
                  |L1.1068|
00042c  dc7e              BGT      |L1.1324|
                  |L1.1070|
00042e  e9dd0116          LDRD     r0,r1,[sp,#0x58]
000432  4288              CMP      r0,r1
000434  dd04              BLE      |L1.1088|
000436  e9dd1016          LDRD     r1,r0,[sp,#0x58]
00043a  301e              ADDS     r0,r0,#0x1e
00043c  4281              CMP      r1,r0
00043e  dc75              BGT      |L1.1324|
                  |L1.1088|
000440  e9dd1014          LDRD     r1,r0,[sp,#0x50]
000444  4288              CMP      r0,r1
000446  dd04              BLE      |L1.1106|
000448  e9dd0114          LDRD     r0,r1,[sp,#0x50]
00044c  301e              ADDS     r0,r0,#0x1e
00044e  4281              CMP      r1,r0
000450  dc6c              BGT      |L1.1324|
                  |L1.1106|
000452  e9dd0114          LDRD     r0,r1,[sp,#0x50]
000456  4288              CMP      r0,r1
000458  dd04              BLE      |L1.1124|
00045a  e9dd1014          LDRD     r1,r0,[sp,#0x50]
00045e  301e              ADDS     r0,r0,#0x1e
000460  4281              CMP      r1,r0
000462  dc63              BGT      |L1.1324|
                  |L1.1124|
;;;527    //		if(0);
;;;528    		else
;;;529    		{
;;;530            
;;;531    		X1=(databuffer[0][3]+databuffer[0][4])/2;
000464  f8bd001e          LDRH     r0,[sp,#0x1e]
000468  f8bd1020          LDRH     r1,[sp,#0x20]
00046c  4408              ADD      r0,r0,r1
00046e  9004              STR      r0,[sp,#0x10]
000470  eb0070d0          ADD      r0,r0,r0,LSR #31
000474  1040              ASRS     r0,r0,#1
000476  9003              STR      r0,[sp,#0xc]
000478  f7fffffe          BL       __aeabi_i2f
00047c  901a              STR      r0,[sp,#0x68]
;;;532    		Y1=(databuffer[1][3]+databuffer[1][4])/2;	
00047e  f8bd1032          LDRH     r1,[sp,#0x32]
000482  f8bd0034          LDRH     r0,[sp,#0x34]
000486  4408              ADD      r0,r0,r1
000488  9004              STR      r0,[sp,#0x10]
00048a  eb0070d0          ADD      r0,r0,r0,LSR #31
00048e  1040              ASRS     r0,r0,#1
000490  9003              STR      r0,[sp,#0xc]
000492  f7fffffe          BL       __aeabi_i2f
000496  9019              STR      r0,[sp,#0x64]
;;;533    		
;;;534    			if(X1<=4096&&Y1<=4096) //个人的屏根据初始参数修改.		  正常
000498  f04f418b          MOV      r1,#0x45800000
00049c  981a              LDR      r0,[sp,#0x68]
00049e  f7fffffe          BL       __aeabi_cfcmple
0004a2  d843              BHI      |L1.1324|
0004a4  f04f418b          MOV      r1,#0x45800000
0004a8  9819              LDR      r0,[sp,#0x64]
0004aa  f7fffffe          BL       __aeabi_cfcmple
0004ae  d83d              BHI      |L1.1324|
;;;535    			{	X=X1;
0004b0  981a              LDR      r0,[sp,#0x68]
0004b2  f7fffffe          BL       __aeabi_f2uiz
0004b6  49ff              LDR      r1,|L1.2228|
0004b8  6008              STR      r0,[r1,#0]  ; X
;;;536    			    Y=Y1;
0004ba  9819              LDR      r0,[sp,#0x64]
0004bc  f7fffffe          BL       __aeabi_f2uiz
0004c0  49fd              LDR      r1,|L1.2232|
0004c2  6008              STR      r0,[r1,#0]  ; Y
;;;537    
;;;538    
;;;539                  if(dw==1)
0004c4  48fd              LDR      r0,|L1.2236|
0004c6  7800              LDRB     r0,[r0,#0]  ; dw
0004c8  2801              CMP      r0,#1
0004ca  d12f              BNE      |L1.1324|
;;;540    			  { 
;;;541    			   		if((Xs_1<Xs_3)&&(Ys_1<Ys_2))	//左下角为起始坐标时进入
0004cc  48fc              LDR      r0,|L1.2240|
0004ce  6800              LDR      r0,[r0,#0]  ; Xs_1
0004d0  49fc              LDR      r1,|L1.2244|
0004d2  6809              LDR      r1,[r1,#0]  ; Xs_3
0004d4  4288              CMP      r0,r1
0004d6  d27e              BCS      |L1.1494|
0004d8  48fb              LDR      r0,|L1.2248|
0004da  6801              LDR      r1,[r0,#0]  ; Ys_1
0004dc  48fb              LDR      r0,|L1.2252|
0004de  6800              LDR      r0,[r0,#0]  ; Ys_2
0004e0  4281              CMP      r1,r0
0004e2  d278              BCS      |L1.1494|
;;;542    					{
;;;543    						 if((Ys_1*5<Ys_2)&&(Xs_1*5<Xs_3))	//判断触摸方向
0004e4  48f8              LDR      r0,|L1.2248|
0004e6  6800              LDR      r0,[r0,#0]  ; Ys_1
0004e8  eb000080          ADD      r0,r0,r0,LSL #2
0004ec  49f7              LDR      r1,|L1.2252|
0004ee  6809              LDR      r1,[r1,#0]  ; Ys_2
0004f0  4288              CMP      r0,r1
0004f2  d271              BCS      |L1.1496|
0004f4  48f2              LDR      r0,|L1.2240|
0004f6  6800              LDR      r0,[r0,#0]  ; Xs_1
0004f8  eb000080          ADD      r0,r0,r0,LSL #2
0004fc  49f1              LDR      r1,|L1.2244|
0004fe  6809              LDR      r1,[r1,#0]  ; Xs_3
000500  4288              CMP      r0,r1
000502  d27f              BCS      |L1.1540|
;;;544    						 {
;;;545    						   xx=Ys_2-Ys_1;	//计算出Y1,Y2距离
000504  48f1              LDR      r0,|L1.2252|
000506  6800              LDR      r0,[r0,#0]  ; Ys_2
000508  49ef              LDR      r1,|L1.2248|
00050a  6809              LDR      r1,[r1,#0]  ; Ys_1
00050c  1a40              SUBS     r0,r0,r1
00050e  b280              UXTH     r0,r0
000510  9013              STR      r0,[sp,#0x4c]
;;;546    						   hh=(float)xx/200;		//计算出X比例
000512  9813              LDR      r0,[sp,#0x4c]
000514  f7fffffe          BL       __aeabi_ui2f
000518  49ed              LDR      r1,|L1.2256|
00051a  9004              STR      r0,[sp,#0x10]
00051c  f7fffffe          BL       __aeabi_fdiv
000520  9018              STR      r0,[sp,#0x60]
;;;547    						   xx=(float)((hh*240)-xx)/2;	//Y方向偏移量
000522  9813              LDR      r0,[sp,#0x4c]
000524  f7fffffe          BL       __aeabi_ui2f
000528  49ea              LDR      r1,|L1.2260|
00052a  e000              B        |L1.1326|
                  |L1.1324|
00052c  e3b7              B        |L1.3230|
                  |L1.1326|
00052e  9002              STR      r0,[sp,#8]
000530  9818              LDR      r0,[sp,#0x60]
000532  f7fffffe          BL       __aeabi_fmul
000536  9001              STR      r0,[sp,#4]
000538  9902              LDR      r1,[sp,#8]
00053a  f7fffffe          BL       __aeabi_fsub
00053e  f04f4180          MOV      r1,#0x40000000
000542  9003              STR      r0,[sp,#0xc]
000544  f7fffffe          BL       __aeabi_fdiv
000548  9004              STR      r0,[sp,#0x10]
00054a  f7fffffe          BL       __aeabi_f2uiz
00054e  b280              UXTH     r0,r0
000550  9013              STR      r0,[sp,#0x4c]
;;;548    						   X=(Y1-(Ys_1-xx))/hh;		  //计算坐标
000552  48dd              LDR      r0,|L1.2248|
000554  6801              LDR      r1,[r0,#0]  ; Ys_1
000556  9813              LDR      r0,[sp,#0x4c]
000558  1a08              SUBS     r0,r1,r0
00055a  9001              STR      r0,[sp,#4]
00055c  f7fffffe          BL       __aeabi_ui2f
000560  9002              STR      r0,[sp,#8]
000562  9919              LDR      r1,[sp,#0x64]
000564  f7fffffe          BL       __aeabi_frsub
000568  9003              STR      r0,[sp,#0xc]
00056a  9918              LDR      r1,[sp,#0x60]
00056c  f7fffffe          BL       __aeabi_fdiv
000570  9004              STR      r0,[sp,#0x10]
000572  f7fffffe          BL       __aeabi_f2uiz
000576  49cf              LDR      r1,|L1.2228|
000578  6008              STR      r0,[r1,#0]  ; X
;;;549    						   xx=Xs_3-Xs_1;	//计算出X1,X3距离
00057a  48d2              LDR      r0,|L1.2244|
00057c  6800              LDR      r0,[r0,#0]  ; Xs_3
00057e  49d0              LDR      r1,|L1.2240|
000580  6809              LDR      r1,[r1,#0]  ; Xs_1
000582  1a40              SUBS     r0,r0,r1
000584  b280              UXTH     r0,r0
000586  9013              STR      r0,[sp,#0x4c]
;;;550    						   hh=(float)xx/280;	//计算出X比例因子
000588  9813              LDR      r0,[sp,#0x4c]
00058a  f7fffffe          BL       __aeabi_ui2f
00058e  49d2              LDR      r1,|L1.2264|
000590  9004              STR      r0,[sp,#0x10]
000592  f7fffffe          BL       __aeabi_fdiv
000596  9018              STR      r0,[sp,#0x60]
;;;551    						   xx=(float)((hh*320)-xx)/2;  //X方向偏移量
000598  9813              LDR      r0,[sp,#0x4c]
00059a  f7fffffe          BL       __aeabi_ui2f
00059e  49cf              LDR      r1,|L1.2268|
0005a0  9002              STR      r0,[sp,#8]
0005a2  9818              LDR      r0,[sp,#0x60]
0005a4  f7fffffe          BL       __aeabi_fmul
0005a8  9001              STR      r0,[sp,#4]
0005aa  9902              LDR      r1,[sp,#8]
0005ac  f7fffffe          BL       __aeabi_fsub
0005b0  f04f4180          MOV      r1,#0x40000000
0005b4  9003              STR      r0,[sp,#0xc]
0005b6  f7fffffe          BL       __aeabi_fdiv
0005ba  9004              STR      r0,[sp,#0x10]
0005bc  f7fffffe          BL       __aeabi_f2uiz
0005c0  b280              UXTH     r0,r0
0005c2  9013              STR      r0,[sp,#0x4c]
;;;552    						   Y=(X1-(Xs_1-xx))/hh;	//计算坐标
0005c4  48be              LDR      r0,|L1.2240|
0005c6  6801              LDR      r1,[r0,#0]  ; Xs_1
0005c8  9813              LDR      r0,[sp,#0x4c]
0005ca  1a08              SUBS     r0,r1,r0
0005cc  9001              STR      r0,[sp,#4]
0005ce  f7fffffe          BL       __aeabi_ui2f
0005d2  9002              STR      r0,[sp,#8]
0005d4  e001              B        |L1.1498|
                  |L1.1494|
0005d6  e08f              B        |L1.1784|
                  |L1.1496|
0005d8  e014              B        |L1.1540|
                  |L1.1498|
0005da  991a              LDR      r1,[sp,#0x68]
0005dc  f7fffffe          BL       __aeabi_frsub
0005e0  9003              STR      r0,[sp,#0xc]
0005e2  9918              LDR      r1,[sp,#0x60]
0005e4  f7fffffe          BL       __aeabi_fdiv
0005e8  9004              STR      r0,[sp,#0x10]
0005ea  f7fffffe          BL       __aeabi_f2uiz
0005ee  49b2              LDR      r1,|L1.2232|
0005f0  6008              STR      r0,[r1,#0]  ; Y
;;;553    						   drawbigpoint(X,Y);
0005f2  4608              MOV      r0,r1
0005f4  6800              LDR      r0,[r0,#0]  ; Y
0005f6  b281              UXTH     r1,r0
0005f8  48ae              LDR      r0,|L1.2228|
0005fa  6800              LDR      r0,[r0,#0]  ; X
0005fc  b2c0              UXTB     r0,r0
0005fe  f7fffffe          BL       drawbigpoint
000602  e079              B        |L1.1784|
                  |L1.1540|
;;;554    						 }
;;;555    						 else
;;;556    						 {
;;;557    						   xx=Ys_2-Ys_1;	//计算出Y1,Y2距离
000604  48b1              LDR      r0,|L1.2252|
000606  6801              LDR      r1,[r0,#0]  ; Ys_2
000608  48af              LDR      r0,|L1.2248|
00060a  6800              LDR      r0,[r0,#0]  ; Ys_1
00060c  1a08              SUBS     r0,r1,r0
00060e  b280              UXTH     r0,r0
000610  9013              STR      r0,[sp,#0x4c]
;;;558    						   hh=(float)xx/280;		//计算出X比例
000612  9813              LDR      r0,[sp,#0x4c]
000614  f7fffffe          BL       __aeabi_ui2f
000618  49af              LDR      r1,|L1.2264|
00061a  9004              STR      r0,[sp,#0x10]
00061c  f7fffffe          BL       __aeabi_fdiv
000620  9018              STR      r0,[sp,#0x60]
;;;559    						   xx=(float)((hh*320)-xx)/2;	//Y方向偏移量
000622  9813              LDR      r0,[sp,#0x4c]
000624  f7fffffe          BL       __aeabi_ui2f
000628  49ac              LDR      r1,|L1.2268|
00062a  9002              STR      r0,[sp,#8]
00062c  9818              LDR      r0,[sp,#0x60]
00062e  f7fffffe          BL       __aeabi_fmul
000632  9001              STR      r0,[sp,#4]
000634  9902              LDR      r1,[sp,#8]
000636  f7fffffe          BL       __aeabi_fsub
00063a  f04f4180          MOV      r1,#0x40000000
00063e  9003              STR      r0,[sp,#0xc]
000640  f7fffffe          BL       __aeabi_fdiv
000644  9004              STR      r0,[sp,#0x10]
000646  f7fffffe          BL       __aeabi_f2uiz
00064a  b280              UXTH     r0,r0
00064c  9013              STR      r0,[sp,#0x4c]
;;;560    						   Y=(Y1-(Ys_1-xx))/hh;		  //计算坐标
00064e  489e              LDR      r0,|L1.2248|
000650  6801              LDR      r1,[r0,#0]  ; Ys_1
000652  9813              LDR      r0,[sp,#0x4c]
000654  1a08              SUBS     r0,r1,r0
000656  9001              STR      r0,[sp,#4]
000658  f7fffffe          BL       __aeabi_ui2f
00065c  9002              STR      r0,[sp,#8]
00065e  9919              LDR      r1,[sp,#0x64]
000660  f7fffffe          BL       __aeabi_frsub
000664  9003              STR      r0,[sp,#0xc]
000666  9918              LDR      r1,[sp,#0x60]
000668  f7fffffe          BL       __aeabi_fdiv
00066c  9004              STR      r0,[sp,#0x10]
00066e  f7fffffe          BL       __aeabi_f2uiz
000672  4991              LDR      r1,|L1.2232|
000674  6008              STR      r0,[r1,#0]  ; Y
;;;561    						   xx=Xs_3-Xs_1;	//计算出X1,X3距离
000676  4893              LDR      r0,|L1.2244|
000678  6800              LDR      r0,[r0,#0]  ; Xs_3
00067a  4991              LDR      r1,|L1.2240|
00067c  6809              LDR      r1,[r1,#0]  ; Xs_1
00067e  1a40              SUBS     r0,r0,r1
000680  b280              UXTH     r0,r0
000682  9013              STR      r0,[sp,#0x4c]
;;;562    						   hh=(float)xx/200;	//计算出X比例因子
000684  9813              LDR      r0,[sp,#0x4c]
000686  f7fffffe          BL       __aeabi_ui2f
00068a  4991              LDR      r1,|L1.2256|
00068c  9004              STR      r0,[sp,#0x10]
00068e  f7fffffe          BL       __aeabi_fdiv
000692  9018              STR      r0,[sp,#0x60]
;;;563    						   xx=(float)((hh*240)-xx)/2;  //X方向偏移量
000694  9813              LDR      r0,[sp,#0x4c]
000696  f7fffffe          BL       __aeabi_ui2f
00069a  498e              LDR      r1,|L1.2260|
00069c  9002              STR      r0,[sp,#8]
00069e  9818              LDR      r0,[sp,#0x60]
0006a0  f7fffffe          BL       __aeabi_fmul
0006a4  9001              STR      r0,[sp,#4]
0006a6  9902              LDR      r1,[sp,#8]
0006a8  f7fffffe          BL       __aeabi_fsub
0006ac  f04f4180          MOV      r1,#0x40000000
0006b0  9003              STR      r0,[sp,#0xc]
0006b2  f7fffffe          BL       __aeabi_fdiv
0006b6  9004              STR      r0,[sp,#0x10]
0006b8  f7fffffe          BL       __aeabi_f2uiz
0006bc  b280              UXTH     r0,r0
0006be  9013              STR      r0,[sp,#0x4c]
;;;564    						   X=(X1-(Xs_1-xx))/hh;	//计算坐标
0006c0  487f              LDR      r0,|L1.2240|
0006c2  6801              LDR      r1,[r0,#0]  ; Xs_1
0006c4  9813              LDR      r0,[sp,#0x4c]
0006c6  1a08              SUBS     r0,r1,r0
0006c8  9001              STR      r0,[sp,#4]
0006ca  f7fffffe          BL       __aeabi_ui2f
0006ce  9002              STR      r0,[sp,#8]
0006d0  991a              LDR      r1,[sp,#0x68]
0006d2  f7fffffe          BL       __aeabi_frsub
0006d6  9003              STR      r0,[sp,#0xc]
0006d8  9918              LDR      r1,[sp,#0x60]
0006da  f7fffffe          BL       __aeabi_fdiv
0006de  9004              STR      r0,[sp,#0x10]
0006e0  f7fffffe          BL       __aeabi_f2uiz
0006e4  4973              LDR      r1,|L1.2228|
0006e6  6008              STR      r0,[r1,#0]  ; X
;;;565    						   drawbigpoint(X,Y);
0006e8  4873              LDR      r0,|L1.2232|
0006ea  6800              LDR      r0,[r0,#0]  ; Y
0006ec  b281              UXTH     r1,r0
0006ee  4871              LDR      r0,|L1.2228|
0006f0  6800              LDR      r0,[r0,#0]  ; X
0006f2  b2c0              UXTB     r0,r0
0006f4  f7fffffe          BL       drawbigpoint
                  |L1.1784|
;;;566    						 }
;;;567    						 
;;;568    					}
;;;569    			   		
;;;570    					if((Xs_2<Xs_4)&&(Ys_2<Ys_1))	//左上角为起始坐标时进入
0006f8  4879              LDR      r0,|L1.2272|
0006fa  6801              LDR      r1,[r0,#0]  ; Xs_2
0006fc  4879              LDR      r0,|L1.2276|
0006fe  6800              LDR      r0,[r0,#0]  ; Xs_4
000700  4281              CMP      r1,r0
000702  d27d              BCS      |L1.2048|
000704  4871              LDR      r0,|L1.2252|
000706  6800              LDR      r0,[r0,#0]  ; Ys_2
000708  496f              LDR      r1,|L1.2248|
00070a  6809              LDR      r1,[r1,#0]  ; Ys_1
00070c  4288              CMP      r0,r1
00070e  d277              BCS      |L1.2048|
;;;571    					{
;;;572    						 if((Ys_2*5<Ys_1)&&(Xs_2*5<Xs_4))	//判断触摸方向
000710  486e              LDR      r0,|L1.2252|
000712  6800              LDR      r0,[r0,#0]  ; Ys_2
000714  eb000080          ADD      r0,r0,r0,LSL #2
000718  496b              LDR      r1,|L1.2248|
00071a  6809              LDR      r1,[r1,#0]  ; Ys_1
00071c  4288              CMP      r0,r1
00071e  d270              BCS      |L1.2050|
000720  486f              LDR      r0,|L1.2272|
000722  6800              LDR      r0,[r0,#0]  ; Xs_2
000724  eb000080          ADD      r0,r0,r0,LSL #2
000728  496e              LDR      r1,|L1.2276|
00072a  6809              LDR      r1,[r1,#0]  ; Xs_4
00072c  4288              CMP      r0,r1
00072e  d268              BCS      |L1.2050|
;;;573    						 {
;;;574    						   xx=Ys_1-Ys_2;	//计算出Y1,Y2距离
000730  4865              LDR      r0,|L1.2248|
000732  6800              LDR      r0,[r0,#0]  ; Ys_1
000734  4965              LDR      r1,|L1.2252|
000736  6809              LDR      r1,[r1,#0]  ; Ys_2
000738  1a40              SUBS     r0,r0,r1
00073a  b280              UXTH     r0,r0
00073c  9013              STR      r0,[sp,#0x4c]
;;;575    						   hh=(float)xx/200;		//计算出X比例
00073e  9813              LDR      r0,[sp,#0x4c]
000740  f7fffffe          BL       __aeabi_ui2f
000744  4962              LDR      r1,|L1.2256|
000746  9004              STR      r0,[sp,#0x10]
000748  f7fffffe          BL       __aeabi_fdiv
00074c  9018              STR      r0,[sp,#0x60]
;;;576    						   xx=(float)((hh*240)-xx)/2;	//Y方向偏移量
00074e  9813              LDR      r0,[sp,#0x4c]
000750  f7fffffe          BL       __aeabi_ui2f
000754  495f              LDR      r1,|L1.2260|
000756  9002              STR      r0,[sp,#8]
000758  9818              LDR      r0,[sp,#0x60]
00075a  f7fffffe          BL       __aeabi_fmul
00075e  9001              STR      r0,[sp,#4]
000760  9902              LDR      r1,[sp,#8]
000762  f7fffffe          BL       __aeabi_fsub
000766  f04f4180          MOV      r1,#0x40000000
00076a  9003              STR      r0,[sp,#0xc]
00076c  f7fffffe          BL       __aeabi_fdiv
000770  9004              STR      r0,[sp,#0x10]
000772  f7fffffe          BL       __aeabi_f2uiz
000776  b280              UXTH     r0,r0
000778  9013              STR      r0,[sp,#0x4c]
;;;577    						   X=240-(Y1-(Ys_2-xx))/hh;		  //计算坐标
00077a  4854              LDR      r0,|L1.2252|
00077c  6801              LDR      r1,[r0,#0]  ; Ys_2
00077e  9813              LDR      r0,[sp,#0x4c]
000780  1a08              SUBS     r0,r1,r0
000782  9000              STR      r0,[sp,#0]
000784  f7fffffe          BL       __aeabi_ui2f
000788  9001              STR      r0,[sp,#4]
00078a  9919              LDR      r1,[sp,#0x64]
00078c  f7fffffe          BL       __aeabi_frsub
000790  9002              STR      r0,[sp,#8]
000792  9918              LDR      r1,[sp,#0x60]
000794  f7fffffe          BL       __aeabi_fdiv
000798  494e              LDR      r1,|L1.2260|
00079a  9003              STR      r0,[sp,#0xc]
00079c  f7fffffe          BL       __aeabi_frsub
0007a0  9004              STR      r0,[sp,#0x10]
0007a2  f7fffffe          BL       __aeabi_f2uiz
0007a6  4943              LDR      r1,|L1.2228|
0007a8  6008              STR      r0,[r1,#0]  ; X
;;;578    						   xx=Xs_4-Xs_2;	//计算出X2,X4距离
0007aa  484e              LDR      r0,|L1.2276|
0007ac  6800              LDR      r0,[r0,#0]  ; Xs_4
0007ae  494c              LDR      r1,|L1.2272|
0007b0  6809              LDR      r1,[r1,#0]  ; Xs_2
0007b2  1a40              SUBS     r0,r0,r1
0007b4  b280              UXTH     r0,r0
0007b6  9013              STR      r0,[sp,#0x4c]
;;;579    						   hh=(float)xx/280;	//计算出X比例因子
0007b8  9813              LDR      r0,[sp,#0x4c]
0007ba  f7fffffe          BL       __aeabi_ui2f
0007be  4946              LDR      r1,|L1.2264|
0007c0  9004              STR      r0,[sp,#0x10]
0007c2  f7fffffe          BL       __aeabi_fdiv
0007c6  9018              STR      r0,[sp,#0x60]
;;;580    						   xx=(float)((hh*320)-xx)/2;  //X方向偏移量
0007c8  9813              LDR      r0,[sp,#0x4c]
0007ca  f7fffffe          BL       __aeabi_ui2f
0007ce  4943              LDR      r1,|L1.2268|
0007d0  9002              STR      r0,[sp,#8]
0007d2  9818              LDR      r0,[sp,#0x60]
0007d4  f7fffffe          BL       __aeabi_fmul
0007d8  9001              STR      r0,[sp,#4]
0007da  9902              LDR      r1,[sp,#8]
0007dc  f7fffffe          BL       __aeabi_fsub
0007e0  f04f4180          MOV      r1,#0x40000000
0007e4  9003              STR      r0,[sp,#0xc]
0007e6  f7fffffe          BL       __aeabi_fdiv
0007ea  9004              STR      r0,[sp,#0x10]
0007ec  f7fffffe          BL       __aeabi_f2uiz
0007f0  b280              UXTH     r0,r0
0007f2  9013              STR      r0,[sp,#0x4c]
;;;581    						   Y=(X1-(Xs_2-xx))/hh;	//计算坐标
0007f4  483a              LDR      r0,|L1.2272|
0007f6  6801              LDR      r1,[r0,#0]  ; Xs_2
0007f8  9813              LDR      r0,[sp,#0x4c]
0007fa  1a08              SUBS     r0,r1,r0
0007fc  9001              STR      r0,[sp,#4]
0007fe  e001              B        |L1.2052|
                  |L1.2048|
000800  e0b1              B        |L1.2406|
                  |L1.2050|
000802  e017              B        |L1.2100|
                  |L1.2052|
000804  f7fffffe          BL       __aeabi_ui2f
000808  9002              STR      r0,[sp,#8]
00080a  991a              LDR      r1,[sp,#0x68]
00080c  f7fffffe          BL       __aeabi_frsub
000810  9003              STR      r0,[sp,#0xc]
000812  9918              LDR      r1,[sp,#0x60]
000814  f7fffffe          BL       __aeabi_fdiv
000818  9004              STR      r0,[sp,#0x10]
00081a  f7fffffe          BL       __aeabi_f2uiz
00081e  4926              LDR      r1,|L1.2232|
000820  6008              STR      r0,[r1,#0]  ; Y
;;;582    						   drawbigpoint(X,Y);
000822  4608              MOV      r0,r1
000824  6800              LDR      r0,[r0,#0]  ; Y
000826  b281              UXTH     r1,r0
000828  4822              LDR      r0,|L1.2228|
00082a  6800              LDR      r0,[r0,#0]  ; X
00082c  b2c0              UXTB     r0,r0
00082e  f7fffffe          BL       drawbigpoint
000832  e098              B        |L1.2406|
                  |L1.2100|
;;;583    						 }
;;;584    						 else
;;;585    						 {
;;;586    						   xx=Ys_1-Ys_2;	//计算出Y1,Y2距离
000834  4824              LDR      r0,|L1.2248|
000836  6800              LDR      r0,[r0,#0]  ; Ys_1
000838  4924              LDR      r1,|L1.2252|
00083a  6809              LDR      r1,[r1,#0]  ; Ys_2
00083c  1a40              SUBS     r0,r0,r1
00083e  b280              UXTH     r0,r0
000840  9013              STR      r0,[sp,#0x4c]
;;;587    						   hh=(float)xx/280;		//计算出X比例
000842  9813              LDR      r0,[sp,#0x4c]
000844  f7fffffe          BL       __aeabi_ui2f
000848  4923              LDR      r1,|L1.2264|
00084a  9004              STR      r0,[sp,#0x10]
00084c  f7fffffe          BL       __aeabi_fdiv
000850  9018              STR      r0,[sp,#0x60]
;;;588    						   xx=(float)((hh*320)-xx)/2;	//Y方向偏移量
000852  9813              LDR      r0,[sp,#0x4c]
000854  f7fffffe          BL       __aeabi_ui2f
000858  4920              LDR      r1,|L1.2268|
00085a  9002              STR      r0,[sp,#8]
00085c  9818              LDR      r0,[sp,#0x60]
00085e  f7fffffe          BL       __aeabi_fmul
000862  9001              STR      r0,[sp,#4]
000864  9902              LDR      r1,[sp,#8]
000866  f7fffffe          BL       __aeabi_fsub
00086a  f04f4180          MOV      r1,#0x40000000
00086e  9003              STR      r0,[sp,#0xc]
000870  f7fffffe          BL       __aeabi_fdiv
000874  9004              STR      r0,[sp,#0x10]
000876  f7fffffe          BL       __aeabi_f2uiz
00087a  b280              UXTH     r0,r0
00087c  9013              STR      r0,[sp,#0x4c]
;;;589    						   Y=320-(Y1-(Ys_2-xx))/hh;		  //计算坐标
00087e  4813              LDR      r0,|L1.2252|
000880  6801              LDR      r1,[r0,#0]  ; Ys_2
000882  9813              LDR      r0,[sp,#0x4c]
000884  1a08              SUBS     r0,r1,r0
000886  9000              STR      r0,[sp,#0]
000888  f7fffffe          BL       __aeabi_ui2f
00088c  9001              STR      r0,[sp,#4]
00088e  9919              LDR      r1,[sp,#0x64]
000890  f7fffffe          BL       __aeabi_frsub
000894  9002              STR      r0,[sp,#8]
000896  9918              LDR      r1,[sp,#0x60]
000898  f7fffffe          BL       __aeabi_fdiv
00089c  490f              LDR      r1,|L1.2268|
00089e  9003              STR      r0,[sp,#0xc]
0008a0  f7fffffe          BL       __aeabi_frsub
0008a4  9004              STR      r0,[sp,#0x10]
0008a6  f7fffffe          BL       __aeabi_f2uiz
0008aa  4903              LDR      r1,|L1.2232|
0008ac  6008              STR      r0,[r1,#0]  ; Y
;;;590    						   xx=Xs_4-Xs_2;	//计算出X2,X4距离
0008ae  480d              LDR      r0,|L1.2276|
0008b0  6801              LDR      r1,[r0,#0]  ; Xs_4
0008b2  e019              B        |L1.2280|
                  |L1.2228|
                          DCD      X
                  |L1.2232|
                          DCD      Y
                  |L1.2236|
                          DCD      ||dw||
                  |L1.2240|
                          DCD      Xs_1
                  |L1.2244|
                          DCD      Xs_3
                  |L1.2248|
                          DCD      Ys_1
                  |L1.2252|
                          DCD      Ys_2
                  |L1.2256|
                          DCD      0x43480000
                  |L1.2260|
                          DCD      0x43700000
                  |L1.2264|
                          DCD      0x438c0000
                  |L1.2268|
                          DCD      0x43a00000
                  |L1.2272|
                          DCD      Xs_2
                  |L1.2276|
                          DCD      Xs_4
                  |L1.2280|
0008e8  48fa              LDR      r0,|L1.3284|
0008ea  6800              LDR      r0,[r0,#0]  ; Xs_2
0008ec  1a08              SUBS     r0,r1,r0
0008ee  b280              UXTH     r0,r0
0008f0  9013              STR      r0,[sp,#0x4c]
;;;591    						   hh=(float)xx/200;	//计算出X比例因子
0008f2  9813              LDR      r0,[sp,#0x4c]
0008f4  f7fffffe          BL       __aeabi_ui2f
0008f8  49f7              LDR      r1,|L1.3288|
0008fa  9004              STR      r0,[sp,#0x10]
0008fc  f7fffffe          BL       __aeabi_fdiv
000900  9018              STR      r0,[sp,#0x60]
;;;592    						   xx=(float)((hh*240)-xx)/2;  //X方向偏移量
000902  9813              LDR      r0,[sp,#0x4c]
000904  f7fffffe          BL       __aeabi_ui2f
000908  49f4              LDR      r1,|L1.3292|
00090a  9002              STR      r0,[sp,#8]
00090c  9818              LDR      r0,[sp,#0x60]
00090e  f7fffffe          BL       __aeabi_fmul
000912  9001              STR      r0,[sp,#4]
000914  9902              LDR      r1,[sp,#8]
000916  f7fffffe          BL       __aeabi_fsub
00091a  f04f4180          MOV      r1,#0x40000000
00091e  9003              STR      r0,[sp,#0xc]
000920  f7fffffe          BL       __aeabi_fdiv
000924  9004              STR      r0,[sp,#0x10]
000926  f7fffffe          BL       __aeabi_f2uiz
00092a  b280              UXTH     r0,r0
00092c  9013              STR      r0,[sp,#0x4c]
;;;593    						   X=(X1-(Xs_2-xx))/hh;	//计算坐标
00092e  48e9              LDR      r0,|L1.3284|
000930  6801              LDR      r1,[r0,#0]  ; Xs_2
000932  9813              LDR      r0,[sp,#0x4c]
000934  1a08              SUBS     r0,r1,r0
000936  9001              STR      r0,[sp,#4]
000938  f7fffffe          BL       __aeabi_ui2f
00093c  9002              STR      r0,[sp,#8]
00093e  991a              LDR      r1,[sp,#0x68]
000940  f7fffffe          BL       __aeabi_frsub
000944  9003              STR      r0,[sp,#0xc]
000946  9918              LDR      r1,[sp,#0x60]
000948  f7fffffe          BL       __aeabi_fdiv
00094c  9004              STR      r0,[sp,#0x10]
00094e  f7fffffe          BL       __aeabi_f2uiz
000952  49e3              LDR      r1,|L1.3296|
000954  6008              STR      r0,[r1,#0]  ; X
;;;594    						   drawbigpoint(X,Y);
000956  48e3              LDR      r0,|L1.3300|
000958  6800              LDR      r0,[r0,#0]  ; Y
00095a  b281              UXTH     r1,r0
00095c  48e0              LDR      r0,|L1.3296|
00095e  6800              LDR      r0,[r0,#0]  ; X
000960  b2c0              UXTB     r0,r0
000962  f7fffffe          BL       drawbigpoint
                  |L1.2406|
;;;595    						 }
;;;596    					}
;;;597    
;;;598    			   		if((Xs_3<Xs_1)&&(Ys_3<Ys_4))	//右下角为起始坐标时进入
000966  48e0              LDR      r0,|L1.3304|
000968  6800              LDR      r0,[r0,#0]  ; Xs_3
00096a  49e0              LDR      r1,|L1.3308|
00096c  6809              LDR      r1,[r1,#0]  ; Xs_1
00096e  4288              CMP      r0,r1
000970  d27d              BCS      |L1.2670|
000972  48df              LDR      r0,|L1.3312|
000974  6800              LDR      r0,[r0,#0]  ; Ys_3
000976  49df              LDR      r1,|L1.3316|
000978  6809              LDR      r1,[r1,#0]  ; Ys_4
00097a  4288              CMP      r0,r1
00097c  d277              BCS      |L1.2670|
;;;599    					{
;;;600    						 if((Ys_3<Ys_4)&&(Xs_3<Xs_1))	//判断触摸方向
00097e  48dc              LDR      r0,|L1.3312|
000980  6800              LDR      r0,[r0,#0]  ; Ys_3
000982  49dc              LDR      r1,|L1.3316|
000984  6809              LDR      r1,[r1,#0]  ; Ys_4
000986  4288              CMP      r0,r1
000988  d272              BCS      |L1.2672|
00098a  48d7              LDR      r0,|L1.3304|
00098c  6800              LDR      r0,[r0,#0]  ; Xs_3
00098e  49d7              LDR      r1,|L1.3308|
000990  6809              LDR      r1,[r1,#0]  ; Xs_1
000992  4288              CMP      r0,r1
000994  d26c              BCS      |L1.2672|
;;;601    						 {
;;;602    						   xx=Ys_4-Ys_3;	//计算出Y3,Y4距离
000996  48d7              LDR      r0,|L1.3316|
000998  6800              LDR      r0,[r0,#0]  ; Ys_4
00099a  49d5              LDR      r1,|L1.3312|
00099c  6809              LDR      r1,[r1,#0]  ; Ys_3
00099e  1a40              SUBS     r0,r0,r1
0009a0  b280              UXTH     r0,r0
0009a2  9013              STR      r0,[sp,#0x4c]
;;;603    						   hh=(float)xx/200;		//计算出X比例
0009a4  9813              LDR      r0,[sp,#0x4c]
0009a6  f7fffffe          BL       __aeabi_ui2f
0009aa  49cb              LDR      r1,|L1.3288|
0009ac  9004              STR      r0,[sp,#0x10]
0009ae  f7fffffe          BL       __aeabi_fdiv
0009b2  9018              STR      r0,[sp,#0x60]
;;;604    						   xx=(float)((hh*240)-xx)/2;	//Y方向偏移量
0009b4  9813              LDR      r0,[sp,#0x4c]
0009b6  f7fffffe          BL       __aeabi_ui2f
0009ba  49c8              LDR      r1,|L1.3292|
0009bc  9002              STR      r0,[sp,#8]
0009be  9818              LDR      r0,[sp,#0x60]
0009c0  f7fffffe          BL       __aeabi_fmul
0009c4  9001              STR      r0,[sp,#4]
0009c6  9902              LDR      r1,[sp,#8]
0009c8  f7fffffe          BL       __aeabi_fsub
0009cc  f04f4180          MOV      r1,#0x40000000
0009d0  9003              STR      r0,[sp,#0xc]
0009d2  f7fffffe          BL       __aeabi_fdiv
0009d6  9004              STR      r0,[sp,#0x10]
0009d8  f7fffffe          BL       __aeabi_f2uiz
0009dc  b280              UXTH     r0,r0
0009de  9013              STR      r0,[sp,#0x4c]
;;;605    						   X=(Y1-(Ys_3-xx))/hh;		  //计算坐标
0009e0  48c3              LDR      r0,|L1.3312|
0009e2  6801              LDR      r1,[r0,#0]  ; Ys_3
0009e4  9813              LDR      r0,[sp,#0x4c]
0009e6  1a08              SUBS     r0,r1,r0
0009e8  9001              STR      r0,[sp,#4]
0009ea  f7fffffe          BL       __aeabi_ui2f
0009ee  9002              STR      r0,[sp,#8]
0009f0  9919              LDR      r1,[sp,#0x64]
0009f2  f7fffffe          BL       __aeabi_frsub
0009f6  9003              STR      r0,[sp,#0xc]
0009f8  9918              LDR      r1,[sp,#0x60]
0009fa  f7fffffe          BL       __aeabi_fdiv
0009fe  9004              STR      r0,[sp,#0x10]
000a00  f7fffffe          BL       __aeabi_f2uiz
000a04  49b6              LDR      r1,|L1.3296|
000a06  6008              STR      r0,[r1,#0]  ; X
;;;606    						   xx=Xs_1-Xs_3;	//计算出X1,X3距离
000a08  48b8              LDR      r0,|L1.3308|
000a0a  6800              LDR      r0,[r0,#0]  ; Xs_1
000a0c  49b6              LDR      r1,|L1.3304|
000a0e  6809              LDR      r1,[r1,#0]  ; Xs_3
000a10  1a40              SUBS     r0,r0,r1
000a12  b280              UXTH     r0,r0
000a14  9013              STR      r0,[sp,#0x4c]
;;;607    						   hh=(float)xx/280;	//计算出X比例因子
000a16  9813              LDR      r0,[sp,#0x4c]
000a18  f7fffffe          BL       __aeabi_ui2f
000a1c  49b6              LDR      r1,|L1.3320|
000a1e  9004              STR      r0,[sp,#0x10]
000a20  f7fffffe          BL       __aeabi_fdiv
000a24  9018              STR      r0,[sp,#0x60]
;;;608    						   xx=(float)((hh*320)-xx)/2;  //X方向偏移量
000a26  9813              LDR      r0,[sp,#0x4c]
000a28  f7fffffe          BL       __aeabi_ui2f
000a2c  49b3              LDR      r1,|L1.3324|
000a2e  9002              STR      r0,[sp,#8]
000a30  9818              LDR      r0,[sp,#0x60]
000a32  f7fffffe          BL       __aeabi_fmul
000a36  9001              STR      r0,[sp,#4]
000a38  9902              LDR      r1,[sp,#8]
000a3a  f7fffffe          BL       __aeabi_fsub
000a3e  f04f4180          MOV      r1,#0x40000000
000a42  9003              STR      r0,[sp,#0xc]
000a44  f7fffffe          BL       __aeabi_fdiv
000a48  9004              STR      r0,[sp,#0x10]
000a4a  f7fffffe          BL       __aeabi_f2uiz
000a4e  b280              UXTH     r0,r0
000a50  9013              STR      r0,[sp,#0x4c]
;;;609    						   Y=320-(X1-(Xs_3-xx))/hh;	//计算坐标
000a52  48a5              LDR      r0,|L1.3304|
000a54  6801              LDR      r1,[r0,#0]  ; Xs_3
000a56  9813              LDR      r0,[sp,#0x4c]
000a58  1a08              SUBS     r0,r1,r0
000a5a  9000              STR      r0,[sp,#0]
000a5c  f7fffffe          BL       __aeabi_ui2f
000a60  9001              STR      r0,[sp,#4]
000a62  991a              LDR      r1,[sp,#0x68]
000a64  f7fffffe          BL       __aeabi_frsub
000a68  9002              STR      r0,[sp,#8]
000a6a  9918              LDR      r1,[sp,#0x60]
000a6c  e001              B        |L1.2674|
                  |L1.2670|
000a6e  e092              B        |L1.2966|
                  |L1.2672|
000a70  e013              B        |L1.2714|
                  |L1.2674|
000a72  f7fffffe          BL       __aeabi_fdiv
000a76  49a1              LDR      r1,|L1.3324|
000a78  9003              STR      r0,[sp,#0xc]
000a7a  f7fffffe          BL       __aeabi_frsub
000a7e  9004              STR      r0,[sp,#0x10]
000a80  f7fffffe          BL       __aeabi_f2uiz
000a84  4997              LDR      r1,|L1.3300|
000a86  6008              STR      r0,[r1,#0]  ; Y
;;;610    						   drawbigpoint(X,Y);
000a88  4608              MOV      r0,r1
000a8a  6800              LDR      r0,[r0,#0]  ; Y
000a8c  b281              UXTH     r1,r0
000a8e  4894              LDR      r0,|L1.3296|
000a90  6800              LDR      r0,[r0,#0]  ; X
000a92  b2c0              UXTB     r0,r0
000a94  f7fffffe          BL       drawbigpoint
000a98  e07d              B        |L1.2966|
                  |L1.2714|
;;;611    						 }
;;;612    						 else
;;;613    						 {
;;;614    						   xx=Ys_4-Ys_3;	//计算出Y3,Y4距离
000a9a  4896              LDR      r0,|L1.3316|
000a9c  6800              LDR      r0,[r0,#0]  ; Ys_4
000a9e  4994              LDR      r1,|L1.3312|
000aa0  6809              LDR      r1,[r1,#0]  ; Ys_3
000aa2  1a40              SUBS     r0,r0,r1
000aa4  b280              UXTH     r0,r0
000aa6  9013              STR      r0,[sp,#0x4c]
;;;615    						   hh=(float)xx/280;		//计算出X比例
000aa8  9813              LDR      r0,[sp,#0x4c]
000aaa  f7fffffe          BL       __aeabi_ui2f
000aae  4992              LDR      r1,|L1.3320|
000ab0  9004              STR      r0,[sp,#0x10]
000ab2  f7fffffe          BL       __aeabi_fdiv
000ab6  9018              STR      r0,[sp,#0x60]
;;;616    						   xx=(float)((hh*320)-xx)/2;	//Y方向偏移量
000ab8  9813              LDR      r0,[sp,#0x4c]
000aba  f7fffffe          BL       __aeabi_ui2f
000abe  498f              LDR      r1,|L1.3324|
000ac0  9002              STR      r0,[sp,#8]
000ac2  9818              LDR      r0,[sp,#0x60]
000ac4  f7fffffe          BL       __aeabi_fmul
000ac8  9001              STR      r0,[sp,#4]
000aca  9902              LDR      r1,[sp,#8]
000acc  f7fffffe          BL       __aeabi_fsub
000ad0  f04f4180          MOV      r1,#0x40000000
000ad4  9003              STR      r0,[sp,#0xc]
000ad6  f7fffffe          BL       __aeabi_fdiv
000ada  9004              STR      r0,[sp,#0x10]
000adc  f7fffffe          BL       __aeabi_f2uiz
000ae0  b280              UXTH     r0,r0
000ae2  9013              STR      r0,[sp,#0x4c]
;;;617    						   Y=(Y1-(Ys_3-xx))/hh;		  //计算坐标
000ae4  4882              LDR      r0,|L1.3312|
000ae6  6801              LDR      r1,[r0,#0]  ; Ys_3
000ae8  9813              LDR      r0,[sp,#0x4c]
000aea  1a08              SUBS     r0,r1,r0
000aec  9001              STR      r0,[sp,#4]
000aee  f7fffffe          BL       __aeabi_ui2f
000af2  9002              STR      r0,[sp,#8]
000af4  9919              LDR      r1,[sp,#0x64]
000af6  f7fffffe          BL       __aeabi_frsub
000afa  9003              STR      r0,[sp,#0xc]
000afc  9918              LDR      r1,[sp,#0x60]
000afe  f7fffffe          BL       __aeabi_fdiv
000b02  9004              STR      r0,[sp,#0x10]
000b04  f7fffffe          BL       __aeabi_f2uiz
000b08  4976              LDR      r1,|L1.3300|
000b0a  6008              STR      r0,[r1,#0]  ; Y
;;;618    						   xx=Xs_1-Xs_3;	//计算出X1,X3距离
000b0c  4877              LDR      r0,|L1.3308|
000b0e  6800              LDR      r0,[r0,#0]  ; Xs_1
000b10  4975              LDR      r1,|L1.3304|
000b12  6809              LDR      r1,[r1,#0]  ; Xs_3
000b14  1a40              SUBS     r0,r0,r1
000b16  b280              UXTH     r0,r0
000b18  9013              STR      r0,[sp,#0x4c]
;;;619    						   hh=(float)xx/200;	//计算出X比例因子
000b1a  9813              LDR      r0,[sp,#0x4c]
000b1c  f7fffffe          BL       __aeabi_ui2f
000b20  496d              LDR      r1,|L1.3288|
000b22  9004              STR      r0,[sp,#0x10]
000b24  f7fffffe          BL       __aeabi_fdiv
000b28  9018              STR      r0,[sp,#0x60]
;;;620    						   xx=(float)((hh*240)-xx)/2;  //X方向偏移量
000b2a  9813              LDR      r0,[sp,#0x4c]
000b2c  f7fffffe          BL       __aeabi_ui2f
000b30  496a              LDR      r1,|L1.3292|
000b32  9002              STR      r0,[sp,#8]
000b34  9818              LDR      r0,[sp,#0x60]
000b36  f7fffffe          BL       __aeabi_fmul
000b3a  9001              STR      r0,[sp,#4]
000b3c  9902              LDR      r1,[sp,#8]
000b3e  f7fffffe          BL       __aeabi_fsub
000b42  f04f4180          MOV      r1,#0x40000000
000b46  9003              STR      r0,[sp,#0xc]
000b48  f7fffffe          BL       __aeabi_fdiv
000b4c  9004              STR      r0,[sp,#0x10]
000b4e  f7fffffe          BL       __aeabi_f2uiz
000b52  b280              UXTH     r0,r0
000b54  9013              STR      r0,[sp,#0x4c]
;;;621    						   X=240-(X1-(Xs_3-xx))/hh;	//计算坐标
000b56  4864              LDR      r0,|L1.3304|
000b58  6801              LDR      r1,[r0,#0]  ; Xs_3
000b5a  9813              LDR      r0,[sp,#0x4c]
000b5c  1a08              SUBS     r0,r1,r0
000b5e  9000              STR      r0,[sp,#0]
000b60  f7fffffe          BL       __aeabi_ui2f
000b64  9001              STR      r0,[sp,#4]
000b66  991a              LDR      r1,[sp,#0x68]
000b68  f7fffffe          BL       __aeabi_frsub
000b6c  9002              STR      r0,[sp,#8]
000b6e  9918              LDR      r1,[sp,#0x60]
000b70  f7fffffe          BL       __aeabi_fdiv
000b74  4959              LDR      r1,|L1.3292|
000b76  9003              STR      r0,[sp,#0xc]
000b78  f7fffffe          BL       __aeabi_frsub
000b7c  9004              STR      r0,[sp,#0x10]
000b7e  f7fffffe          BL       __aeabi_f2uiz
000b82  4957              LDR      r1,|L1.3296|
000b84  6008              STR      r0,[r1,#0]  ; X
;;;622    						   drawbigpoint(X,Y);
000b86  4857              LDR      r0,|L1.3300|
000b88  6800              LDR      r0,[r0,#0]  ; Y
000b8a  b281              UXTH     r1,r0
000b8c  4854              LDR      r0,|L1.3296|
000b8e  6800              LDR      r0,[r0,#0]  ; X
000b90  b2c0              UXTB     r0,r0
000b92  f7fffffe          BL       drawbigpoint
                  |L1.2966|
;;;623    						 }
;;;624    					}
;;;625    
;;;626    			   		if((Xs_4<Xs_2)&&(Ys_4<Ys_3))	//右上角为起始坐标时进入
000b96  485a              LDR      r0,|L1.3328|
000b98  6800              LDR      r0,[r0,#0]  ; Xs_4
000b9a  494e              LDR      r1,|L1.3284|
000b9c  6809              LDR      r1,[r1,#0]  ; Xs_2
000b9e  4288              CMP      r0,r1
000ba0  d27d              BCS      |L1.3230|
000ba2  4854              LDR      r0,|L1.3316|
000ba4  6801              LDR      r1,[r0,#0]  ; Ys_4
000ba6  4852              LDR      r0,|L1.3312|
000ba8  6800              LDR      r0,[r0,#0]  ; Ys_3
000baa  4281              CMP      r1,r0
000bac  d277              BCS      |L1.3230|
;;;627    					{
;;;628    						 if((Ys_4<Ys_3)&&(Xs_4<Xs_2))	//判断触摸方向
000bae  4851              LDR      r0,|L1.3316|
000bb0  6801              LDR      r1,[r0,#0]  ; Ys_4
000bb2  484f              LDR      r0,|L1.3312|
000bb4  6800              LDR      r0,[r0,#0]  ; Ys_3
000bb6  4281              CMP      r1,r0
000bb8  d272              BCS      |L1.3232|
000bba  4851              LDR      r0,|L1.3328|
000bbc  6801              LDR      r1,[r0,#0]  ; Xs_4
000bbe  4845              LDR      r0,|L1.3284|
000bc0  6800              LDR      r0,[r0,#0]  ; Xs_2
000bc2  4281              CMP      r1,r0
000bc4  d26c              BCS      |L1.3232|
;;;629    						 {
;;;630    						   xx=Ys_3-Ys_4;	//计算出Y3,Y4距离
000bc6  484a              LDR      r0,|L1.3312|
000bc8  6801              LDR      r1,[r0,#0]  ; Ys_3
000bca  484a              LDR      r0,|L1.3316|
000bcc  6800              LDR      r0,[r0,#0]  ; Ys_4
000bce  1a08              SUBS     r0,r1,r0
000bd0  b280              UXTH     r0,r0
000bd2  9013              STR      r0,[sp,#0x4c]
;;;631    						   hh=(float)xx/200;		//计算出X比例
000bd4  9813              LDR      r0,[sp,#0x4c]
000bd6  f7fffffe          BL       __aeabi_ui2f
000bda  493f              LDR      r1,|L1.3288|
000bdc  9004              STR      r0,[sp,#0x10]
000bde  f7fffffe          BL       __aeabi_fdiv
000be2  9018              STR      r0,[sp,#0x60]
;;;632    						   xx=(float)((hh*240)-xx)/2;	//Y方向偏移量
000be4  9813              LDR      r0,[sp,#0x4c]
000be6  f7fffffe          BL       __aeabi_ui2f
000bea  493c              LDR      r1,|L1.3292|
000bec  9002              STR      r0,[sp,#8]
000bee  9818              LDR      r0,[sp,#0x60]
000bf0  f7fffffe          BL       __aeabi_fmul
000bf4  9001              STR      r0,[sp,#4]
000bf6  9902              LDR      r1,[sp,#8]
000bf8  f7fffffe          BL       __aeabi_fsub
000bfc  f04f4180          MOV      r1,#0x40000000
000c00  9003              STR      r0,[sp,#0xc]
000c02  f7fffffe          BL       __aeabi_fdiv
000c06  9004              STR      r0,[sp,#0x10]
000c08  f7fffffe          BL       __aeabi_f2uiz
000c0c  b280              UXTH     r0,r0
000c0e  9013              STR      r0,[sp,#0x4c]
;;;633    						   X=240-(Y1-(Ys_4-xx))/hh;		  //计算坐标
000c10  4838              LDR      r0,|L1.3316|
000c12  6801              LDR      r1,[r0,#0]  ; Ys_4
000c14  9813              LDR      r0,[sp,#0x4c]
000c16  1a08              SUBS     r0,r1,r0
000c18  9000              STR      r0,[sp,#0]
000c1a  f7fffffe          BL       __aeabi_ui2f
000c1e  9001              STR      r0,[sp,#4]
000c20  9919              LDR      r1,[sp,#0x64]
000c22  f7fffffe          BL       __aeabi_frsub
000c26  9002              STR      r0,[sp,#8]
000c28  9918              LDR      r1,[sp,#0x60]
000c2a  f7fffffe          BL       __aeabi_fdiv
000c2e  492b              LDR      r1,|L1.3292|
000c30  9003              STR      r0,[sp,#0xc]
000c32  f7fffffe          BL       __aeabi_frsub
000c36  9004              STR      r0,[sp,#0x10]
000c38  f7fffffe          BL       __aeabi_f2uiz
000c3c  4928              LDR      r1,|L1.3296|
000c3e  6008              STR      r0,[r1,#0]  ; X
;;;634    						   xx=Xs_2-Xs_4;	//计算出X2,X4距离
000c40  4824              LDR      r0,|L1.3284|
000c42  6801              LDR      r1,[r0,#0]  ; Xs_2
000c44  482e              LDR      r0,|L1.3328|
000c46  6800              LDR      r0,[r0,#0]  ; Xs_4
000c48  1a08              SUBS     r0,r1,r0
000c4a  b280              UXTH     r0,r0
000c4c  9013              STR      r0,[sp,#0x4c]
;;;635    						   hh=(float)xx/280;	//计算出X比例因子
000c4e  9813              LDR      r0,[sp,#0x4c]
000c50  f7fffffe          BL       __aeabi_ui2f
000c54  4928              LDR      r1,|L1.3320|
000c56  9004              STR      r0,[sp,#0x10]
000c58  f7fffffe          BL       __aeabi_fdiv
000c5c  9018              STR      r0,[sp,#0x60]
;;;636    						   xx=(float)((hh*320)-xx)/2;  //X方向偏移量
000c5e  9813              LDR      r0,[sp,#0x4c]
000c60  f7fffffe          BL       __aeabi_ui2f
000c64  4925              LDR      r1,|L1.3324|
000c66  9002              STR      r0,[sp,#8]
000c68  9818              LDR      r0,[sp,#0x60]
000c6a  f7fffffe          BL       __aeabi_fmul
000c6e  9001              STR      r0,[sp,#4]
000c70  9902              LDR      r1,[sp,#8]
000c72  f7fffffe          BL       __aeabi_fsub
000c76  f04f4180          MOV      r1,#0x40000000
000c7a  9003              STR      r0,[sp,#0xc]
000c7c  f7fffffe          BL       __aeabi_fdiv
000c80  9004              STR      r0,[sp,#0x10]
000c82  f7fffffe          BL       __aeabi_f2uiz
000c86  b280              UXTH     r0,r0
000c88  9013              STR      r0,[sp,#0x4c]
;;;637    						   Y=320-(X1-(Xs_4-xx))/hh;	//计算坐标
000c8a  481d              LDR      r0,|L1.3328|
000c8c  6801              LDR      r1,[r0,#0]  ; Xs_4
000c8e  9813              LDR      r0,[sp,#0x4c]
000c90  1a08              SUBS     r0,r1,r0
000c92  9000              STR      r0,[sp,#0]
000c94  f7fffffe          BL       __aeabi_ui2f
000c98  9001              STR      r0,[sp,#4]
000c9a  991a              LDR      r1,[sp,#0x68]
000c9c  e001              B        |L1.3234|
                  |L1.3230|
000c9e  e0b3              B        |L1.3592|
                  |L1.3232|
000ca0  e030              B        |L1.3332|
                  |L1.3234|
000ca2  f7fffffe          BL       __aeabi_frsub
000ca6  9002              STR      r0,[sp,#8]
000ca8  9918              LDR      r1,[sp,#0x60]
000caa  f7fffffe          BL       __aeabi_fdiv
000cae  4913              LDR      r1,|L1.3324|
000cb0  9003              STR      r0,[sp,#0xc]
000cb2  f7fffffe          BL       __aeabi_frsub
000cb6  9004              STR      r0,[sp,#0x10]
000cb8  f7fffffe          BL       __aeabi_f2uiz
000cbc  4909              LDR      r1,|L1.3300|
000cbe  6008              STR      r0,[r1,#0]  ; Y
;;;638    						   drawbigpoint(X,Y);
000cc0  4608              MOV      r0,r1
000cc2  6800              LDR      r0,[r0,#0]  ; Y
000cc4  b281              UXTH     r1,r0
000cc6  4806              LDR      r0,|L1.3296|
000cc8  6800              LDR      r0,[r0,#0]  ; X
000cca  b2c0              UXTB     r0,r0
000ccc  f7fffffe          BL       drawbigpoint
000cd0  e09a              B        |L1.3592|
000cd2  0000              DCW      0x0000
                  |L1.3284|
                          DCD      Xs_2
                  |L1.3288|
                          DCD      0x43480000
                  |L1.3292|
                          DCD      0x43700000
                  |L1.3296|
                          DCD      X
                  |L1.3300|
                          DCD      Y
                  |L1.3304|
                          DCD      Xs_3
                  |L1.3308|
                          DCD      Xs_1
                  |L1.3312|
                          DCD      Ys_3
                  |L1.3316|
                          DCD      Ys_4
                  |L1.3320|
                          DCD      0x438c0000
                  |L1.3324|
                          DCD      0x43a00000
                  |L1.3328|
                          DCD      Xs_4
                  |L1.3332|
;;;639    						 }
;;;640    						 else
;;;641    						 {
;;;642    						   xx=Ys_3-Ys_4;	//计算出Y3,Y4距离
000d04  48ff              LDR      r0,|L1.4356|
000d06  6801              LDR      r1,[r0,#0]  ; Ys_3
000d08  48ff              LDR      r0,|L1.4360|
000d0a  6800              LDR      r0,[r0,#0]  ; Ys_4
000d0c  1a08              SUBS     r0,r1,r0
000d0e  b280              UXTH     r0,r0
000d10  9013              STR      r0,[sp,#0x4c]
;;;643    						   hh=(float)xx/280;		//计算出X比例
000d12  9813              LDR      r0,[sp,#0x4c]
000d14  f7fffffe          BL       __aeabi_ui2f
000d18  49fc              LDR      r1,|L1.4364|
000d1a  9004              STR      r0,[sp,#0x10]
000d1c  f7fffffe          BL       __aeabi_fdiv
000d20  9018              STR      r0,[sp,#0x60]
;;;644    						   xx=(float)((hh*320)-xx)/2;	//Y方向偏移量
000d22  9813              LDR      r0,[sp,#0x4c]
000d24  f7fffffe          BL       __aeabi_ui2f
000d28  49f9              LDR      r1,|L1.4368|
000d2a  9002              STR      r0,[sp,#8]
000d2c  9818              LDR      r0,[sp,#0x60]
000d2e  f7fffffe          BL       __aeabi_fmul
000d32  9001              STR      r0,[sp,#4]
000d34  9902              LDR      r1,[sp,#8]
000d36  f7fffffe          BL       __aeabi_fsub
000d3a  f04f4180          MOV      r1,#0x40000000
000d3e  9003              STR      r0,[sp,#0xc]
000d40  f7fffffe          BL       __aeabi_fdiv
000d44  9004              STR      r0,[sp,#0x10]
000d46  f7fffffe          BL       __aeabi_f2uiz
000d4a  b280              UXTH     r0,r0
000d4c  9013              STR      r0,[sp,#0x4c]
;;;645    						   Y=320-(Y1-(Ys_4-xx))/hh;		  //计算坐标
000d4e  48ee              LDR      r0,|L1.4360|
000d50  6801              LDR      r1,[r0,#0]  ; Ys_4
000d52  9813              LDR      r0,[sp,#0x4c]
000d54  1a08              SUBS     r0,r1,r0
000d56  9000              STR      r0,[sp,#0]
000d58  f7fffffe          BL       __aeabi_ui2f
000d5c  9001              STR      r0,[sp,#4]
000d5e  9919              LDR      r1,[sp,#0x64]
000d60  f7fffffe          BL       __aeabi_frsub
000d64  9002              STR      r0,[sp,#8]
000d66  9918              LDR      r1,[sp,#0x60]
000d68  f7fffffe          BL       __aeabi_fdiv
000d6c  49e8              LDR      r1,|L1.4368|
000d6e  9003              STR      r0,[sp,#0xc]
000d70  f7fffffe          BL       __aeabi_frsub
000d74  9004              STR      r0,[sp,#0x10]
000d76  f7fffffe          BL       __aeabi_f2uiz
000d7a  49e6              LDR      r1,|L1.4372|
000d7c  6008              STR      r0,[r1,#0]  ; Y
;;;646    						   xx=Xs_2-Xs_4;	//计算出X2,X4距离
000d7e  48e6              LDR      r0,|L1.4376|
000d80  6801              LDR      r1,[r0,#0]  ; Xs_2
000d82  48e6              LDR      r0,|L1.4380|
000d84  6800              LDR      r0,[r0,#0]  ; Xs_4
000d86  1a08              SUBS     r0,r1,r0
000d88  b280              UXTH     r0,r0
000d8a  9013              STR      r0,[sp,#0x4c]
;;;647    						   hh=(float)xx/200;	//计算出X比例因子
000d8c  9813              LDR      r0,[sp,#0x4c]
000d8e  f7fffffe          BL       __aeabi_ui2f
000d92  49e3              LDR      r1,|L1.4384|
000d94  9004              STR      r0,[sp,#0x10]
000d96  f7fffffe          BL       __aeabi_fdiv
000d9a  9018              STR      r0,[sp,#0x60]
;;;648    						   xx=(float)((hh*240)-xx)/2;  //X方向偏移量
000d9c  9813              LDR      r0,[sp,#0x4c]
000d9e  f7fffffe          BL       __aeabi_ui2f
000da2  49e0              LDR      r1,|L1.4388|
000da4  9002              STR      r0,[sp,#8]
000da6  9818              LDR      r0,[sp,#0x60]
000da8  f7fffffe          BL       __aeabi_fmul
000dac  9001              STR      r0,[sp,#4]
000dae  9902              LDR      r1,[sp,#8]
000db0  f7fffffe          BL       __aeabi_fsub
000db4  f04f4180          MOV      r1,#0x40000000
000db8  9003              STR      r0,[sp,#0xc]
000dba  f7fffffe          BL       __aeabi_fdiv
000dbe  9004              STR      r0,[sp,#0x10]
000dc0  f7fffffe          BL       __aeabi_f2uiz
000dc4  b280              UXTH     r0,r0
000dc6  9013              STR      r0,[sp,#0x4c]
;;;649    						   X=240-(X1-(Xs_4-xx))/hh;	//计算坐标
000dc8  48d4              LDR      r0,|L1.4380|
000dca  6801              LDR      r1,[r0,#0]  ; Xs_4
000dcc  9813              LDR      r0,[sp,#0x4c]
000dce  1a08              SUBS     r0,r1,r0
000dd0  9000              STR      r0,[sp,#0]
000dd2  f7fffffe          BL       __aeabi_ui2f
000dd6  9001              STR      r0,[sp,#4]
000dd8  991a              LDR      r1,[sp,#0x68]
000dda  f7fffffe          BL       __aeabi_frsub
000dde  9002              STR      r0,[sp,#8]
000de0  9918              LDR      r1,[sp,#0x60]
000de2  f7fffffe          BL       __aeabi_fdiv
000de6  49cf              LDR      r1,|L1.4388|
000de8  9003              STR      r0,[sp,#0xc]
000dea  f7fffffe          BL       __aeabi_frsub
000dee  9004              STR      r0,[sp,#0x10]
000df0  f7fffffe          BL       __aeabi_f2uiz
000df4  49cc              LDR      r1,|L1.4392|
000df6  6008              STR      r0,[r1,#0]  ; X
;;;650    						   drawbigpoint(X,Y);
000df8  48c6              LDR      r0,|L1.4372|
000dfa  6800              LDR      r0,[r0,#0]  ; Y
000dfc  b281              UXTH     r1,r0
000dfe  48ca              LDR      r0,|L1.4392|
000e00  6800              LDR      r0,[r0,#0]  ; X
000e02  b2c0              UXTB     r0,r0
000e04  f7fffffe          BL       drawbigpoint
                  |L1.3592|
;;;651    						 }
;;;652    					}
;;;653    
;;;654    
;;;655    			  }  // 				*/
;;;656    			   }  // 
;;;657    
;;;658    		}   
;;;659    	}
;;;660    }	 
000e08  b01b              ADD      sp,sp,#0x6c
000e0a  bd00              POP      {pc}
;;;661    
                          ENDP

                  delay_ms PROC
;;;671    //对72M条件下,Nms<=1864 
;;;672    void delay_ms(u16 nms)
000e0c  4601              MOV      r1,r0
;;;673    {	 		  	  
;;;674    	u32 temp;		   
;;;675    	SysTick->LOAD=(u32)nms*fac_ms;//时间加载
000e0e  4ac7              LDR      r2,|L1.4396|
000e10  8812              LDRH     r2,[r2,#0]  ; fac_ms
000e12  434a              MULS     r2,r1,r2
000e14  f04f23e0          MOV      r3,#0xe000e000
000e18  615a              STR      r2,[r3,#0x14]
;;;676    	SysTick->VAL =0x00;           //清空计数器
000e1a  2200              MOVS     r2,#0
000e1c  619a              STR      r2,[r3,#0x18]
;;;677    	SysTick->CTRL=0x01 ;          //开始倒数  
000e1e  2201              MOVS     r2,#1
000e20  611a              STR      r2,[r3,#0x10]
;;;678    	do
000e22  bf00              NOP      
                  |L1.3620|
;;;679    	{
;;;680    		temp=SysTick->CTRL;
000e24  f04f22e0          MOV      r2,#0xe000e000
000e28  6910              LDR      r0,[r2,#0x10]
;;;681    	}
;;;682    	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
000e2a  f0100f01          TST      r0,#1
000e2e  d002              BEQ      |L1.3638|
000e30  f4103f80          TST      r0,#0x10000
000e34  d0f6              BEQ      |L1.3620|
                  |L1.3638|
;;;683    	SysTick->CTRL=0x00;       //关闭计数器
000e36  2200              MOVS     r2,#0
000e38  f04f23e0          MOV      r3,#0xe000e000
000e3c  611a              STR      r2,[r3,#0x10]
;;;684    	SysTick->VAL =0X00;       //清空计数器	  	    
000e3e  619a              STR      r2,[r3,#0x18]
;;;685    }   
000e40  4770              BX       lr
;;;686    //延时us								   
                          ENDP

                  FillColor PROC
;;;463    
;;;464    void FillColor(u8 x,u16 y, u8 x1, u16 y1, u16 z)
000e42  e92d47f0          PUSH     {r4-r10,lr}
;;;465    {	u16 a,b;
000e46  4604              MOV      r4,r0
000e48  460d              MOV      r5,r1
000e4a  4690              MOV      r8,r2
000e4c  4699              MOV      r9,r3
000e4e  f8dda020          LDR      r10,[sp,#0x20]
;;;466    	POINT_COLOR=z; 
000e52  48b7              LDR      r0,|L1.4400|
000e54  f8a0a000          STRH     r10,[r0,#0]
;;;467    	for(a=0; a<(y1-y); a++)
000e58  2600              MOVS     r6,#0
000e5a  e00d              B        |L1.3704|
                  |L1.3676|
;;;468    	{
;;;469    	  for(b=0; b<(x1-x); b++)
000e5c  2700              MOVS     r7,#0
000e5e  e005              B        |L1.3692|
                  |L1.3680|
;;;470    	  {
;;;471    	   TFT_DrawPoint(x+b,y+a);
000e60  19a9              ADDS     r1,r5,r6
000e62  19e0              ADDS     r0,r4,r7
000e64  f7fffffe          BL       TFT_DrawPoint
000e68  1c78              ADDS     r0,r7,#1              ;469
000e6a  b287              UXTH     r7,r0                 ;469
                  |L1.3692|
000e6c  eba80004          SUB      r0,r8,r4              ;469
000e70  42b8              CMP      r0,r7                 ;469
000e72  dcf5              BGT      |L1.3680|
000e74  1c70              ADDS     r0,r6,#1              ;467
000e76  b286              UXTH     r6,r0                 ;467
                  |L1.3704|
000e78  eba90005          SUB      r0,r9,r5              ;467
000e7c  42b0              CMP      r0,r6                 ;467
000e7e  dced              BGT      |L1.3676|
;;;472    	  }
;;;473    	}	  	
;;;474    }
000e80  e8bd87f0          POP      {r4-r10,pc}
;;;475     
                          ENDP

                  heyaodz_TP PROC
;;;157    }
;;;158    void heyaodz_TP(void)	//绘制界面
000e84  b508              PUSH     {r3,lr}
;;;159    {
;;;160    
;;;161    	FillColor(1,1,20,20,RED); 
000e86  f44f4378          MOV      r3,#0xf800
000e8a  9300              STR      r3,[sp,#0]
000e8c  2314              MOVS     r3,#0x14
000e8e  461a              MOV      r2,r3
000e90  2101              MOVS     r1,#1
000e92  4608              MOV      r0,r1
000e94  f7fffffe          BL       FillColor
;;;162    	FillColor(20,1,40,20,BLUE); 
000e98  231f              MOVS     r3,#0x1f
000e9a  9300              STR      r3,[sp,#0]
000e9c  2314              MOVS     r3,#0x14
000e9e  2228              MOVS     r2,#0x28
000ea0  2101              MOVS     r1,#1
000ea2  4618              MOV      r0,r3
000ea4  f7fffffe          BL       FillColor
;;;163    	FillColor(40,1,60,20,GREEN); 
000ea8  f44f63fc          MOV      r3,#0x7e0
000eac  9300              STR      r3,[sp,#0]
000eae  2314              MOVS     r3,#0x14
000eb0  223c              MOVS     r2,#0x3c
000eb2  2101              MOVS     r1,#1
000eb4  2028              MOVS     r0,#0x28
000eb6  f7fffffe          BL       FillColor
;;;164    	FillColor(60,1,80,20,GRED); 
000eba  f64f73e0          MOV      r3,#0xffe0
000ebe  9300              STR      r3,[sp,#0]
000ec0  2314              MOVS     r3,#0x14
000ec2  2250              MOVS     r2,#0x50
000ec4  2101              MOVS     r1,#1
000ec6  203c              MOVS     r0,#0x3c
000ec8  f7fffffe          BL       FillColor
;;;165    	FillColor(80,1,100,20,BRED); 
000ecc  f64f031f          MOV      r3,#0xf81f
000ed0  9300              STR      r3,[sp,#0]
000ed2  2314              MOVS     r3,#0x14
000ed4  2264              MOVS     r2,#0x64
000ed6  2101              MOVS     r1,#1
000ed8  2050              MOVS     r0,#0x50
000eda  f7fffffe          BL       FillColor
;;;166    	FillColor(100,1,120,20,0); 	 
000ede  2300              MOVS     r3,#0
000ee0  9300              STR      r3,[sp,#0]
000ee2  2314              MOVS     r3,#0x14
000ee4  2278              MOVS     r2,#0x78
000ee6  2101              MOVS     r1,#1
000ee8  2064              MOVS     r0,#0x64
000eea  f7fffffe          BL       FillColor
;;;167    	TFT_ShowString(210,2,"CLR");	
000eee  a291              ADR      r2,|L1.4404|
000ef0  2102              MOVS     r1,#2
000ef2  20d2              MOVS     r0,#0xd2
000ef4  f7fffffe          BL       TFT_ShowString
;;;168    
;;;169    
;;;170    }
000ef8  bd08              POP      {r3,pc}
;;;171    
                          ENDP

                  heyaodz_TPad0 PROC
;;;116    
;;;117    void heyaodz_TPad0(void)	//触摸
000efa  b510              PUSH     {r4,lr}
;;;118    {
;;;119    	POINT_COLOR=RED;
000efc  f44f4078          MOV      r0,#0xf800
000f00  498b              LDR      r1,|L1.4400|
000f02  8008              STRH     r0,[r1,#0]
;;;120    	TFT_CLEAR(0,0,240,320);     //清屏   	
000f04  f44f73a0          MOV      r3,#0x140
000f08  22f0              MOVS     r2,#0xf0
000f0a  2100              MOVS     r1,#0
000f0c  4608              MOV      r0,r1
000f0e  f7fffffe          BL       TFT_CLEAR
;;;121    	heyaodz_TP();	//绘制界面
000f12  f7fffffe          BL       heyaodz_TP
;;;122    }
000f16  bd10              POP      {r4,pc}
;;;123    
                          ENDP

                  M25P80_buf_ToRam_TP PROC
;;;125    
;;;126    void M25P80_buf_ToRam_TP(void) //读取保存的值
000f18  b510              PUSH     {r4,lr}
;;;127    {
;;;128    	TCS_SET(1); 
000f1a  4887              LDR      r0,|L1.4408|
000f1c  6800              LDR      r0,[r0,#0]
000f1e  f0400080          ORR      r0,r0,#0x80
000f22  4986              LDR      r1,|L1.4412|
000f24  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;129        M25P80_buf_ToRam(1,2,17); //读取数据  
000f28  f04f0211          MOV      r2,#0x11
000f2c  f04f0102          MOV      r1,#2
000f30  f04f0001          MOV      r0,#1
000f34  f7fffffe          BL       M25P80_buf_ToRam
;;;130    	TP_B=AT45_buffer[17]; // 识别字
000f38  4881              LDR      r0,|L1.4416|
000f3a  7c40              LDRB     r0,[r0,#0x11]  ; AT45_buffer
000f3c  4981              LDR      r1,|L1.4420|
000f3e  7008              STRB     r0,[r1,#0]
;;;131    
;;;132    	Xs_1=(AT45_buffer[18]<<8)+AT45_buffer[19];
000f40  487f              LDR      r0,|L1.4416|
000f42  7cc0              LDRB     r0,[r0,#0x13]  ; AT45_buffer
000f44  497e              LDR      r1,|L1.4416|
000f46  7c89              LDRB     r1,[r1,#0x12]  ; AT45_buffer
000f48  eb002001          ADD      r0,r0,r1,LSL #8
000f4c  497e              LDR      r1,|L1.4424|
000f4e  6008              STR      r0,[r1,#0]  ; Xs_1
;;;133    	Ys_1=(AT45_buffer[20]<<8)+AT45_buffer[21];
000f50  487b              LDR      r0,|L1.4416|
000f52  7d40              LDRB     r0,[r0,#0x15]  ; AT45_buffer
000f54  497a              LDR      r1,|L1.4416|
000f56  7d09              LDRB     r1,[r1,#0x14]  ; AT45_buffer
000f58  eb002001          ADD      r0,r0,r1,LSL #8
000f5c  497b              LDR      r1,|L1.4428|
000f5e  6008              STR      r0,[r1,#0]  ; Ys_1
;;;134    
;;;135    	Xs_2=(AT45_buffer[22]<<8)+AT45_buffer[23];
000f60  4877              LDR      r0,|L1.4416|
000f62  7dc0              LDRB     r0,[r0,#0x17]  ; AT45_buffer
000f64  4976              LDR      r1,|L1.4416|
000f66  7d89              LDRB     r1,[r1,#0x16]  ; AT45_buffer
000f68  eb002001          ADD      r0,r0,r1,LSL #8
000f6c  496a              LDR      r1,|L1.4376|
000f6e  6008              STR      r0,[r1,#0]  ; Xs_2
;;;136    	Ys_2=(AT45_buffer[24]<<8)+AT45_buffer[25];
000f70  4873              LDR      r0,|L1.4416|
000f72  7e40              LDRB     r0,[r0,#0x19]  ; AT45_buffer
000f74  4972              LDR      r1,|L1.4416|
000f76  7e09              LDRB     r1,[r1,#0x18]  ; AT45_buffer
000f78  eb002001          ADD      r0,r0,r1,LSL #8
000f7c  4974              LDR      r1,|L1.4432|
000f7e  6008              STR      r0,[r1,#0]  ; Ys_2
;;;137    
;;;138    	Xs_3=(AT45_buffer[26]<<8)+AT45_buffer[27];
000f80  486f              LDR      r0,|L1.4416|
000f82  7ec0              LDRB     r0,[r0,#0x1b]  ; AT45_buffer
000f84  496e              LDR      r1,|L1.4416|
000f86  7e89              LDRB     r1,[r1,#0x1a]  ; AT45_buffer
000f88  eb002001          ADD      r0,r0,r1,LSL #8
000f8c  4971              LDR      r1,|L1.4436|
000f8e  6008              STR      r0,[r1,#0]  ; Xs_3
;;;139    	Ys_3=(AT45_buffer[28]<<8)+AT45_buffer[29];
000f90  486b              LDR      r0,|L1.4416|
000f92  7f40              LDRB     r0,[r0,#0x1d]  ; AT45_buffer
000f94  496a              LDR      r1,|L1.4416|
000f96  7f09              LDRB     r1,[r1,#0x1c]  ; AT45_buffer
000f98  eb002001          ADD      r0,r0,r1,LSL #8
000f9c  4959              LDR      r1,|L1.4356|
000f9e  6008              STR      r0,[r1,#0]  ; Ys_3
;;;140    
;;;141    	Xs_4=(AT45_buffer[30]<<8)+AT45_buffer[31];
000fa0  4867              LDR      r0,|L1.4416|
000fa2  7fc0              LDRB     r0,[r0,#0x1f]  ; AT45_buffer
000fa4  4966              LDR      r1,|L1.4416|
000fa6  7f89              LDRB     r1,[r1,#0x1e]  ; AT45_buffer
000fa8  eb002001          ADD      r0,r0,r1,LSL #8
000fac  495b              LDR      r1,|L1.4380|
000fae  6008              STR      r0,[r1,#0]  ; Xs_4
;;;142    	Ys_4=(AT45_buffer[32]<<8)+AT45_buffer[33];
000fb0  4863              LDR      r0,|L1.4416|
000fb2  f8900021          LDRB     r0,[r0,#0x21]  ; AT45_buffer
000fb6  4962              LDR      r1,|L1.4416|
000fb8  f8911020          LDRB     r1,[r1,#0x20]  ; AT45_buffer
000fbc  eb002001          ADD      r0,r0,r1,LSL #8
000fc0  4951              LDR      r1,|L1.4360|
000fc2  6008              STR      r0,[r1,#0]  ; Ys_4
;;;143    	
;;;144    	dw=1;
000fc4  2001              MOVS     r0,#1
000fc6  4964              LDR      r1,|L1.4440|
000fc8  7008              STRB     r0,[r1,#0]
;;;145    
;;;146    }
000fca  bd10              POP      {r4,pc}
;;;147    
                          ENDP

                  NVIC_Configuration PROC
;;;307    //////////////////////////////////////
;;;308    void NVIC_Configuration(void)
000fcc  b508              PUSH     {r3,lr}
;;;309    {
;;;310      NVIC_InitTypeDef NVIC_InitStructure;
;;;311      
;;;312      /* Configure one bit for preemption priority */
;;;313      NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
000fce  f44f60c0          MOV      r0,#0x600
000fd2  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;314      
;;;315      /* Enable the EXTI9_5 Interrupt */
;;;316      
;;;317    
;;;318      NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn  ;
000fd6  2017              MOVS     r0,#0x17
000fd8  f88d0000          STRB     r0,[sp,#0]
;;;319    
;;;320      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
000fdc  2000              MOVS     r0,#0
000fde  f88d0001          STRB     r0,[sp,#1]
;;;321      NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000fe2  f88d0002          STRB     r0,[sp,#2]
;;;322      NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000fe6  2001              MOVS     r0,#1
000fe8  f88d0003          STRB     r0,[sp,#3]
;;;323      NVIC_Init(&NVIC_InitStructure);
000fec  4668              MOV      r0,sp
000fee  f7fffffe          BL       NVIC_Init
;;;324      
;;;325    }
000ff2  bd08              POP      {r3,pc}
;;;326    void Delay(__IO uint32_t nCount)
                          ENDP

                  GPIO_Configuration PROC
;;;184    
;;;185    void GPIO_Configuration(void)
000ff4  b508              PUSH     {r3,lr}
;;;186    {
;;;187      GPIO_InitTypeDef GPIO_InitStructure;
;;;188     
;;;189    
;;;190      RCC_APB2PeriphClockCmd( RCC_APB2Periph_USART1 |RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB |
000ff6  2101              MOVS     r1,#1
000ff8  f244007c          MOV      r0,#0x407c
000ffc  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;191                             RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD |
;;;192                             RCC_APB2Periph_GPIOE, ENABLE);
;;;193      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;				    
001000  2020              MOVS     r0,#0x20
001002  f8ad0000          STRH     r0,[sp,#0]
;;;194      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
001006  2010              MOVS     r0,#0x10
001008  f88d0003          STRB     r0,[sp,#3]
;;;195      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00100c  2003              MOVS     r0,#3
00100e  f88d0002          STRB     r0,[sp,#2]
;;;196      GPIO_Init(GPIOB, &GPIO_InitStructure);					 
001012  4669              MOV      r1,sp
001014  4848              LDR      r0,|L1.4408|
001016  380c              SUBS     r0,r0,#0xc
001018  f7fffffe          BL       GPIO_Init
;;;197    
;;;198    // GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13 |GPIO_Pin_6|GPIO_Pin_3;		 
;;;199    //  GPIO_Init(GPIOD, &GPIO_InitStructure);
;;;200    
;;;201      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5|GPIO_Pin_2|GPIO_Pin_3;		 
00101c  202c              MOVS     r0,#0x2c
00101e  f8ad0000          STRH     r0,[sp,#0]
;;;202      GPIO_Init(GPIOC, &GPIO_InitStructure);
001022  4669              MOV      r1,sp
001024  484d              LDR      r0,|L1.4444|
001026  f7fffffe          BL       GPIO_Init
;;;203    
;;;204      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;		 //COL4
00102a  2040              MOVS     r0,#0x40
00102c  f8ad0000          STRH     r0,[sp,#0]
;;;205      GPIO_Init(GPIOE, &GPIO_InitStructure);
001030  4669              MOV      r1,sp
001032  484b              LDR      r0,|L1.4448|
001034  f7fffffe          BL       GPIO_Init
;;;206    
;;;207      GPIO_SetBits(GPIOC, GPIO_Pin_5|GPIO_Pin_2|GPIO_Pin_3);
001038  212c              MOVS     r1,#0x2c
00103a  4848              LDR      r0,|L1.4444|
00103c  f7fffffe          BL       GPIO_SetBits
;;;208      GPIO_SetBits(GPIOE, GPIO_Pin_6);	     
001040  2140              MOVS     r1,#0x40
001042  4847              LDR      r0,|L1.4448|
001044  f7fffffe          BL       GPIO_SetBits
;;;209    
;;;210        
;;;211      GPIO_SetBits(GPIOB, GPIO_Pin_5);	     //
001048  2120              MOVS     r1,#0x20
00104a  483b              LDR      r0,|L1.4408|
00104c  380c              SUBS     r0,r0,#0xc
00104e  f7fffffe          BL       GPIO_SetBits
;;;212      GPIO_SetBits(GPIOD, GPIO_Pin_6|GPIO_Pin_3 );	    
001052  2148              MOVS     r1,#0x48
001054  4843              LDR      r0,|L1.4452|
001056  f7fffffe          BL       GPIO_SetBits
;;;213         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;		
00105a  2001              MOVS     r0,#1
00105c  f8ad0000          STRH     r0,[sp,#0]
;;;214      GPIO_Init(GPIOE, &GPIO_InitStructure);
001060  4669              MOV      r1,sp
001062  483f              LDR      r0,|L1.4448|
001064  f7fffffe          BL       GPIO_Init
;;;215      
;;;216      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 ; 	 //LCD-RST
001068  2002              MOVS     r0,#2
00106a  f8ad0000          STRH     r0,[sp,#0]
;;;217      GPIO_Init(GPIOE, &GPIO_InitStructure);  	
00106e  4669              MOV      r1,sp
001070  483b              LDR      r0,|L1.4448|
001072  f7fffffe          BL       GPIO_Init
;;;218        
;;;219     
;;;220     
;;;221    
;;;222      //PB10, PD9, PD10   CS,SI,CLK
;;;223      
;;;224      GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_7;
001076  2080              MOVS     r0,#0x80
001078  f8ad0000          STRH     r0,[sp,#0]
;;;225      //GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;		 //推挽输出
;;;226      //GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
;;;227      GPIO_Init(GPIOB, &GPIO_InitStructure);
00107c  4669              MOV      r1,sp
00107e  482e              LDR      r0,|L1.4408|
001080  380c              SUBS     r0,r0,#0xc
001082  f7fffffe          BL       GPIO_Init
;;;228    
;;;229      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5|GPIO_Pin_7 ;  
001086  20a0              MOVS     r0,#0xa0
001088  f8ad0000          STRH     r0,[sp,#0]
;;;230      GPIO_Init(GPIOA, &GPIO_InitStructure);
00108c  4669              MOV      r1,sp
00108e  4836              LDR      r0,|L1.4456|
001090  f7fffffe          BL       GPIO_Init
;;;231     
;;;232      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;           //SPI1 CS1 
001094  2010              MOVS     r0,#0x10
001096  f8ad0000          STRH     r0,[sp,#0]
;;;233      GPIO_Init(GPIOC, &GPIO_InitStructure);
00109a  4669              MOV      r1,sp
00109c  482f              LDR      r0,|L1.4444|
00109e  f7fffffe          BL       GPIO_Init
;;;234      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;           //SPI1 CS4 
0010a2  f44f5080          MOV      r0,#0x1000
0010a6  f8ad0000          STRH     r0,[sp,#0]
;;;235      GPIO_Init(GPIOB, &GPIO_InitStructure);
0010aa  4669              MOV      r1,sp
0010ac  4822              LDR      r0,|L1.4408|
0010ae  380c              SUBS     r0,r0,#0xc
0010b0  f7fffffe          BL       GPIO_Init
;;;236      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;           //SPI1 NSS 
0010b4  2010              MOVS     r0,#0x10
0010b6  f8ad0000          STRH     r0,[sp,#0]
;;;237      GPIO_Init(GPIOA, &GPIO_InitStructure);
0010ba  4669              MOV      r1,sp
0010bc  482a              LDR      r0,|L1.4456|
0010be  f7fffffe          BL       GPIO_Init
;;;238    
;;;239    
;;;240      	
;;;241      //PENIRQ, SO	
;;;242      GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6;
0010c2  2040              MOVS     r0,#0x40
0010c4  f8ad0000          STRH     r0,[sp,#0]
;;;243      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
0010c8  2028              MOVS     r0,#0x28
0010ca  f88d0003          STRB     r0,[sp,#3]
;;;244      //GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
;;;245      GPIO_Init(GPIOB, &GPIO_InitStructure);
0010ce  4669              MOV      r1,sp
0010d0  4819              LDR      r0,|L1.4408|
0010d2  380c              SUBS     r0,r0,#0xc
0010d4  f7fffffe          BL       GPIO_Init
;;;246    
;;;247      GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6;
0010d8  2040              MOVS     r0,#0x40
0010da  f8ad0000          STRH     r0,[sp,#0]
;;;248      GPIO_Init(GPIOA, &GPIO_InitStructure);
0010de  4669              MOV      r1,sp
0010e0  4821              LDR      r0,|L1.4456|
0010e2  f7fffffe          BL       GPIO_Init
;;;249    
;;;250      //GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_11;
;;;251      //GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
;;;252      //GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;253      
;;;254    
;;;255    
;;;256      
;;;257      	
;;;258      
;;;259    /*-- GPIO Configuration ------------------------------------------------------*/  
;;;260      //GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
;;;261      //GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	
;;;262     
;;;263      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_4 | GPIO_Pin_5 |
0010e6  f24c7033          MOV      r0,#0xc733
0010ea  f8ad0000          STRH     r0,[sp,#0]
;;;264                                    GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_14 | 
;;;265                                    GPIO_Pin_15;
;;;266      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0010ee  2003              MOVS     r0,#3
0010f0  f88d0002          STRB     r0,[sp,#2]
;;;267      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
0010f4  2018              MOVS     r0,#0x18
0010f6  f88d0003          STRB     r0,[sp,#3]
;;;268      GPIO_Init(GPIOD, &GPIO_InitStructure);
0010fa  4669              MOV      r1,sp
0010fc  4819              LDR      r0,|L1.4452|
0010fe  f7fffffe          BL       GPIO_Init
;;;269    
;;;270      /* Set PE.07(D4), PE.08(D5), PE.09(D6), PE.10(D7), PE.11(D8), PE.12(D9), PE.13(D10),
;;;271         PE.14(D11), PE.15(D12) as alternate function push pull */
;;;272      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | 
001102  e033              B        |L1.4460|
                  |L1.4356|
                          DCD      Ys_3
                  |L1.4360|
                          DCD      Ys_4
                  |L1.4364|
                          DCD      0x438c0000
                  |L1.4368|
                          DCD      0x43a00000
                  |L1.4372|
                          DCD      Y
                  |L1.4376|
                          DCD      Xs_2
                  |L1.4380|
                          DCD      Xs_4
                  |L1.4384|
                          DCD      0x43480000
                  |L1.4388|
                          DCD      0x43700000
                  |L1.4392|
                          DCD      X
                  |L1.4396|
                          DCD      fac_ms
                  |L1.4400|
                          DCD      POINT_COLOR
                  |L1.4404|
001134  434c5200          DCB      "CLR",0
                  |L1.4408|
                          DCD      0x40010c0c
                  |L1.4412|
                          DCD      0x40010000
                  |L1.4416|
                          DCD      AT45_buffer
                  |L1.4420|
                          DCD      TP_B
                  |L1.4424|
                          DCD      Xs_1
                  |L1.4428|
                          DCD      Ys_1
                  |L1.4432|
                          DCD      Ys_2
                  |L1.4436|
                          DCD      Xs_3
                  |L1.4440|
                          DCD      ||dw||
                  |L1.4444|
                          DCD      0x40011000
                  |L1.4448|
                          DCD      0x40011800
                  |L1.4452|
                          DCD      0x40011400
                  |L1.4456|
                          DCD      0x40010800
                  |L1.4460|
00116c  f64f7080          MOV      r0,#0xff80
001170  f8ad0000          STRH     r0,[sp,#0]
;;;273                                    GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | 
;;;274                                    GPIO_Pin_15;
;;;275      GPIO_Init(GPIOE, &GPIO_InitStructure); 
001174  4669              MOV      r1,sp
001176  48af              LDR      r0,|L1.5172|
001178  f7fffffe          BL       GPIO_Init
;;;276    
;;;277    
;;;278      
;;;279      /* NE1 configuration */
;;;280      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; 
00117c  2080              MOVS     r0,#0x80
00117e  f8ad0000          STRH     r0,[sp,#0]
;;;281      GPIO_Init(GPIOD, &GPIO_InitStructure);
001182  4669              MOV      r1,sp
001184  48ac              LDR      r0,|L1.5176|
001186  f7fffffe          BL       GPIO_Init
;;;282      
;;;283      /* RS */
;;;284      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11 ; 
00118a  f44f6000          MOV      r0,#0x800
00118e  f8ad0000          STRH     r0,[sp,#0]
;;;285      GPIO_Init(GPIOD, &GPIO_InitStructure); 
001192  4669              MOV      r1,sp
001194  48a8              LDR      r0,|L1.5176|
001196  f7fffffe          BL       GPIO_Init
;;;286    
;;;287      
;;;288      GPIO_SetBits(GPIOD, GPIO_Pin_7);			//CS=1 
00119a  2180              MOVS     r1,#0x80
00119c  48a6              LDR      r0,|L1.5176|
00119e  f7fffffe          BL       GPIO_SetBits
;;;289      GPIO_SetBits(GPIOD, GPIO_Pin_14| GPIO_Pin_15 |GPIO_Pin_0 | GPIO_Pin_1);  	 
0011a2  f24c0103          MOV      r1,#0xc003
0011a6  48a4              LDR      r0,|L1.5176|
0011a8  f7fffffe          BL       GPIO_SetBits
;;;290      GPIO_SetBits(GPIOE, GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10);   
0011ac  f44f61f0          MOV      r1,#0x780
0011b0  48a0              LDR      r0,|L1.5172|
0011b2  f7fffffe          BL       GPIO_SetBits
;;;291      GPIO_ResetBits(GPIOE, GPIO_Pin_0);
0011b6  2101              MOVS     r1,#1
0011b8  489e              LDR      r0,|L1.5172|
0011ba  f7fffffe          BL       GPIO_ResetBits
;;;292      GPIO_ResetBits(GPIOE, GPIO_Pin_1);		//RESET=0
0011be  2102              MOVS     r1,#2
0011c0  489c              LDR      r0,|L1.5172|
0011c2  f7fffffe          BL       GPIO_ResetBits
;;;293      GPIO_SetBits(GPIOD, GPIO_Pin_4);		    //RD=1
0011c6  2110              MOVS     r1,#0x10
0011c8  489b              LDR      r0,|L1.5176|
0011ca  f7fffffe          BL       GPIO_SetBits
;;;294      GPIO_SetBits(GPIOD, GPIO_Pin_5);			//WR=1
0011ce  2120              MOVS     r1,#0x20
0011d0  4899              LDR      r0,|L1.5176|
0011d2  f7fffffe          BL       GPIO_SetBits
;;;295    
;;;296      GPIO_SetBits(GPIOB, GPIO_Pin_6);			//PEn
0011d6  2140              MOVS     r1,#0x40
0011d8  4898              LDR      r0,|L1.5180|
0011da  f7fffffe          BL       GPIO_SetBits
;;;297      //GPIO_SetBits(GPIOA, GPIO_Pin_6);			//PEn
;;;298      GPIO_SetBits(GPIOD, GPIO_Pin_13);			//LIGHT
0011de  f44f5100          MOV      r1,#0x2000
0011e2  4895              LDR      r0,|L1.5176|
0011e4  f7fffffe          BL       GPIO_SetBits
;;;299      //GPIO_SetBits(GPIOB, GPIO_Pin_7);			//SPI CS3
;;;300      GPIO_SetBits(GPIOC, GPIO_Pin_4);			//SPI CS1
0011e8  2110              MOVS     r1,#0x10
0011ea  4895              LDR      r0,|L1.5184|
0011ec  f7fffffe          BL       GPIO_SetBits
;;;301      GPIO_SetBits(GPIOB, GPIO_Pin_12);			//SPI CS4
0011f0  f44f5180          MOV      r1,#0x1000
0011f4  4891              LDR      r0,|L1.5180|
0011f6  f7fffffe          BL       GPIO_SetBits
;;;302      GPIO_SetBits(GPIOA, GPIO_Pin_4);			//SPI NSS
0011fa  2110              MOVS     r1,#0x10
0011fc  4891              LDR      r0,|L1.5188|
0011fe  f7fffffe          BL       GPIO_SetBits
;;;303    }
001202  bd08              POP      {r3,pc}
;;;304    
                          ENDP

                  delay_init PROC
;;;661    
;;;662     void delay_init(u8 SYSCLK)
001204  f04f21e0          MOV      r1,#0xe000e000
;;;663    {
;;;664    	SysTick->CTRL&=0xfffffffb;//选择内部时钟 HCLK/8
001208  6909              LDR      r1,[r1,#0x10]
00120a  f0210104          BIC      r1,r1,#4
00120e  f04f22e0          MOV      r2,#0xe000e000
001212  6111              STR      r1,[r2,#0x10]
;;;665    	fac_us=SYSCLK/8;		    
001214  17c2              ASRS     r2,r0,#31
001216  eb007252          ADD      r2,r0,r2,LSR #29
00121a  10d2              ASRS     r2,r2,#3
00121c  4b8a              LDR      r3,|L1.5192|
00121e  701a              STRB     r2,[r3,#0]
;;;666    	fac_ms=(u16)fac_us*1000;
001220  4619              MOV      r1,r3
001222  7809              LDRB     r1,[r1,#0]  ; fac_us
001224  f44f727a          MOV      r2,#0x3e8
001228  4351              MULS     r1,r2,r1
00122a  4a88              LDR      r2,|L1.5196|
00122c  8011              STRH     r1,[r2,#0]
;;;667    }								    
00122e  4770              BX       lr
;;;668    //延时Nms
                          ENDP

                  RCC_Configuration PROC
;;;171    
;;;172    void RCC_Configuration(void)
001230  b510              PUSH     {r4,lr}
;;;173    {
;;;174      /* Setup the microcontroller system. Initialize the Embedded Flash Interface,  
;;;175         initialize the PLL and update the SystemFrequency variable. */
;;;176      SystemInit();
001232  f7fffffe          BL       SystemInit
;;;177       
;;;178      /* Enable Key Button GPIO Port, GPIO_LED and AFIO clock */
;;;179      RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
001236  2101              MOVS     r1,#1
001238  4608              MOV      r0,r1
00123a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;180    }
00123e  bd10              POP      {r4,pc}
;;;181    
                          ENDP

                  main PROC
;;;64     		 		 
;;;65     int main()
001240  f7fffffe          BL       RCC_Configuration
;;;66     {//	
;;;67     
;;;68     	RCC_Configuration();   
;;;69     
;;;70       /* Enable the FSMC Clock */
;;;71         
;;;72       	delay_init(72);
001244  2048              MOVS     r0,#0x48
001246  f7fffffe          BL       delay_init
;;;73       	
;;;74         GPIO_Configuration();	  
00124a  f7fffffe          BL       GPIO_Configuration
;;;75     	SPI1_Init();
00124e  f7fffffe          BL       SPI1_Init
;;;76     //	SPI1_Init25();
;;;77     	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_FSMC, ENABLE);	  
001252  2101              MOVS     r1,#1
001254  0208              LSLS     r0,r1,#8
001256  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;78     	FSMC_LCD_Init();	//FSMC初始化								 
00125a  f7fffffe          BL       FSMC_LCD_Init
;;;79         LCD_Init();	 //LCD初始化
00125e  f7fffffe          BL       LCD_Init
;;;80     	//delay_ms(800);   	
;;;81     //	while(1);
;;;82     	NVIC_Configuration();
001262  f7fffffe          BL       NVIC_Configuration
;;;83     
;;;84     	GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource6);		 //触摸IRQ
001266  2106              MOVS     r1,#6
001268  2001              MOVS     r0,#1
00126a  f7fffffe          BL       GPIO_EXTILineConfig
;;;85     
;;;86       /* Configure Key Button EXTI Line to generate an interrupt on falling edge */  
;;;87         EXTI_InitStructure.EXTI_Line = EXTI_Line6;
00126e  2040              MOVS     r0,#0x40
001270  4977              LDR      r1,|L1.5200|
001272  6008              STR      r0,[r1,#0]  ; EXTI_InitStructure
;;;88         EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
001274  2000              MOVS     r0,#0
001276  7108              STRB     r0,[r1,#4]
;;;89         EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
001278  200c              MOVS     r0,#0xc
00127a  7148              STRB     r0,[r1,#5]
;;;90         EXTI_InitStructure.EXTI_LineCmd = ENABLE;
00127c  2001              MOVS     r0,#1
00127e  7188              STRB     r0,[r1,#6]
;;;91         EXTI_Init(&EXTI_InitStructure);
001280  4608              MOV      r0,r1
001282  f7fffffe          BL       EXTI_Init
;;;92     
;;;93     	//while(1) a=read_once();
;;;94     	/* NVIC configuration */
;;;95         
;;;96     	M25P80_buf_ToRam_TP();	 //读取保存的触摸屏校准值
001286  f7fffffe          BL       M25P80_buf_ToRam_TP
;;;97     	heyaodz_TPad0();
00128a  f7fffffe          BL       heyaodz_TPad0
;;;98     
;;;99     	//touch_init();               //触摸屏初始化  
;;;100    	while (1)                   //等待中断到来
00128e  e01c              B        |L1.4810|
                  |L1.4752|
;;;101      	{    						   
;;;102    		if(_it1==1){
001290  4870              LDR      r0,|L1.5204|
001292  7800              LDRB     r0,[r0,#0]  ; _it1
001294  2801              CMP      r0,#1
001296  d118              BNE      |L1.4810|
;;;103    			delay_ms(50);
001298  2032              MOVS     r0,#0x32
00129a  f7fffffe          BL       delay_ms
;;;104    			a=PEN;
00129e  2140              MOVS     r1,#0x40
0012a0  4866              LDR      r0,|L1.5180|
0012a2  f7fffffe          BL       GPIO_ReadInputDataBit
0012a6  496c              LDR      r1,|L1.5208|
0012a8  7008              STRB     r0,[r1,#0]
;;;105    			while(a==0){
0012aa  e007              B        |L1.4796|
                  |L1.4780|
;;;106    			    //delay_us(10);
;;;107    				Read_Ads7846();
0012ac  f7fffffe          BL       Read_Ads7846
;;;108    				a=PEN;
0012b0  2140              MOVS     r1,#0x40
0012b2  4862              LDR      r0,|L1.5180|
0012b4  f7fffffe          BL       GPIO_ReadInputDataBit
0012b8  4967              LDR      r1,|L1.5208|
0012ba  7008              STRB     r0,[r1,#0]
                  |L1.4796|
0012bc  4866              LDR      r0,|L1.5208|
0012be  7800              LDRB     r0,[r0,#0]            ;105  ; a
0012c0  2800              CMP      r0,#0                 ;105
0012c2  d0f3              BEQ      |L1.4780|
;;;109    			}
;;;110    			_it1=0;	
0012c4  2000              MOVS     r0,#0
0012c6  4963              LDR      r1,|L1.5204|
0012c8  7008              STRB     r0,[r1,#0]
                  |L1.4810|
0012ca  e7e1              B        |L1.4752|
;;;111    		
;;;112    		}
;;;113    		//delay_ms(10);		  
;;;114      	}   	 
;;;115    }
;;;116    
                          ENDP

                  heyaodz_JF PROC
;;;148     
;;;149    void heyaodz_JF(void)	//显示字符串
0012cc  b510              PUSH     {r4,lr}
;;;150    {
;;;151     	POINT_COLOR=BLUE;
0012ce  201f              MOVS     r0,#0x1f
0012d0  4962              LDR      r1,|L1.5212|
0012d2  8008              STRH     r0,[r1,#0]
;;;152    	TFT_ShowString(80,70,"STM32 TOUCH TEST");
0012d4  a262              ADR      r2,|L1.5216|
0012d6  2146              MOVS     r1,#0x46
0012d8  2050              MOVS     r0,#0x50
0012da  f7fffffe          BL       TFT_ShowString
;;;153    	TFT_ShowString(80,80,"STM32-HY-heyaodz");
0012de  a265              ADR      r2,|L1.5236|
0012e0  2150              MOVS     r1,#0x50
0012e2  4608              MOV      r0,r1
0012e4  f7fffffe          BL       TFT_ShowString
;;;154    	TFT_ShowString(80,90,"2011/5/31"); 
0012e8  a267              ADR      r2,|L1.5256|
0012ea  215a              MOVS     r1,#0x5a
0012ec  2050              MOVS     r0,#0x50
0012ee  f7fffffe          BL       TFT_ShowString
;;;155    	TFT_ShowString(80,110,"Init...."); 
0012f2  a268              ADR      r2,|L1.5268|
0012f4  216e              MOVS     r1,#0x6e
0012f6  2050              MOVS     r0,#0x50
0012f8  f7fffffe          BL       TFT_ShowString
;;;156    	TFT_ShowString(80,130,"Please Wait..."); 	
0012fc  a268              ADR      r2,|L1.5280|
0012fe  2182              MOVS     r1,#0x82
001300  2050              MOVS     r0,#0x50
001302  f7fffffe          BL       TFT_ShowString
;;;157    }
001306  bd10              POP      {r4,pc}
;;;158    void heyaodz_TP(void)	//绘制界面
                          ENDP

                  Delay PROC
;;;325    }
;;;326    void Delay(__IO uint32_t nCount)
001308  e000              B        |L1.4876|
                  |L1.4874|
;;;327    {
;;;328      for(; nCount != 0; nCount--);
00130a  1e40              SUBS     r0,r0,#1
                  |L1.4876|
00130c  2800              CMP      r0,#0
00130e  d1fc              BNE      |L1.4874|
;;;329    }
001310  4770              BX       lr
;;;330    
                          ENDP

                  lcd_rst PROC
;;;331    // ++++++++++++++++TFT 复位操作
;;;332    void lcd_rst(void){
001312  b510              PUSH     {r4,lr}
;;;333    	GPIO_ResetBits(GPIOE, GPIO_Pin_1);
001314  2102              MOVS     r1,#2
001316  4847              LDR      r0,|L1.5172|
001318  f7fffffe          BL       GPIO_ResetBits
;;;334        Delay(0x1FFFFf);					   
00131c  4864              LDR      r0,|L1.5296|
00131e  f7fffffe          BL       Delay
;;;335        GPIO_SetBits(GPIOE, GPIO_Pin_1 );		 	 
001322  2102              MOVS     r1,#2
001324  4843              LDR      r0,|L1.5172|
001326  f7fffffe          BL       GPIO_SetBits
;;;336    	Delay(0x1fFFFf);	
00132a  4861              LDR      r0,|L1.5296|
00132c  f7fffffe          BL       Delay
;;;337    }
001330  bd10              POP      {r4,pc}
;;;338    
                          ENDP

                  start_spi PROC
;;;339    void start_spi(void)   
001332  4860              LDR      r0,|L1.5300|
;;;340    { 	  
;;;341    	//TCLK_SET(0);   
;;;342    	//TCS_SET(1); 	 
;;;343    	//TDIN_SET(1);  
;;;344    	//sTCLK_SET(1);
;;;345    	//SPI_Flash_SendByte(1);  
;;;346    	TCS_SET(0);   
001334  6800              LDR      r0,[r0,#0]
001336  f0200080          BIC      r0,r0,#0x80
00133a  495f              LDR      r1,|L1.5304|
00133c  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;347    }
001340  4770              BX       lr
;;;348    //SPI写数据
                          ENDP

                  WriteByteADS PROC
;;;349    //向7846写入1byte数据   
;;;350    void WriteByteADS(u8 num)    
001342  2100              MOVS     r1,#0
;;;351    {  
;;;352    	u8 count=0;  
;;;353    	TCLK_SET(0);   
001344  4a5d              LDR      r2,|L1.5308|
001346  6812              LDR      r2,[r2,#0]
001348  f0220220          BIC      r2,r2,#0x20
00134c  4b5a              LDR      r3,|L1.5304|
00134e  f8c3280c          STR      r2,[r3,#0x80c]
;;;354    	for(count=0;count<8;count++)  
001352  bf00              NOP      
001354  e023              B        |L1.5022|
                  |L1.4950|
;;;355    	{ 	  
;;;356    		if(num&0x80)TDIN_SET(1);  
001356  f0100f80          TST      r0,#0x80
00135a  d007              BEQ      |L1.4972|
00135c  4a57              LDR      r2,|L1.5308|
00135e  6812              LDR      r2,[r2,#0]
001360  f0420280          ORR      r2,r2,#0x80
001364  4b54              LDR      r3,|L1.5304|
001366  f8c3280c          STR      r2,[r3,#0x80c]
00136a  e006              B        |L1.4986|
                  |L1.4972|
;;;357    		else TDIN_SET(0);   
00136c  4a53              LDR      r2,|L1.5308|
00136e  6812              LDR      r2,[r2,#0]
001370  f0220280          BIC      r2,r2,#0x80
001374  4b50              LDR      r3,|L1.5304|
001376  f8c3280c          STR      r2,[r3,#0x80c]
                  |L1.4986|
;;;358    		num<<=1;    
00137a  0642              LSLS     r2,r0,#25
00137c  0e10              LSRS     r0,r2,#24
;;;359    		TCLK_SET(0);//上升沿有效  	 
00137e  4a4f              LDR      r2,|L1.5308|
001380  6812              LDR      r2,[r2,#0]
001382  f0220220          BIC      r2,r2,#0x20
001386  4b4c              LDR      r3,|L1.5304|
001388  f8c3280c          STR      r2,[r3,#0x80c]
;;;360    		TCLK_SET(1);      
00138c  4a4b              LDR      r2,|L1.5308|
00138e  6812              LDR      r2,[r2,#0]
001390  f0420220          ORR      r2,r2,#0x20
001394  f8c3280c          STR      r2,[r3,#0x80c]
001398  f1010201          ADD      r2,r1,#1              ;354
00139c  b2d1              UXTB     r1,r2                 ;354
                  |L1.5022|
00139e  2908              CMP      r1,#8                 ;354
0013a0  dbd9              BLT      |L1.4950|
;;;361    	} 			    
;;;362    } 
0013a2  4770              BX       lr
;;;363    //SPI读数据 
                          ENDP

                  ReadWordADS PROC
;;;364    //从7846读取adc值	   
;;;365    u16 ReadWordADS(void)	  
0013a4  2100              MOVS     r1,#0
;;;366    { 	 
;;;367    	u8 count=0; 	  
;;;368    	u16 Num=0; 	 
0013a6  2000              MOVS     r0,#0
;;;369    	for(count=0;count<12;count++)  
0013a8  bf00              NOP      
0013aa  e018              B        |L1.5086|
                  |L1.5036|
;;;370    	{ 				  
;;;371    		Num<<=1; 	 
0013ac  0442              LSLS     r2,r0,#17
0013ae  0c10              LSRS     r0,r2,#16
;;;372    		TCLK_SET(1);//下降沿有效 	   
0013b0  4a42              LDR      r2,|L1.5308|
0013b2  6812              LDR      r2,[r2,#0]
0013b4  f0420220          ORR      r2,r2,#0x20
0013b8  4b3f              LDR      r3,|L1.5304|
0013ba  f8c3280c          STR      r2,[r3,#0x80c]
;;;373    		TCLK_SET(0);    
0013be  461a              MOV      r2,r3
0013c0  f8d2280c          LDR      r2,[r2,#0x80c]
0013c4  f0220220          BIC      r2,r2,#0x20
0013c8  f8c3280c          STR      r2,[r3,#0x80c]
;;;374    		if(DOUT)Num++; 		 
0013cc  4a3c              LDR      r2,|L1.5312|
0013ce  6812              LDR      r2,[r2,#0]
0013d0  f0120f40          TST      r2,#0x40
0013d4  d001              BEQ      |L1.5082|
0013d6  1c42              ADDS     r2,r0,#1
0013d8  b290              UXTH     r0,r2
                  |L1.5082|
0013da  1c4a              ADDS     r2,r1,#1              ;369
0013dc  b2d1              UXTB     r1,r2                 ;369
                  |L1.5086|
0013de  290c              CMP      r1,#0xc               ;369
0013e0  dbe4              BLT      |L1.5036|
;;;375    	} 		  
;;;376    	return(Num);   
;;;377    }
0013e2  4770              BX       lr
;;;378    #define CMD_RDX 0X90  //0B10010000即用差分方式读X坐标
                          ENDP

                  drawbigpointxx PROC
;;;416    //画一个"+"
;;;417    void drawbigpointxx(u16 x,u16 y)
0013e4  b570              PUSH     {r4-r6,lr}
;;;418    {
0013e6  4604              MOV      r4,r0
0013e8  460d              MOV      r5,r1
;;;419    POINT_COLOR=RED;
0013ea  f44f4078          MOV      r0,#0xf800
0013ee  491b              LDR      r1,|L1.5212|
0013f0  8008              STRH     r0,[r1,#0]
;;;420    TFT_DrawLine(x-11,y,x+12,y+1);
0013f2  f1a4000b          SUB      r0,r4,#0xb
0013f6  1c6b              ADDS     r3,r5,#1
0013f8  f104020c          ADD      r2,r4,#0xc
0013fc  4629              MOV      r1,r5
0013fe  f7fffffe          BL       TFT_DrawLine
;;;421    TFT_DrawLine(x-11,y+1,x+12,y+2);
001402  f1a4000b          SUB      r0,r4,#0xb
001406  1cab              ADDS     r3,r5,#2
001408  f104020c          ADD      r2,r4,#0xc
00140c  1c69              ADDS     r1,r5,#1
00140e  f7fffffe          BL       TFT_DrawLine
;;;422    TFT_DrawLine(x,y-11,x+1,y+12);
001412  f1a5010b          SUB      r1,r5,#0xb
001416  f105030c          ADD      r3,r5,#0xc
00141a  1c62              ADDS     r2,r4,#1
00141c  4620              MOV      r0,r4
00141e  f7fffffe          BL       TFT_DrawLine
;;;423    TFT_DrawLine(x+1,y-11,x+2,y+12);
001422  f1a5010b          SUB      r1,r5,#0xb
001426  f105030c          ADD      r3,r5,#0xc
00142a  1ca2              ADDS     r2,r4,#2
00142c  1c60              ADDS     r0,r4,#1
00142e  f7fffffe          BL       TFT_DrawLine
;;;424    
;;;425    }
001432  bd70              POP      {r4-r6,pc}
;;;426    
                          ENDP

                  |L1.5172|
                          DCD      0x40011800
                  |L1.5176|
                          DCD      0x40011400
                  |L1.5180|
                          DCD      0x40010c00
                  |L1.5184|
                          DCD      0x40011000
                  |L1.5188|
                          DCD      0x40010800
                  |L1.5192|
                          DCD      fac_us
                  |L1.5196|
                          DCD      fac_ms
                  |L1.5200|
                          DCD      EXTI_InitStructure
                  |L1.5204|
                          DCD      _it1
                  |L1.5208|
                          DCD      a
                  |L1.5212|
                          DCD      POINT_COLOR
                  |L1.5216|
001460  53544d33          DCB      "STM32 TOUCH TEST",0
001464  3220544f
001468  55434820
00146c  54455354
001470  00      
001471  00                DCB      0
001472  00                DCB      0
001473  00                DCB      0
                  |L1.5236|
001474  53544d33          DCB      "STM32-HY-heyaodz",0
001478  322d4859
00147c  2d686579
001480  616f647a
001484  00      
001485  00                DCB      0
001486  00                DCB      0
001487  00                DCB      0
                  |L1.5256|
001488  32303131          DCB      "2011/5/31",0
00148c  2f352f33
001490  3100    
001492  00                DCB      0
001493  00                DCB      0
                  |L1.5268|
001494  496e6974          DCB      "Init....",0
001498  2e2e2e2e
00149c  00      
00149d  00                DCB      0
00149e  00                DCB      0
00149f  00                DCB      0
                  |L1.5280|
0014a0  506c6561          DCB      "Please Wait...",0
0014a4  73652057
0014a8  6169742e
0014ac  2e2e00  
0014af  00                DCB      0
                  |L1.5296|
                          DCD      0x001fffff
                  |L1.5300|
                          DCD      0x40010c0c
                  |L1.5304|
                          DCD      0x40010000
                  |L1.5308|
                          DCD      0x4001080c
                  |L1.5312|
                          DCD      0x40010808

                          AREA ||.data||, DATA, ALIGN=2

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000
                  _it0
000004  00                DCB      0x00
                  _it1
000005  00                DCB      0x00
                  _it2
000006  00                DCB      0x00
                  _it3
000007  00                DCB      0x00
                  num
000008  00                DCB      0x00
                  ||dw||
000009  00                DCB      0x00
                  a
00000a  00                DCB      0x00
                  b
00000b  00                DCB      0x00
                  TP_B
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  Xs_1
                          DCD      0x00000000
                  Xs_2
                          DCD      0x00000000
                  Xs_3
                          DCD      0x00000000
                  Xs_4
                          DCD      0x00000000
                  Ys_1
                          DCD      0x00000000
                  Ys_2
                          DCD      0x00000000
                  Ys_3
                          DCD      0x00000000
                  Ys_4
                          DCD      0x00000000
                  X
                          DCD      0x00000000
                  Y
                          DCD      0x00000000
                  ||X2||
000038  00000000          DCFS     0x00000000 ; 0
                  ||Y2||
00003c  00000000          DCFS     0x00000000 ; 0
                  EXTI_InitStructure
                          %        8

                  __ARM_use_no_argv EQU 0
