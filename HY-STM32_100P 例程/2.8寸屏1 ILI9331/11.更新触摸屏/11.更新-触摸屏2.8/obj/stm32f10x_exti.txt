; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [-c --asm --interleave -o.\obj\stm32f10x_exti.o --depend=.\obj\stm32f10x_exti.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL FWlib\SRC\stm32f10x_exti.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;83       */
;;;84     void EXTI_DeInit(void)
000000  2000              MOVS     r0,#0
;;;85     {
;;;86       EXTI->IMR = 0x00000000;
000002  4947              LDR      r1,|L1.288|
000004  6008              STR      r0,[r1,#0]
;;;87       EXTI->EMR = 0x00000000;
000006  4947              LDR      r1,|L1.292|
000008  f8c10404          STR      r0,[r1,#0x404]
;;;88       EXTI->RTSR = 0x00000000; 
00000c  4946              LDR      r1,|L1.296|
00000e  6008              STR      r0,[r1,#0]
;;;89       EXTI->FTSR = 0x00000000; 
000010  f1010104          ADD      r1,r1,#4
000014  6008              STR      r0,[r1,#0]
;;;90       EXTI->PR = 0x000FFFFF;
000016  4845              LDR      r0,|L1.300|
000018  4945              LDR      r1,|L1.304|
00001a  6008              STR      r0,[r1,#0]
;;;91     }
00001c  4770              BX       lr
;;;92     
                          ENDP

                  EXTI_Init PROC
;;;99       */
;;;100    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
00001e  2100              MOVS     r1,#0
;;;101    {
;;;102      uint32_t tmp = 0;
;;;103    
;;;104      /* Check the parameters */
;;;105      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;106      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;107      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;108      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;109    
;;;110      tmp = (uint32_t)EXTI_BASE;
000020  493f              LDR      r1,|L1.288|
;;;111         
;;;112      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000022  7982              LDRB     r2,[r0,#6]
000024  b3da              CBZ      r2,|L1.158|
;;;113      {
;;;114        /* Clear EXTI line configuration */
;;;115        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000026  4a3f              LDR      r2,|L1.292|
000028  f8d22400          LDR      r2,[r2,#0x400]
00002c  6803              LDR      r3,[r0,#0]
00002e  439a              BICS     r2,r2,r3
000030  4b3c              LDR      r3,|L1.292|
000032  f8c32400          STR      r2,[r3,#0x400]
;;;116        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000036  461a              MOV      r2,r3
000038  f8d22404          LDR      r2,[r2,#0x404]
00003c  6803              LDR      r3,[r0,#0]
00003e  439a              BICS     r2,r2,r3
000040  f1010304          ADD      r3,r1,#4
000044  601a              STR      r2,[r3,#0]
;;;117        
;;;118        tmp += EXTI_InitStruct->EXTI_Mode;
000046  7902              LDRB     r2,[r0,#4]
000048  4411              ADD      r1,r1,r2
;;;119    
;;;120        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00004a  680a              LDR      r2,[r1,#0]
00004c  6803              LDR      r3,[r0,#0]
00004e  ea420203          ORR      r2,r2,r3
000052  600a              STR      r2,[r1,#0]
;;;121    
;;;122        /* Clear Rising Falling edge configuration */
;;;123        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000054  4a33              LDR      r2,|L1.292|
000056  f8d22408          LDR      r2,[r2,#0x408]
00005a  6803              LDR      r3,[r0,#0]
00005c  ea220203          BIC      r2,r2,r3
000060  4b30              LDR      r3,|L1.292|
000062  f8c32408          STR      r2,[r3,#0x408]
;;;124        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000066  461a              MOV      r2,r3
000068  f8d2240c          LDR      r2,[r2,#0x40c]
00006c  6803              LDR      r3,[r0,#0]
00006e  ea220203          BIC      r2,r2,r3
000072  4b30              LDR      r3,|L1.308|
000074  601a              STR      r2,[r3,#0]
;;;125        
;;;126        /* Select the trigger for the selected external interrupts */
;;;127        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000076  7942              LDRB     r2,[r0,#5]
000078  2a10              CMP      r2,#0x10
00007a  d111              BNE      |L1.160|
;;;128        {
;;;129          /* Rising Falling edge */
;;;130          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
00007c  4a29              LDR      r2,|L1.292|
00007e  f8d22408          LDR      r2,[r2,#0x408]
000082  6803              LDR      r3,[r0,#0]
000084  431a              ORRS     r2,r2,r3
000086  4b27              LDR      r3,|L1.292|
000088  f8c32408          STR      r2,[r3,#0x408]
;;;131          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
00008c  461a              MOV      r2,r3
00008e  f8d2240c          LDR      r2,[r2,#0x40c]
000092  6803              LDR      r3,[r0,#0]
000094  431a              ORRS     r2,r2,r3
000096  4b23              LDR      r3,|L1.292|
000098  f8c3240c          STR      r2,[r3,#0x40c]
00009c  e00e              B        |L1.188|
                  |L1.158|
00009e  e007              B        |L1.176|
                  |L1.160|
;;;132        }
;;;133        else
;;;134        {
;;;135          tmp = (uint32_t)EXTI_BASE;
0000a0  491f              LDR      r1,|L1.288|
;;;136          tmp += EXTI_InitStruct->EXTI_Trigger;
0000a2  7942              LDRB     r2,[r0,#5]
0000a4  4411              ADD      r1,r1,r2
;;;137    
;;;138          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
0000a6  680a              LDR      r2,[r1,#0]
0000a8  6803              LDR      r3,[r0,#0]
0000aa  431a              ORRS     r2,r2,r3
0000ac  600a              STR      r2,[r1,#0]
0000ae  e005              B        |L1.188|
                  |L1.176|
;;;139        }
;;;140      }
;;;141      else
;;;142      {
;;;143        tmp += EXTI_InitStruct->EXTI_Mode;
0000b0  7902              LDRB     r2,[r0,#4]
0000b2  4411              ADD      r1,r1,r2
;;;144    
;;;145        /* Disable the selected external lines */
;;;146        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
0000b4  680a              LDR      r2,[r1,#0]
0000b6  6803              LDR      r3,[r0,#0]
0000b8  439a              BICS     r2,r2,r3
0000ba  600a              STR      r2,[r1,#0]
                  |L1.188|
;;;147      }
;;;148    }
0000bc  4770              BX       lr
;;;149    
                          ENDP

                  EXTI_StructInit PROC
;;;155      */
;;;156    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
0000be  2100              MOVS     r1,#0
;;;157    {
;;;158      EXTI_InitStruct->EXTI_Line = EXTI_LineNone;
0000c0  6001              STR      r1,[r0,#0]
;;;159      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
0000c2  7101              STRB     r1,[r0,#4]
;;;160      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
0000c4  210c              MOVS     r1,#0xc
0000c6  7141              STRB     r1,[r0,#5]
;;;161      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
0000c8  2100              MOVS     r1,#0
0000ca  7181              STRB     r1,[r0,#6]
;;;162    }
0000cc  4770              BX       lr
;;;163    
                          ENDP

                  EXTI_GenerateSWInterrupt PROC
;;;169      */
;;;170    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
0000ce  491a              LDR      r1,|L1.312|
;;;171    {
;;;172      /* Check the parameters */
;;;173      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;174      
;;;175      EXTI->SWIER |= EXTI_Line;
0000d0  6809              LDR      r1,[r1,#0]
0000d2  ea410100          ORR      r1,r1,r0
0000d6  4a13              LDR      r2,|L1.292|
0000d8  f8c21410          STR      r1,[r2,#0x410]
;;;176    }
0000dc  4770              BX       lr
;;;177    
                          ENDP

                  EXTI_GetFlagStatus PROC
;;;184      */
;;;185    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
0000de  4601              MOV      r1,r0
;;;186    {
;;;187      FlagStatus bitstatus = RESET;
0000e0  2000              MOVS     r0,#0
;;;188      /* Check the parameters */
;;;189      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;190      
;;;191      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
0000e2  4a13              LDR      r2,|L1.304|
0000e4  6812              LDR      r2,[r2,#0]
0000e6  420a              TST      r2,r1
0000e8  d001              BEQ      |L1.238|
;;;192      {
;;;193        bitstatus = SET;
0000ea  2001              MOVS     r0,#1
0000ec  e000              B        |L1.240|
                  |L1.238|
;;;194      }
;;;195      else
;;;196      {
;;;197        bitstatus = RESET;
0000ee  2000              MOVS     r0,#0
                  |L1.240|
;;;198      }
;;;199      return bitstatus;
;;;200    }
0000f0  4770              BX       lr
;;;201    
                          ENDP

                  EXTI_ClearFlag PROC
;;;207      */
;;;208    void EXTI_ClearFlag(uint32_t EXTI_Line)
0000f2  490f              LDR      r1,|L1.304|
;;;209    {
;;;210      /* Check the parameters */
;;;211      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;212      
;;;213      EXTI->PR = EXTI_Line;
0000f4  6008              STR      r0,[r1,#0]
;;;214    }
0000f6  4770              BX       lr
;;;215    
                          ENDP

                  EXTI_GetITStatus PROC
;;;222      */
;;;223    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
0000f8  4601              MOV      r1,r0
;;;224    {
;;;225      ITStatus bitstatus = RESET;
0000fa  2000              MOVS     r0,#0
;;;226      uint32_t enablestatus = 0;
0000fc  2200              MOVS     r2,#0
;;;227      /* Check the parameters */
;;;228      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;229      
;;;230      enablestatus =  EXTI->IMR & EXTI_Line;
0000fe  4b08              LDR      r3,|L1.288|
000100  681b              LDR      r3,[r3,#0]
000102  ea030201          AND      r2,r3,r1
;;;231      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
000106  4b07              LDR      r3,|L1.292|
000108  f8d33414          LDR      r3,[r3,#0x414]
00010c  420b              TST      r3,r1
00010e  d002              BEQ      |L1.278|
000110  b10a              CBZ      r2,|L1.278|
;;;232      {
;;;233        bitstatus = SET;
000112  2001              MOVS     r0,#1
000114  e000              B        |L1.280|
                  |L1.278|
;;;234      }
;;;235      else
;;;236      {
;;;237        bitstatus = RESET;
000116  2000              MOVS     r0,#0
                  |L1.280|
;;;238      }
;;;239      return bitstatus;
;;;240    }
000118  4770              BX       lr
;;;241    
                          ENDP

                  EXTI_ClearITPendingBit PROC
;;;247      */
;;;248    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
00011a  4905              LDR      r1,|L1.304|
;;;249    {
;;;250      /* Check the parameters */
;;;251      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;252      
;;;253      EXTI->PR = EXTI_Line;
00011c  6008              STR      r0,[r1,#0]
;;;254    }
00011e  4770              BX       lr
;;;255    
                          ENDP

                  |L1.288|
                          DCD      0x40010400
                  |L1.292|
                          DCD      0x40010000
                  |L1.296|
                          DCD      0x40010408
                  |L1.300|
                          DCD      0x000fffff
                  |L1.304|
                          DCD      0x40010414
                  |L1.308|
                          DCD      0x4001040c
                  |L1.312|
                          DCD      0x40010410
