; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\stm32f10x_it.o --depend=.\Obj\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\user -I.\FWlib\inc -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\Obj\stm32f10x_it.crf user\stm32f10x_it.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  NMIException PROC
;;;46     *******************************************************************************/
;;;47     void NMIException(void)
000000  4770              BX       lr
;;;48     {
;;;49     }
;;;50     
                          ENDP

                  HardFaultException PROC
;;;57     *******************************************************************************/
;;;58     void HardFaultException(void)
000002  4770              BX       lr
;;;59     {
;;;60     }
;;;61     
                          ENDP

                  MemManageException PROC
;;;68     *******************************************************************************/
;;;69     void MemManageException(void)
000004  4770              BX       lr
;;;70     {
;;;71     }
;;;72     
                          ENDP

                  BusFaultException PROC
;;;79     *******************************************************************************/
;;;80     void BusFaultException(void)
000006  4770              BX       lr
;;;81     {
;;;82     }
;;;83     
                          ENDP

                  UsageFaultException PROC
;;;90     *******************************************************************************/
;;;91     void UsageFaultException(void)
000008  4770              BX       lr
;;;92     {
;;;93     }
;;;94     
                          ENDP

                  DebugMonitor PROC
;;;101    *******************************************************************************/
;;;102    void DebugMonitor(void)
00000a  4770              BX       lr
;;;103    {
;;;104    }
;;;105    
                          ENDP

                  SVCHandler PROC
;;;112    *******************************************************************************/
;;;113    void SVCHandler(void)
00000c  4770              BX       lr
;;;114    {
;;;115    }
;;;116    
                          ENDP

                  PendSVC PROC
;;;123    *******************************************************************************/
;;;124    void PendSVC(void)
00000e  4770              BX       lr
;;;125    {
;;;126    }
;;;127    
                          ENDP

                  SysTickHandler PROC
;;;134    *******************************************************************************/
;;;135    void SysTickHandler(void)
000010  4770              BX       lr
;;;136    {
;;;137    }
;;;138    
                          ENDP

                  WWDG_IRQHandler PROC
;;;145    *******************************************************************************/
;;;146    void WWDG_IRQHandler(void)
000012  4770              BX       lr
;;;147    {
;;;148    }
;;;149    
                          ENDP

                  PVD_IRQHandler PROC
;;;156    *******************************************************************************/
;;;157    void PVD_IRQHandler(void)
000014  4770              BX       lr
;;;158    {
;;;159    }
;;;160    
                          ENDP

                  TAMPER_IRQHandler PROC
;;;167    *******************************************************************************/
;;;168    void TAMPER_IRQHandler(void)
000016  4770              BX       lr
;;;169    {
;;;170    }
;;;171    
                          ENDP

                  RTC_IRQHandler PROC
;;;178    *******************************************************************************/
;;;179    void RTC_IRQHandler(void)
000018  b510              PUSH     {r4,lr}
;;;180    {
;;;181      if(RTC_GetITStatus(RTC_IT_SEC) != RESET)
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       RTC_GetITStatus
000020  b1e8              CBZ      r0,|L1.94|
;;;182      {
;;;183        /* Clear the RTC Second interrupt */
;;;184        RTC_ClearITPendingBit(RTC_IT_SEC);
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       RTC_ClearITPendingBit
;;;185        
;;;186        /* Toggle led connected to PC.06 pin each 1s */
;;;187        GPIO_WriteBit(GPIOC, GPIO_Pin_6, (BitAction)(1-GPIO_ReadOutputDataBit(GPIOC, GPIO_Pin_6)));
000028  2140              MOVS     r1,#0x40
00002a  4821              LDR      r0,|L1.176|
00002c  f7fffffe          BL       GPIO_ReadOutputDataBit
000030  f1c00001          RSB      r0,r0,#1
000034  b2c4              UXTB     r4,r0
000036  4622              MOV      r2,r4
000038  2140              MOVS     r1,#0x40
00003a  481d              LDR      r0,|L1.176|
00003c  f7fffffe          BL       GPIO_WriteBit
;;;188    
;;;189        /* Enable time update */
;;;190        TimeDisplay = 1;
000040  2001              MOVS     r0,#1
000042  491c              LDR      r1,|L1.180|
000044  6008              STR      r0,[r1,#0]  ; TimeDisplay
;;;191    
;;;192        /* Wait until last write operation on RTC registers has finished */
;;;193        RTC_WaitForLastTask();
000046  f7fffffe          BL       RTC_WaitForLastTask
;;;194        /* Reset RTC Counter when Time is 23:59:59 */
;;;195        if(RTC_GetCounter() == 0x00015180)
00004a  f7fffffe          BL       RTC_GetCounter
00004e  491a              LDR      r1,|L1.184|
000050  4288              CMP      r0,r1
000052  d104              BNE      |L1.94|
;;;196        {
;;;197          RTC_SetCounter(0x0);
000054  2000              MOVS     r0,#0
000056  f7fffffe          BL       RTC_SetCounter
;;;198          /* Wait until last write operation on RTC registers has finished */
;;;199          RTC_WaitForLastTask();
00005a  f7fffffe          BL       RTC_WaitForLastTask
                  |L1.94|
;;;200        }
;;;201      }
;;;202    }
00005e  bd10              POP      {r4,pc}
;;;203    
                          ENDP

                  FLASH_IRQHandler PROC
;;;210    *******************************************************************************/
;;;211    void FLASH_IRQHandler(void)
000060  4770              BX       lr
;;;212    {
;;;213    }
;;;214    
                          ENDP

                  RCC_IRQHandler PROC
;;;221    *******************************************************************************/
;;;222    void RCC_IRQHandler(void)
000062  4770              BX       lr
;;;223    {
;;;224    }
;;;225    
                          ENDP

                  EXTI0_IRQHandler PROC
;;;232    *******************************************************************************/
;;;233    void EXTI0_IRQHandler(void)
000064  4770              BX       lr
;;;234    {
;;;235    }
;;;236    
                          ENDP

                  EXTI1_IRQHandler PROC
;;;243    *******************************************************************************/
;;;244    void EXTI1_IRQHandler(void)
000066  4770              BX       lr
;;;245    {
;;;246    }
;;;247    
                          ENDP

                  EXTI2_IRQHandler PROC
;;;254    *******************************************************************************/
;;;255    void EXTI2_IRQHandler(void)
000068  4770              BX       lr
;;;256    {
;;;257    }
;;;258    
                          ENDP

                  EXTI3_IRQHandler PROC
;;;265    *******************************************************************************/
;;;266    void EXTI3_IRQHandler(void)
00006a  4770              BX       lr
;;;267    {
;;;268    }
;;;269    
                          ENDP

                  EXTI4_IRQHandler PROC
;;;276    *******************************************************************************/
;;;277    void EXTI4_IRQHandler(void)
00006c  4770              BX       lr
;;;278    {
;;;279    }
;;;280    
                          ENDP

                  DMAChannel1_IRQHandler PROC
;;;287    *******************************************************************************/
;;;288    void DMAChannel1_IRQHandler(void)
00006e  4770              BX       lr
;;;289    {
;;;290    }
;;;291    
                          ENDP

                  DMAChannel2_IRQHandler PROC
;;;298    *******************************************************************************/
;;;299    void DMAChannel2_IRQHandler(void)
000070  4770              BX       lr
;;;300    {
;;;301    }
;;;302    
                          ENDP

                  DMAChannel3_IRQHandler PROC
;;;309    *******************************************************************************/
;;;310    void DMAChannel3_IRQHandler(void)
000072  4770              BX       lr
;;;311    {
;;;312    }
;;;313    
                          ENDP

                  DMAChannel4_IRQHandler PROC
;;;320    *******************************************************************************/
;;;321    void DMAChannel4_IRQHandler(void)
000074  4770              BX       lr
;;;322    {
;;;323    }
;;;324    
                          ENDP

                  DMAChannel5_IRQHandler PROC
;;;331    *******************************************************************************/
;;;332    void DMAChannel5_IRQHandler(void)
000076  4770              BX       lr
;;;333    {
;;;334    }
;;;335    
                          ENDP

                  DMAChannel6_IRQHandler PROC
;;;342    *******************************************************************************/
;;;343    void DMAChannel6_IRQHandler(void)
000078  4770              BX       lr
;;;344    {
;;;345    }
;;;346    
                          ENDP

                  DMAChannel7_IRQHandler PROC
;;;353    *******************************************************************************/
;;;354    void DMAChannel7_IRQHandler(void)
00007a  4770              BX       lr
;;;355    {
;;;356    }
;;;357    
                          ENDP

                  ADC_IRQHandler PROC
;;;364    *******************************************************************************/
;;;365    void ADC_IRQHandler(void)
00007c  4770              BX       lr
;;;366    {
;;;367    }
;;;368    
                          ENDP

                  USB_HP_CAN_TX_IRQHandler PROC
;;;376    *******************************************************************************/
;;;377    void USB_HP_CAN_TX_IRQHandler(void)
00007e  4770              BX       lr
;;;378    {
;;;379    }
;;;380    
                          ENDP

                  USB_LP_CAN_RX0_IRQHandler PROC
;;;388    *******************************************************************************/
;;;389    void USB_LP_CAN_RX0_IRQHandler(void)
000080  4770              BX       lr
;;;390    {
;;;391    }
;;;392    
                          ENDP

                  CAN_RX1_IRQHandler PROC
;;;399    *******************************************************************************/
;;;400    void CAN_RX1_IRQHandler(void)
000082  4770              BX       lr
;;;401    {
;;;402    }
;;;403    
                          ENDP

                  CAN_SCE_IRQHandler PROC
;;;410    *******************************************************************************/
;;;411    void CAN_SCE_IRQHandler(void)
000084  4770              BX       lr
;;;412    {
;;;413    }
;;;414    
                          ENDP

                  EXTI9_5_IRQHandler PROC
;;;421    *******************************************************************************/
;;;422    void EXTI9_5_IRQHandler(void)
000086  4770              BX       lr
;;;423    {
;;;424    }
;;;425    
                          ENDP

                  TIM1_BRK_IRQHandler PROC
;;;432    *******************************************************************************/
;;;433    void TIM1_BRK_IRQHandler(void)
000088  4770              BX       lr
;;;434    {
;;;435    }
;;;436    
                          ENDP

                  TIM1_UP_IRQHandler PROC
;;;444    *******************************************************************************/
;;;445    void TIM1_UP_IRQHandler(void)
00008a  4770              BX       lr
;;;446    {
;;;447    }
;;;448    
                          ENDP

                  TIM1_TRG_COM_IRQHandler PROC
;;;456    *******************************************************************************/
;;;457    void TIM1_TRG_COM_IRQHandler(void)
00008c  4770              BX       lr
;;;458    {
;;;459    }
;;;460    
                          ENDP

                  TIM1_CC_IRQHandler PROC
;;;467    *******************************************************************************/
;;;468    void TIM1_CC_IRQHandler(void)
00008e  4770              BX       lr
;;;469    {
;;;470    }
;;;471    
                          ENDP

                  TIM2_IRQHandler PROC
;;;478    *******************************************************************************/
;;;479    void TIM2_IRQHandler(void)
000090  4770              BX       lr
;;;480    {
;;;481    }
;;;482    
                          ENDP

                  TIM3_IRQHandler PROC
;;;489    *******************************************************************************/
;;;490    void TIM3_IRQHandler(void)
000092  4770              BX       lr
;;;491    {
;;;492    }
;;;493    
                          ENDP

                  TIM4_IRQHandler PROC
;;;500    *******************************************************************************/
;;;501    void TIM4_IRQHandler(void)
000094  4770              BX       lr
;;;502    {
;;;503    }
;;;504    
                          ENDP

                  I2C1_EV_IRQHandler PROC
;;;511    *******************************************************************************/
;;;512    void I2C1_EV_IRQHandler(void)
000096  4770              BX       lr
;;;513    {
;;;514    }
;;;515    
                          ENDP

                  I2C1_ER_IRQHandler PROC
;;;522    *******************************************************************************/
;;;523    void I2C1_ER_IRQHandler(void)
000098  4770              BX       lr
;;;524    {
;;;525    }
;;;526    
                          ENDP

                  I2C2_EV_IRQHandler PROC
;;;533    *******************************************************************************/
;;;534    void I2C2_EV_IRQHandler(void)
00009a  4770              BX       lr
;;;535    {
;;;536    }
;;;537    
                          ENDP

                  I2C2_ER_IRQHandler PROC
;;;544    *******************************************************************************/
;;;545    void I2C2_ER_IRQHandler(void)
00009c  4770              BX       lr
;;;546    {
;;;547    }
;;;548    
                          ENDP

                  SPI1_IRQHandler PROC
;;;555    *******************************************************************************/
;;;556    void SPI1_IRQHandler(void)
00009e  4770              BX       lr
;;;557    {
;;;558    }
;;;559    
                          ENDP

                  SPI2_IRQHandler PROC
;;;566    *******************************************************************************/
;;;567    void SPI2_IRQHandler(void)
0000a0  4770              BX       lr
;;;568    {
;;;569    }
;;;570    
                          ENDP

                  USART1_IRQHandler PROC
;;;577    *******************************************************************************/
;;;578    void USART1_IRQHandler(void)
0000a2  4770              BX       lr
;;;579    {
;;;580    }
;;;581    
                          ENDP

                  USART2_IRQHandler PROC
;;;588    *******************************************************************************/
;;;589    void USART2_IRQHandler(void)
0000a4  4770              BX       lr
;;;590    {
;;;591    }
;;;592    
                          ENDP

                  USART3_IRQHandler PROC
;;;599    *******************************************************************************/
;;;600    void USART3_IRQHandler(void)
0000a6  4770              BX       lr
;;;601    {
;;;602    }
;;;603    
                          ENDP

                  EXTI15_10_IRQHandler PROC
;;;610    *******************************************************************************/
;;;611    void EXTI15_10_IRQHandler(void)
0000a8  4770              BX       lr
;;;612    {
;;;613    }
;;;614    
                          ENDP

                  RTCAlarm_IRQHandler PROC
;;;621    *******************************************************************************/
;;;622    void RTCAlarm_IRQHandler(void)
0000aa  4770              BX       lr
;;;623    {
;;;624    }
;;;625    
                          ENDP

                  USBWakeUp_IRQHandler PROC
;;;632    *******************************************************************************/
;;;633    void USBWakeUp_IRQHandler(void)
0000ac  4770              BX       lr
;;;634    {
;;;635    }
;;;636    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      0x40011000
                  |L1.180|
                          DCD      TimeDisplay
                  |L1.184|
                          DCD      0x00015180
