; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\obj\touch.o --depend=.\obj\touch.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\touch.crf user\touch.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  MYRCC_DeInit PROC
;;;13     //把所有时钟寄存器复位
;;;14     void MYRCC_DeInit(void)
000000  2000              MOVS     r0,#0
;;;15     {						   
;;;16     	RCC->APB1RSTR = 0x00000000;//复位结束			 
000002  49ff              LDR      r1,|L1.1024|
000004  6108              STR      r0,[r1,#0x10]
;;;17     	RCC->APB2RSTR = 0x00000000; 
000006  60c8              STR      r0,[r1,#0xc]
;;;18     	  
;;;19       	RCC->AHBENR = 0x00000014;  //flash时钟,闪存时钟使能.DMA时钟关闭	  
000008  2014              MOVS     r0,#0x14
00000a  6148              STR      r0,[r1,#0x14]
;;;20       	RCC->APB2ENR = 0x00000000; //外设时钟关闭.			   
00000c  2000              MOVS     r0,#0
00000e  6188              STR      r0,[r1,#0x18]
;;;21       	RCC->APB1ENR = 0x00000000;   
000010  61c8              STR      r0,[r1,#0x1c]
;;;22     	RCC->CR |= 0x00000001;     //使能内部高速时钟HSION	 															 
000012  4608              MOV      r0,r1
000014  6800              LDR      r0,[r0,#0]
000016  f0400001          ORR      r0,r0,#1
00001a  6008              STR      r0,[r1,#0]
;;;23     	RCC->CFGR &= 0xF8FF0000;   //复位SW[1:0],HPRE[3:0],PPRE1[2:0],PPRE2[2:0],ADCPRE[1:0],MCO[2:0]					 
00001c  4608              MOV      r0,r1
00001e  6840              LDR      r0,[r0,#4]
000020  49f8              LDR      r1,|L1.1028|
000022  4008              ANDS     r0,r0,r1
000024  49f6              LDR      r1,|L1.1024|
000026  6048              STR      r0,[r1,#4]
;;;24     	RCC->CR &= 0xFEF6FFFF;     //复位HSEON,CSSON,PLLON
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  49f6              LDR      r1,|L1.1032|
00002e  4008              ANDS     r0,r0,r1
000030  49f3              LDR      r1,|L1.1024|
000032  6008              STR      r0,[r1,#0]
;;;25     	RCC->CR &= 0xFFFBFFFF;     //复位HSEBYP	   	  
000034  4608              MOV      r0,r1
000036  6800              LDR      r0,[r0,#0]
000038  f4202080          BIC      r0,r0,#0x40000
00003c  6008              STR      r0,[r1,#0]
;;;26     	RCC->CFGR &= 0xFF80FFFF;   //复位PLLSRC, PLLXTPRE, PLLMUL[3:0] and USBPRE 
00003e  4608              MOV      r0,r1
000040  6840              LDR      r0,[r0,#4]
000042  f42000fe          BIC      r0,r0,#0x7f0000
000046  6048              STR      r0,[r1,#4]
;;;27     	RCC->CIR = 0x00000000;     //关闭所有中断
000048  2000              MOVS     r0,#0
00004a  6088              STR      r0,[r1,#8]
;;;28     }
00004c  4770              BX       lr
;;;29     
                          ENDP

                  Stm32_Clock_Init PROC
;;;30     //外部8M,则得到72M的系统时钟	
;;;31     void Stm32_Clock_Init(void)
00004e  b500              PUSH     {lr}
;;;32     {
;;;33     	unsigned char temp=0;   
000050  2200              MOVS     r2,#0
;;;34     	MYRCC_DeInit();
000052  f7fffffe          BL       MYRCC_DeInit
;;;35     	RCC->CR|=0x00010000;  //外部高速时钟使能HSEON
000056  48ea              LDR      r0,|L1.1024|
000058  6800              LDR      r0,[r0,#0]
00005a  f4403080          ORR      r0,r0,#0x10000
00005e  49e8              LDR      r1,|L1.1024|
000060  6008              STR      r0,[r1,#0]
;;;36     	while(!(RCC->CR>>17));//等待外部时钟就绪
000062  bf00              NOP      
                  |L1.100|
000064  48e6              LDR      r0,|L1.1024|
000066  6800              LDR      r0,[r0,#0]
000068  0c40              LSRS     r0,r0,#17
00006a  d0fb              BEQ      |L1.100|
;;;37     	RCC->CFGR=0X1C0400;   //APB1/2=DIV2;AHB=DIV1;PLL=9*CLK;
00006c  48e7              LDR      r0,|L1.1036|
00006e  49e4              LDR      r1,|L1.1024|
000070  6048              STR      r0,[r1,#4]
;;;38     	RCC->CFGR|=1<<16;	  //PLLSRC ON 
000072  4608              MOV      r0,r1
000074  6840              LDR      r0,[r0,#4]
000076  f4403080          ORR      r0,r0,#0x10000
00007a  6048              STR      r0,[r1,#4]
;;;39     	FLASH->ACR|=0x32;	  //FLASH 2个延时周期
00007c  48e4              LDR      r0,|L1.1040|
00007e  6800              LDR      r0,[r0,#0]
000080  f0400032          ORR      r0,r0,#0x32
000084  49e2              LDR      r1,|L1.1040|
000086  6008              STR      r0,[r1,#0]
;;;40     
;;;41     	RCC->CR|=0x01000000;  //PLLON
000088  48dd              LDR      r0,|L1.1024|
00008a  6800              LDR      r0,[r0,#0]
00008c  f0407080          ORR      r0,r0,#0x1000000
000090  49db              LDR      r1,|L1.1024|
000092  6008              STR      r0,[r1,#0]
;;;42     	while(!(RCC->CR>>25));//等待PLL锁定
000094  bf00              NOP      
                  |L1.150|
000096  48da              LDR      r0,|L1.1024|
000098  6800              LDR      r0,[r0,#0]
00009a  0e40              LSRS     r0,r0,#25
00009c  d0fb              BEQ      |L1.150|
;;;43     	RCC->CFGR|=0x00000002;//PLL作为系统时钟	 
00009e  48d8              LDR      r0,|L1.1024|
0000a0  6840              LDR      r0,[r0,#4]
0000a2  f0400002          ORR      r0,r0,#2
0000a6  49d6              LDR      r1,|L1.1024|
0000a8  6048              STR      r0,[r1,#4]
;;;44     	while(temp!=0x02)     //等待PLL作为系统时钟设置成功
0000aa  e005              B        |L1.184|
                  |L1.172|
;;;45     	{   
;;;46     		temp=RCC->CFGR>>2;
0000ac  48d4              LDR      r0,|L1.1024|
0000ae  6840              LDR      r0,[r0,#4]
0000b0  f3c00287          UBFX     r2,r0,#2,#8
;;;47     		temp&=0x03;
0000b4  f0020203          AND      r2,r2,#3
                  |L1.184|
0000b8  2a02              CMP      r2,#2                 ;44
0000ba  d1f7              BNE      |L1.172|
;;;48     	}    
;;;49     }
0000bc  bd00              POP      {pc}
;;;50     #endif
                          ENDP

                  heyaodz_JF PROC
;;;304     
;;;305    void heyaodz_JF(void)	//显示字符串
0000be  b510              PUSH     {r4,lr}
;;;306    {
;;;307     	POINT_COLOR=BLUE;
0000c0  201f              MOVS     r0,#0x1f
0000c2  49d4              LDR      r1,|L1.1044|
0000c4  8008              STRH     r0,[r1,#0]
;;;308    	TFT_ShowString(80,70,"STM32 TOUCH TEST");
0000c6  a2d4              ADR      r2,|L1.1048|
0000c8  2146              MOVS     r1,#0x46
0000ca  2050              MOVS     r0,#0x50
0000cc  f7fffffe          BL       TFT_ShowString
;;;309    	TFT_ShowString(80,80,"STM32-HY-heyaodz");
0000d0  a2d6              ADR      r2,|L1.1068|
0000d2  2150              MOVS     r1,#0x50
0000d4  4608              MOV      r0,r1
0000d6  f7fffffe          BL       TFT_ShowString
;;;310    	TFT_ShowString(80,90,"2011/5/31"); 
0000da  a2d9              ADR      r2,|L1.1088|
0000dc  215a              MOVS     r1,#0x5a
0000de  2050              MOVS     r0,#0x50
0000e0  f7fffffe          BL       TFT_ShowString
;;;311    	TFT_ShowString(80,110,"Init...."); 
0000e4  a2d9              ADR      r2,|L1.1100|
0000e6  216e              MOVS     r1,#0x6e
0000e8  2050              MOVS     r0,#0x50
0000ea  f7fffffe          BL       TFT_ShowString
;;;312    	TFT_ShowString(80,130,"Please Wait..."); 	
0000ee  a2da              ADR      r2,|L1.1112|
0000f0  2182              MOVS     r1,#0x82
0000f2  2050              MOVS     r0,#0x50
0000f4  f7fffffe          BL       TFT_ShowString
;;;313    }
0000f8  bd10              POP      {r4,pc}
;;;314    
                          ENDP

                  heyaodz_TPad0 PROC
;;;113    
;;;114    void heyaodz_TPad0(void)	//触摸
0000fa  b510              PUSH     {r4,lr}
;;;115    {
;;;116    	POINT_COLOR=RED;
0000fc  f44f4078          MOV      r0,#0xf800
000100  49c4              LDR      r1,|L1.1044|
000102  8008              STRH     r0,[r1,#0]
;;;117    	TFT_CLEAR(0,0,240,320);     //清屏   	
000104  f44f73a0          MOV      r3,#0x140
000108  22f0              MOVS     r2,#0xf0
00010a  2100              MOVS     r1,#0
00010c  4608              MOV      r0,r1
00010e  f7fffffe          BL       TFT_CLEAR
;;;118    }
000112  bd10              POP      {r4,pc}
;;;119    
                          ENDP

                  M25P80_buf_ToRam_TP PROC
;;;281    
;;;282    void M25P80_buf_ToRam_TP(void) //读取保存的值
000114  b510              PUSH     {r4,lr}
;;;283    {
;;;284    
;;;285        M25P80_buf_ToRam(1,2,17); //读取数据  
000116  2211              MOVS     r2,#0x11
000118  2102              MOVS     r1,#2
00011a  2001              MOVS     r0,#1
00011c  f7fffffe          BL       M25P80_buf_ToRam
;;;286    	TP_B=AT45_buffer[17]; // 识别字
000120  48d1              LDR      r0,|L1.1128|
000122  7c40              LDRB     r0,[r0,#0x11]  ; AT45_buffer
000124  49d1              LDR      r1,|L1.1132|
000126  7008              STRB     r0,[r1,#0]
;;;287    
;;;288    	Xs_1=(AT45_buffer[18]<<8)+AT45_buffer[19];
000128  48cf              LDR      r0,|L1.1128|
00012a  7cc0              LDRB     r0,[r0,#0x13]  ; AT45_buffer
00012c  49ce              LDR      r1,|L1.1128|
00012e  7c89              LDRB     r1,[r1,#0x12]  ; AT45_buffer
000130  eb002001          ADD      r0,r0,r1,LSL #8
000134  49ce              LDR      r1,|L1.1136|
000136  6008              STR      r0,[r1,#0]  ; Xs_1
;;;289    	Ys_1=(AT45_buffer[20]<<8)+AT45_buffer[21];
000138  48cb              LDR      r0,|L1.1128|
00013a  7d40              LDRB     r0,[r0,#0x15]  ; AT45_buffer
00013c  49ca              LDR      r1,|L1.1128|
00013e  7d09              LDRB     r1,[r1,#0x14]  ; AT45_buffer
000140  eb002001          ADD      r0,r0,r1,LSL #8
000144  49cb              LDR      r1,|L1.1140|
000146  6008              STR      r0,[r1,#0]  ; Ys_1
;;;290    
;;;291    	Xs_2=(AT45_buffer[22]<<8)+AT45_buffer[23];
000148  48c7              LDR      r0,|L1.1128|
00014a  7dc0              LDRB     r0,[r0,#0x17]  ; AT45_buffer
00014c  49c6              LDR      r1,|L1.1128|
00014e  7d89              LDRB     r1,[r1,#0x16]  ; AT45_buffer
000150  eb002001          ADD      r0,r0,r1,LSL #8
000154  49c8              LDR      r1,|L1.1144|
000156  6008              STR      r0,[r1,#0]  ; Xs_2
;;;292    	Ys_2=(AT45_buffer[24]<<8)+AT45_buffer[25];
000158  48c3              LDR      r0,|L1.1128|
00015a  7e40              LDRB     r0,[r0,#0x19]  ; AT45_buffer
00015c  49c2              LDR      r1,|L1.1128|
00015e  7e09              LDRB     r1,[r1,#0x18]  ; AT45_buffer
000160  eb002001          ADD      r0,r0,r1,LSL #8
000164  49c5              LDR      r1,|L1.1148|
000166  6008              STR      r0,[r1,#0]  ; Ys_2
;;;293    
;;;294    	Xs_3=(AT45_buffer[26]<<8)+AT45_buffer[27];
000168  48bf              LDR      r0,|L1.1128|
00016a  7ec0              LDRB     r0,[r0,#0x1b]  ; AT45_buffer
00016c  49be              LDR      r1,|L1.1128|
00016e  7e89              LDRB     r1,[r1,#0x1a]  ; AT45_buffer
000170  eb002001          ADD      r0,r0,r1,LSL #8
000174  49c2              LDR      r1,|L1.1152|
000176  6008              STR      r0,[r1,#0]  ; Xs_3
;;;295    	Ys_3=(AT45_buffer[28]<<8)+AT45_buffer[29];
000178  48bb              LDR      r0,|L1.1128|
00017a  7f40              LDRB     r0,[r0,#0x1d]  ; AT45_buffer
00017c  49ba              LDR      r1,|L1.1128|
00017e  7f09              LDRB     r1,[r1,#0x1c]  ; AT45_buffer
000180  eb002001          ADD      r0,r0,r1,LSL #8
000184  49bf              LDR      r1,|L1.1156|
000186  6008              STR      r0,[r1,#0]  ; Ys_3
;;;296    
;;;297    	Xs_4=(AT45_buffer[30]<<8)+AT45_buffer[31];
000188  48b7              LDR      r0,|L1.1128|
00018a  7fc0              LDRB     r0,[r0,#0x1f]  ; AT45_buffer
00018c  49b6              LDR      r1,|L1.1128|
00018e  7f89              LDRB     r1,[r1,#0x1e]  ; AT45_buffer
000190  eb002001          ADD      r0,r0,r1,LSL #8
000194  49bc              LDR      r1,|L1.1160|
000196  6008              STR      r0,[r1,#0]  ; Xs_4
;;;298    	Ys_4=(AT45_buffer[32]<<8)+AT45_buffer[33];
000198  48b3              LDR      r0,|L1.1128|
00019a  f8900021          LDRB     r0,[r0,#0x21]  ; AT45_buffer
00019e  49b2              LDR      r1,|L1.1128|
0001a0  f8911020          LDRB     r1,[r1,#0x20]  ; AT45_buffer
0001a4  eb002001          ADD      r0,r0,r1,LSL #8
0001a8  49b8              LDR      r1,|L1.1164|
0001aa  6008              STR      r0,[r1,#0]  ; Ys_4
;;;299    	
;;;300    	dw=1;
0001ac  2001              MOVS     r0,#1
0001ae  49b8              LDR      r1,|L1.1168|
0001b0  7008              STRB     r0,[r1,#0]
;;;301    
;;;302    }
0001b2  bd10              POP      {r4,pc}
;;;303    
                          ENDP

                  M25P16_RamTo_buf_TP PROC
;;;253    
;;;254    void M25P16_RamTo_buf_TP(void) //保存校准数据  
0001b4  b510              PUSH     {r4,lr}
;;;255    {
;;;256    
;;;257    	   AT45_buffer[0]=	0X01; // 保存识别字
0001b6  2001              MOVS     r0,#1
0001b8  49ab              LDR      r1,|L1.1128|
0001ba  7008              STRB     r0,[r1,#0]
;;;258    	  
;;;259    	   AT45_buffer[1]=	Xs_1>>8; // 取高八位
0001bc  48ac              LDR      r0,|L1.1136|
0001be  6800              LDR      r0,[r0,#0]  ; Xs_1
0001c0  0a00              LSRS     r0,r0,#8
0001c2  7048              STRB     r0,[r1,#1]
;;;260    	   AT45_buffer[2]=	Xs_1&0XFF; // 取低八位
0001c4  48aa              LDR      r0,|L1.1136|
0001c6  6800              LDR      r0,[r0,#0]  ; Xs_1
0001c8  7088              STRB     r0,[r1,#2]
;;;261    	   AT45_buffer[3]=	Ys_1>>8; // 取高八位
0001ca  48aa              LDR      r0,|L1.1140|
0001cc  6800              LDR      r0,[r0,#0]  ; Ys_1
0001ce  0a00              LSRS     r0,r0,#8
0001d0  70c8              STRB     r0,[r1,#3]
;;;262    	   AT45_buffer[4]=	Ys_1&0XFF; // 取低八位
0001d2  48a8              LDR      r0,|L1.1140|
0001d4  6800              LDR      r0,[r0,#0]  ; Ys_1
0001d6  7108              STRB     r0,[r1,#4]
;;;263    
;;;264    	   AT45_buffer[5]=	Xs_2>>8; // 取高八位
0001d8  48a7              LDR      r0,|L1.1144|
0001da  6800              LDR      r0,[r0,#0]  ; Xs_2
0001dc  0a00              LSRS     r0,r0,#8
0001de  7148              STRB     r0,[r1,#5]
;;;265    	   AT45_buffer[6]=	Xs_2&0XFF; // 取低八位
0001e0  48a5              LDR      r0,|L1.1144|
0001e2  6800              LDR      r0,[r0,#0]  ; Xs_2
0001e4  7188              STRB     r0,[r1,#6]
;;;266    	   AT45_buffer[7]=	Ys_2>>8; // 取高八位
0001e6  48a5              LDR      r0,|L1.1148|
0001e8  6800              LDR      r0,[r0,#0]  ; Ys_2
0001ea  0a00              LSRS     r0,r0,#8
0001ec  71c8              STRB     r0,[r1,#7]
;;;267    	   AT45_buffer[8]=	Ys_2&0XFF; // 取低八位
0001ee  48a3              LDR      r0,|L1.1148|
0001f0  6800              LDR      r0,[r0,#0]  ; Ys_2
0001f2  7208              STRB     r0,[r1,#8]
;;;268    
;;;269    	   AT45_buffer[9]=	Xs_3>>8; // 取高八位
0001f4  48a2              LDR      r0,|L1.1152|
0001f6  6800              LDR      r0,[r0,#0]  ; Xs_3
0001f8  0a00              LSRS     r0,r0,#8
0001fa  7248              STRB     r0,[r1,#9]
;;;270    	   AT45_buffer[10]=	Xs_3&0XFF; // 取低八位
0001fc  48a0              LDR      r0,|L1.1152|
0001fe  6800              LDR      r0,[r0,#0]  ; Xs_3
000200  7288              STRB     r0,[r1,#0xa]
;;;271    	   AT45_buffer[11]=	Ys_3>>8; // 取高八位
000202  48a0              LDR      r0,|L1.1156|
000204  6800              LDR      r0,[r0,#0]  ; Ys_3
000206  0a00              LSRS     r0,r0,#8
000208  72c8              STRB     r0,[r1,#0xb]
;;;272    	   AT45_buffer[12]=	Ys_3&0XFF; // 取低八位
00020a  489e              LDR      r0,|L1.1156|
00020c  6800              LDR      r0,[r0,#0]  ; Ys_3
00020e  7308              STRB     r0,[r1,#0xc]
;;;273    
;;;274    	   AT45_buffer[13]=	Xs_4>>8; // 取高八位
000210  489d              LDR      r0,|L1.1160|
000212  6800              LDR      r0,[r0,#0]  ; Xs_4
000214  0a00              LSRS     r0,r0,#8
000216  7348              STRB     r0,[r1,#0xd]
;;;275    	   AT45_buffer[14]=	Xs_4&0XFF; // 取低八位
000218  489b              LDR      r0,|L1.1160|
00021a  6800              LDR      r0,[r0,#0]  ; Xs_4
00021c  7388              STRB     r0,[r1,#0xe]
;;;276    	   AT45_buffer[15]=	Ys_4>>8; // 取高八位
00021e  489b              LDR      r0,|L1.1164|
000220  6800              LDR      r0,[r0,#0]  ; Ys_4
000222  0a00              LSRS     r0,r0,#8
000224  73c8              STRB     r0,[r1,#0xf]
;;;277    	   AT45_buffer[16]=	Ys_4&0XFF; // 取低八位
000226  4899              LDR      r0,|L1.1164|
000228  6800              LDR      r0,[r0,#0]  ; Ys_4
00022a  7408              STRB     r0,[r1,#0x10]
;;;278           
;;;279    	   M25P16_RamTo_buf(1,2,17); //将DF_buffer[]数组中指定长度的数据写入 	
00022c  2211              MOVS     r2,#0x11
00022e  2102              MOVS     r1,#2
000230  2001              MOVS     r0,#1
000232  f7fffffe          BL       M25P16_RamTo_buf
;;;280    }
000236  bd10              POP      {r4,pc}
;;;281    
                          ENDP

                  delay_us PROC
;;;828    //延时us								   
;;;829    void delay_us(u32 Nus)
000238  4601              MOV      r1,r0
;;;830    {		
;;;831    	u32 temp;	    	 
;;;832    	SysTick->LOAD=Nus*fac_us; //时间加载	  		 
00023a  4a96              LDR      r2,|L1.1172|
00023c  7812              LDRB     r2,[r2,#0]  ; fac_us
00023e  434a              MULS     r2,r1,r2
000240  f04f23e0          MOV      r3,#0xe000e000
000244  615a              STR      r2,[r3,#0x14]
;;;833    	SysTick->VAL=0x00;        //清空计数器
000246  2200              MOVS     r2,#0
000248  619a              STR      r2,[r3,#0x18]
;;;834    	SysTick->CTRL=0x01 ;      //开始倒数 	 
00024a  2201              MOVS     r2,#1
00024c  611a              STR      r2,[r3,#0x10]
;;;835    	do
00024e  bf00              NOP      
                  |L1.592|
;;;836    	{
;;;837    		temp=SysTick->CTRL;
000250  f04f22e0          MOV      r2,#0xe000e000
000254  6910              LDR      r0,[r2,#0x10]
;;;838    	}
;;;839    	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
000256  f0100f01          TST      r0,#1
00025a  d002              BEQ      |L1.610|
00025c  f4103f80          TST      r0,#0x10000
000260  d0f6              BEQ      |L1.592|
                  |L1.610|
;;;840    	SysTick->CTRL=0x00;       //关闭计数器
000262  2200              MOVS     r2,#0
000264  f04f23e0          MOV      r3,#0xe000e000
000268  611a              STR      r2,[r3,#0x10]
;;;841    	SysTick->VAL =0X00;       //清空计数器	    
00026a  619a              STR      r2,[r3,#0x18]
;;;842    }
00026c  4770              BX       lr
                          ENDP

                  drawbigpoint PROC
;;;572    //包括清屏"按钮"RST
;;;573    void drawbigpoint(u8 x,u16 y)
00026e  b570              PUSH     {r4-r6,lr}
;;;574    {
000270  4604              MOV      r4,r0
000272  460d              MOV      r5,r1
;;;575    	if(x>220&&y<12)
000274  2cdc              CMP      r4,#0xdc
000276  dd0e              BLE      |L1.662|
000278  2d0c              CMP      r5,#0xc
00027a  da0c              BGE      |L1.662|
;;;576    	{
;;;577    		TFT_CLEAR(0,20,240,320);//清屏 
00027c  f44f73a0          MOV      r3,#0x140
000280  22f0              MOVS     r2,#0xf0
000282  2114              MOVS     r1,#0x14
000284  2000              MOVS     r0,#0
000286  f7fffffe          BL       TFT_CLEAR
;;;578        	TFT_ShowString(210,0,"CLR");//显示清屏区域
00028a  a283              ADR      r2,|L1.1176|
00028c  2100              MOVS     r1,#0
00028e  20d2              MOVS     r0,#0xd2
000290  f7fffffe          BL       TFT_ShowString
000294  e06c              B        |L1.880|
                  |L1.662|
;;;579    
;;;580    	}
;;;581    	else if(y==0||x==0){
000296  b105              CBZ      r5,|L1.666|
000298  b9a4              CBNZ     r4,|L1.708|
                  |L1.666|
;;;582    		TFT_DrawPoint(x,y);//中心点 
00029a  4629              MOV      r1,r5
00029c  4620              MOV      r0,r4
00029e  f7fffffe          BL       TFT_DrawPoint
;;;583    		TFT_DrawPoint(x+1,y);
0002a2  4629              MOV      r1,r5
0002a4  1c60              ADDS     r0,r4,#1
0002a6  b2c0              UXTB     r0,r0
0002a8  f7fffffe          BL       TFT_DrawPoint
;;;584    		TFT_DrawPoint(x,y+1);
0002ac  1c68              ADDS     r0,r5,#1
0002ae  b281              UXTH     r1,r0
0002b0  4620              MOV      r0,r4
0002b2  f7fffffe          BL       TFT_DrawPoint
;;;585    		TFT_DrawPoint(x+1,y+1);	
0002b6  1c68              ADDS     r0,r5,#1
0002b8  b281              UXTH     r1,r0
0002ba  1c60              ADDS     r0,r4,#1
0002bc  b2c0              UXTB     r0,r0
0002be  f7fffffe          BL       TFT_DrawPoint
0002c2  e055              B        |L1.880|
                  |L1.708|
;;;586    	}		
;;;587    	else if(x<120&&y<20)								
0002c4  2c78              CMP      r4,#0x78
0002c6  da3d              BGE      |L1.836|
0002c8  2d14              CMP      r5,#0x14
0002ca  da3b              BGE      |L1.836|
;;;588    	{
;;;589    
;;;590    
;;;591    	    if(x<=20) POINT_COLOR=RED;
0002cc  2c14              CMP      r4,#0x14
0002ce  dc04              BGT      |L1.730|
0002d0  f44f4078          MOV      r0,#0xf800
0002d4  494f              LDR      r1,|L1.1044|
0002d6  8008              STRH     r0,[r1,#0]
0002d8  e04a              B        |L1.880|
                  |L1.730|
;;;592    		else if(x>20,x<=40) POINT_COLOR=BLUE;
0002da  2c28              CMP      r4,#0x28
0002dc  dc01              BGT      |L1.738|
0002de  2001              MOVS     r0,#1
0002e0  e000              B        |L1.740|
                  |L1.738|
0002e2  2000              MOVS     r0,#0
                  |L1.740|
0002e4  b118              CBZ      r0,|L1.750|
0002e6  201f              MOVS     r0,#0x1f
0002e8  494a              LDR      r1,|L1.1044|
0002ea  8008              STRH     r0,[r1,#0]
0002ec  e040              B        |L1.880|
                  |L1.750|
;;;593    		else if(x>40,x<=60) POINT_COLOR=GREEN;
0002ee  2c3c              CMP      r4,#0x3c
0002f0  dc01              BGT      |L1.758|
0002f2  2001              MOVS     r0,#1
0002f4  e000              B        |L1.760|
                  |L1.758|
0002f6  2000              MOVS     r0,#0
                  |L1.760|
0002f8  b120              CBZ      r0,|L1.772|
0002fa  f44f60fc          MOV      r0,#0x7e0
0002fe  4945              LDR      r1,|L1.1044|
000300  8008              STRH     r0,[r1,#0]
000302  e035              B        |L1.880|
                  |L1.772|
;;;594    		else if(x>60,x<=80) POINT_COLOR=GRED;
000304  2c50              CMP      r4,#0x50
000306  dc01              BGT      |L1.780|
000308  2001              MOVS     r0,#1
00030a  e000              B        |L1.782|
                  |L1.780|
00030c  2000              MOVS     r0,#0
                  |L1.782|
00030e  b120              CBZ      r0,|L1.794|
000310  f64f70e0          MOV      r0,#0xffe0
000314  493f              LDR      r1,|L1.1044|
000316  8008              STRH     r0,[r1,#0]
000318  e02a              B        |L1.880|
                  |L1.794|
;;;595    		else if(x>80,x<=100) POINT_COLOR=BRED;	
00031a  2c64              CMP      r4,#0x64
00031c  dc01              BGT      |L1.802|
00031e  2001              MOVS     r0,#1
000320  e000              B        |L1.804|
                  |L1.802|
000322  2000              MOVS     r0,#0
                  |L1.804|
000324  b120              CBZ      r0,|L1.816|
000326  f64f001f          MOV      r0,#0xf81f
00032a  493a              LDR      r1,|L1.1044|
00032c  8008              STRH     r0,[r1,#0]
00032e  e01f              B        |L1.880|
                  |L1.816|
;;;596    		else if(x>100,x<=120) POINT_COLOR=BLACK;
000330  2c78              CMP      r4,#0x78
000332  dc01              BGT      |L1.824|
000334  2001              MOVS     r0,#1
000336  e000              B        |L1.826|
                  |L1.824|
000338  2000              MOVS     r0,#0
                  |L1.826|
00033a  b1c8              CBZ      r0,|L1.880|
00033c  2000              MOVS     r0,#0
00033e  4935              LDR      r1,|L1.1044|
000340  8008              STRH     r0,[r1,#0]
000342  e015              B        |L1.880|
                  |L1.836|
;;;597    	}
;;;598    	else if(y>20){
000344  2d14              CMP      r5,#0x14
000346  dd13              BLE      |L1.880|
;;;599    		TFT_DrawPoint(x,y);//中心点 
000348  4629              MOV      r1,r5
00034a  4620              MOV      r0,r4
00034c  f7fffffe          BL       TFT_DrawPoint
;;;600    		TFT_DrawPoint(x+1,y);
000350  4629              MOV      r1,r5
000352  1c60              ADDS     r0,r4,#1
000354  b2c0              UXTB     r0,r0
000356  f7fffffe          BL       TFT_DrawPoint
;;;601    		TFT_DrawPoint(x,y+1);
00035a  1c68              ADDS     r0,r5,#1
00035c  b281              UXTH     r1,r0
00035e  4620              MOV      r0,r4
000360  f7fffffe          BL       TFT_DrawPoint
;;;602    		TFT_DrawPoint(x+1,y+1);	
000364  1c68              ADDS     r0,r5,#1
000366  b281              UXTH     r1,r0
000368  1c60              ADDS     r0,r4,#1
00036a  b2c0              UXTB     r0,r0
00036c  f7fffffe          BL       TFT_DrawPoint
                  |L1.880|
;;;603    	}		  	
;;;604    }
000370  bd70              POP      {r4-r6,pc}
;;;605    
                          ENDP

                  read_once PROC
;;;528    //读数限制在100~3800之间.
;;;529    u8 read_once(void)
000372  b570              PUSH     {r4-r6,lr}
;;;530    {	unsigned int a,b;
;;;531    	TCS_SET(0); 
000374  4849              LDR      r0,|L1.1180|
000376  6800              LDR      r0,[r0,#0]
000378  f0200080          BIC      r0,r0,#0x80
00037c  4948              LDR      r1,|L1.1184|
00037e  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;532    	delay_us(5);	   	 
000382  f04f0005          MOV      r0,#5
000386  f7fffffe          BL       delay_us
;;;533    	SPI_SendByte(CMD_RDY); 
00038a  20d0              MOVS     r0,#0xd0
00038c  f7fffffe          BL       SPI_SendByte
;;;534    	delay_us(5);	
000390  2005              MOVS     r0,#5
000392  f7fffffe          BL       delay_us
;;;535    	a=SPI_ReadByte(0);
000396  2000              MOVS     r0,#0
000398  f7fffffe          BL       SPI_ReadByte
00039c  4604              MOV      r4,r0
;;;536    	a=a<<8;
00039e  0224              LSLS     r4,r4,#8
;;;537    	a|=SPI_ReadByte(0);
0003a0  2000              MOVS     r0,#0
0003a2  f7fffffe          BL       SPI_ReadByte
0003a6  4304              ORRS     r4,r4,r0
;;;538    	delay_us(5);	
0003a8  2005              MOVS     r0,#5
0003aa  f7fffffe          BL       delay_us
;;;539    	TCS_SET(1); 	 
0003ae  483b              LDR      r0,|L1.1180|
0003b0  6800              LDR      r0,[r0,#0]
0003b2  f0400080          ORR      r0,r0,#0x80
0003b6  493a              LDR      r1,|L1.1184|
0003b8  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;540    	a>>=3; 
0003bc  ea4f04d4          LSR      r4,r4,#3
;;;541    	Y=a;
0003c0  4838              LDR      r0,|L1.1188|
0003c2  6004              STR      r4,[r0,#0]  ; Y
;;;542    	delay_us(15);	
0003c4  f04f000f          MOV      r0,#0xf
0003c8  f7fffffe          BL       delay_us
;;;543    	TCS_SET(0); 
0003cc  4834              LDR      r0,|L1.1184|
0003ce  f8d00c0c          LDR      r0,[r0,#0xc0c]
0003d2  f0200080          BIC      r0,r0,#0x80
0003d6  4932              LDR      r1,|L1.1184|
0003d8  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;544    	delay_us(5);	 
0003dc  2005              MOVS     r0,#5
0003de  f7fffffe          BL       delay_us
;;;545        SPI_SendByte(CMD_RDX);
0003e2  2090              MOVS     r0,#0x90
0003e4  f7fffffe          BL       SPI_SendByte
;;;546    	delay_us(5);	
0003e8  2005              MOVS     r0,#5
0003ea  f7fffffe          BL       delay_us
;;;547    	b=SPI_ReadByte(0);
0003ee  2000              MOVS     r0,#0
0003f0  f7fffffe          BL       SPI_ReadByte
0003f4  4605              MOV      r5,r0
;;;548    	b=b<<8;
0003f6  022d              LSLS     r5,r5,#8
;;;549    	b|=SPI_ReadByte(0);
0003f8  2000              MOVS     r0,#0
0003fa  f7fffffe          BL       SPI_ReadByte
0003fe  e053              B        |L1.1192|
                  |L1.1024|
                          DCD      0x40021000
                  |L1.1028|
                          DCD      0xf8ff0000
                  |L1.1032|
                          DCD      0xfef6ffff
                  |L1.1036|
                          DCD      0x001c0400
                  |L1.1040|
                          DCD      0x40022000
                  |L1.1044|
                          DCD      POINT_COLOR
                  |L1.1048|
000418  53544d33          DCB      "STM32 TOUCH TEST",0
00041c  3220544f
000420  55434820
000424  54455354
000428  00      
000429  00                DCB      0
00042a  00                DCB      0
00042b  00                DCB      0
                  |L1.1068|
00042c  53544d33          DCB      "STM32-HY-heyaodz",0
000430  322d4859
000434  2d686579
000438  616f647a
00043c  00      
00043d  00                DCB      0
00043e  00                DCB      0
00043f  00                DCB      0
                  |L1.1088|
000440  32303131          DCB      "2011/5/31",0
000444  2f352f33
000448  3100    
00044a  00                DCB      0
00044b  00                DCB      0
                  |L1.1100|
00044c  496e6974          DCB      "Init....",0
000450  2e2e2e2e
000454  00      
000455  00                DCB      0
000456  00                DCB      0
000457  00                DCB      0
                  |L1.1112|
000458  506c6561          DCB      "Please Wait...",0
00045c  73652057
000460  6169742e
000464  2e2e00  
000467  00                DCB      0
                  |L1.1128|
                          DCD      AT45_buffer
                  |L1.1132|
                          DCD      TP_B
                  |L1.1136|
                          DCD      Xs_1
                  |L1.1140|
                          DCD      Ys_1
                  |L1.1144|
                          DCD      Xs_2
                  |L1.1148|
                          DCD      Ys_2
                  |L1.1152|
                          DCD      Xs_3
                  |L1.1156|
                          DCD      Ys_3
                  |L1.1160|
                          DCD      Xs_4
                  |L1.1164|
                          DCD      Ys_4
                  |L1.1168|
                          DCD      ||dw||
                  |L1.1172|
                          DCD      fac_us
                  |L1.1176|
000498  434c5200          DCB      "CLR",0
                  |L1.1180|
                          DCD      0x40010c0c
                  |L1.1184|
                          DCD      0x40010000
                  |L1.1188|
                          DCD      Y
                  |L1.1192|
0004a8  4305              ORRS     r5,r5,r0
;;;550    	delay_us(5);	
0004aa  2005              MOVS     r0,#5
0004ac  f7fffffe          BL       delay_us
;;;551    	b>>=3; 
0004b0  08ed              LSRS     r5,r5,#3
;;;552    	X=b;   
0004b2  48ff              LDR      r0,|L1.2224|
0004b4  6005              STR      r5,[r0,#0]  ; X
;;;553    
;;;554    	TCS_SET(1); 
0004b6  48ff              LDR      r0,|L1.2228|
0004b8  6800              LDR      r0,[r0,#0]
0004ba  f0400080          ORR      r0,r0,#0x80
0004be  49fe              LDR      r1,|L1.2232|
0004c0  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;555    	if(X>100&&Y>100&&X<4000&&Y<4000)return 1;//读数成功(范围限制)
0004c4  48fa              LDR      r0,|L1.2224|
0004c6  6800              LDR      r0,[r0,#0]  ; X
0004c8  2864              CMP      r0,#0x64
0004ca  d90f              BLS      |L1.1260|
0004cc  48fb              LDR      r0,|L1.2236|
0004ce  6800              LDR      r0,[r0,#0]  ; Y
0004d0  2864              CMP      r0,#0x64
0004d2  d90b              BLS      |L1.1260|
0004d4  48f6              LDR      r0,|L1.2224|
0004d6  6800              LDR      r0,[r0,#0]  ; X
0004d8  f5b06f7a          CMP      r0,#0xfa0
0004dc  d206              BCS      |L1.1260|
0004de  48f7              LDR      r0,|L1.2236|
0004e0  6800              LDR      r0,[r0,#0]  ; Y
0004e2  f5b06f7a          CMP      r0,#0xfa0
0004e6  d201              BCS      |L1.1260|
0004e8  2001              MOVS     r0,#1
                  |L1.1258|
;;;556    	else return 0;			                 //读数失败
;;;557    }
0004ea  bd70              POP      {r4-r6,pc}
                  |L1.1260|
0004ec  2000              MOVS     r0,#0                 ;556
0004ee  e7fc              B        |L1.1258|
;;;558    
                          ENDP

                  Read_Ads7846 PROC
;;;617     
;;;618    void Read_Ads7846(void)
0004f0  b500              PUSH     {lr}
;;;619    {	float X1,Y1,hh;
0004f2  b09b              SUB      sp,sp,#0x6c
;;;620        u16 x1,x2,y1,y2,xx;
;;;621    	u8 t,t1,count=0;
0004f4  2000              MOVS     r0,#0
0004f6  9010              STR      r0,[sp,#0x40]
;;;622    	u16 databuffer[2][10];//数据组
;;;623    	u16 temp=0;	 
0004f8  9005              STR      r0,[sp,#0x14]
;;;624        do					  //循环读数10次
0004fa  bf00              NOP      
                  |L1.1276|
;;;625    	{
;;;626    		//t=PEN;		   
;;;627    		if(read_once())//读数成功
0004fc  f7fffffe          BL       read_once
000500  b188              CBZ      r0,|L1.1318|
;;;628    		{	  
;;;629    			databuffer[0][count]=X;
000502  48eb              LDR      r0,|L1.2224|
000504  6800              LDR      r0,[r0,#0]  ; X
000506  b281              UXTH     r1,r0
000508  aa06              ADD      r2,sp,#0x18
00050a  9810              LDR      r0,[sp,#0x40]
00050c  f8221010          STRH     r1,[r2,r0,LSL #1]
;;;630    			databuffer[1][count]=Y;
000510  48ea              LDR      r0,|L1.2236|
000512  6800              LDR      r0,[r0,#0]  ; Y
000514  b282              UXTH     r2,r0
000516  a80b              ADD      r0,sp,#0x2c
000518  9910              LDR      r1,[sp,#0x40]
00051a  f8202011          STRH     r2,[r0,r1,LSL #1]
;;;631    			count++;  
00051e  9810              LDR      r0,[sp,#0x40]
000520  1c40              ADDS     r0,r0,#1
000522  b2c0              UXTB     r0,r0
000524  9010              STR      r0,[sp,#0x40]
                  |L1.1318|
;;;632    		}
;;;633    		t=PEN;
000526  2140              MOVS     r1,#0x40
000528  48e2              LDR      r0,|L1.2228|
00052a  380c              SUBS     r0,r0,#0xc
00052c  f7fffffe          BL       GPIO_ReadInputDataBit
000530  9012              STR      r0,[sp,#0x48]
;;;634    	}while(!t&&count<10); 
000532  9812              LDR      r0,[sp,#0x48]
000534  b910              CBNZ     r0,|L1.1340|
000536  9810              LDR      r0,[sp,#0x40]
000538  280a              CMP      r0,#0xa
00053a  dbdf              BLT      |L1.1276|
                  |L1.1340|
;;;635    	//}while(count<10); 
;;;636    	if(count==10)//一定要读到10次数据,否则丢弃
00053c  9810              LDR      r0,[sp,#0x40]
00053e  280a              CMP      r0,#0xa
000540  d17e              BNE      |L1.1600|
;;;637    	{  
;;;638    	    do//将数据X升序排列
000542  bf00              NOP      
                  |L1.1348|
;;;639    		{	
;;;640    			t1=0;		  
000544  2000              MOVS     r0,#0
000546  9011              STR      r0,[sp,#0x44]
;;;641    			for(t=0;t<count-1;t++)
000548  9012              STR      r0,[sp,#0x48]
00054a  e01f              B        |L1.1420|
                  |L1.1356|
;;;642    			{
;;;643    				if(databuffer[0][t]>databuffer[0][t+1])//升序排列
00054c  a906              ADD      r1,sp,#0x18
00054e  9812              LDR      r0,[sp,#0x48]
000550  f8311010          LDRH     r1,[r1,r0,LSL #1]
000554  aa06              ADD      r2,sp,#0x18
000556  1c40              ADDS     r0,r0,#1
000558  f8320010          LDRH     r0,[r2,r0,LSL #1]
00055c  4281              CMP      r1,r0
00055e  dd11              BLE      |L1.1412|
;;;644    				{
;;;645    					temp=databuffer[0][t+1];
000560  a906              ADD      r1,sp,#0x18
000562  9812              LDR      r0,[sp,#0x48]
000564  1c40              ADDS     r0,r0,#1
000566  f8310010          LDRH     r0,[r1,r0,LSL #1]
00056a  9005              STR      r0,[sp,#0x14]
;;;646    					databuffer[0][t+1]=databuffer[0][t];
00056c  9812              LDR      r0,[sp,#0x48]
00056e  f8311010          LDRH     r1,[r1,r0,LSL #1]
000572  1c40              ADDS     r0,r0,#1
000574  f8221010          STRH     r1,[r2,r0,LSL #1]
;;;647    					databuffer[0][t]=temp;
000578  9912              LDR      r1,[sp,#0x48]
00057a  9805              LDR      r0,[sp,#0x14]
00057c  f8220011          STRH     r0,[r2,r1,LSL #1]
;;;648    					t1=1; 
000580  2001              MOVS     r0,#1
000582  9011              STR      r0,[sp,#0x44]
                  |L1.1412|
000584  9812              LDR      r0,[sp,#0x48]         ;641
000586  1c40              ADDS     r0,r0,#1              ;641
000588  b2c0              UXTB     r0,r0                 ;641
00058a  9012              STR      r0,[sp,#0x48]         ;641
                  |L1.1420|
00058c  9810              LDR      r0,[sp,#0x40]         ;641
00058e  1e40              SUBS     r0,r0,#1              ;641
000590  9912              LDR      r1,[sp,#0x48]         ;641
000592  4288              CMP      r0,r1                 ;641
000594  dcda              BGT      |L1.1356|
;;;649    				}  
;;;650    			}
;;;651    		}while(t1); 	  
000596  9811              LDR      r0,[sp,#0x44]
000598  2800              CMP      r0,#0
00059a  d1d3              BNE      |L1.1348|
;;;652    		do//将数据Y升序排列
00059c  bf00              NOP      
                  |L1.1438|
;;;653    		{	
;;;654    			t1=0;		 
00059e  2000              MOVS     r0,#0
0005a0  9011              STR      r0,[sp,#0x44]
;;;655    			for(t=0;t<count-1;t++)
0005a2  9012              STR      r0,[sp,#0x48]
0005a4  e022              B        |L1.1516|
                  |L1.1446|
;;;656    			{
;;;657    				if(databuffer[1][t]>databuffer[1][t+1])//升序排列
0005a6  a80b              ADD      r0,sp,#0x2c
0005a8  9912              LDR      r1,[sp,#0x48]
0005aa  f8302011          LDRH     r2,[r0,r1,LSL #1]
0005ae  a90b              ADD      r1,sp,#0x2c
0005b0  9812              LDR      r0,[sp,#0x48]
0005b2  1c40              ADDS     r0,r0,#1
0005b4  f8310010          LDRH     r0,[r1,r0,LSL #1]
0005b8  4282              CMP      r2,r0
0005ba  dd13              BLE      |L1.1508|
;;;658    				{
;;;659    					temp=databuffer[1][t+1];
0005bc  9812              LDR      r0,[sp,#0x48]
0005be  1c40              ADDS     r0,r0,#1
0005c0  f8310010          LDRH     r0,[r1,r0,LSL #1]
0005c4  9005              STR      r0,[sp,#0x14]
;;;660    					databuffer[1][t+1]=databuffer[1][t];
0005c6  a80b              ADD      r0,sp,#0x2c
0005c8  9912              LDR      r1,[sp,#0x48]
0005ca  f8302011          LDRH     r2,[r0,r1,LSL #1]
0005ce  a90b              ADD      r1,sp,#0x2c
0005d0  9812              LDR      r0,[sp,#0x48]
0005d2  1c40              ADDS     r0,r0,#1
0005d4  f8212010          STRH     r2,[r1,r0,LSL #1]
;;;661    					databuffer[1][t]=temp;
0005d8  9a12              LDR      r2,[sp,#0x48]
0005da  9805              LDR      r0,[sp,#0x14]
0005dc  f8210012          STRH     r0,[r1,r2,LSL #1]
;;;662    					t1=1;	 
0005e0  2001              MOVS     r0,#1
0005e2  9011              STR      r0,[sp,#0x44]
                  |L1.1508|
0005e4  9812              LDR      r0,[sp,#0x48]         ;655
0005e6  1c40              ADDS     r0,r0,#1              ;655
0005e8  b2c0              UXTB     r0,r0                 ;655
0005ea  9012              STR      r0,[sp,#0x48]         ;655
                  |L1.1516|
0005ec  9810              LDR      r0,[sp,#0x40]         ;655
0005ee  1e40              SUBS     r0,r0,#1              ;655
0005f0  9912              LDR      r1,[sp,#0x48]         ;655
0005f2  4288              CMP      r0,r1                 ;655
0005f4  dcd7              BGT      |L1.1446|
;;;663    				}  
;;;664    			}
;;;665    		}while(t1);
0005f6  9811              LDR      r0,[sp,#0x44]
0005f8  2800              CMP      r0,#0
0005fa  d1d0              BNE      |L1.1438|
;;;666    		x1=databuffer[0][3]; x2=databuffer[0][4]; //x3=databuffer[0][8];		
0005fc  f8bd001e          LDRH     r0,[sp,#0x1e]
000600  9017              STR      r0,[sp,#0x5c]
000602  f8bd1020          LDRH     r1,[sp,#0x20]
000606  9116              STR      r1,[sp,#0x58]
;;;667    		y1=databuffer[1][3]; y2=databuffer[1][4]; //y3=databuffer[1][8];	   
000608  f8bd0032          LDRH     r0,[sp,#0x32]
00060c  9015              STR      r0,[sp,#0x54]
00060e  f8bd0034          LDRH     r0,[sp,#0x34]
000612  9014              STR      r0,[sp,#0x50]
;;;668    		if(((x1>x2)&&(x1>x2+30))||((x2>x1)&&(x2>x1+30))||((y1>y2)&&(y1>y2+30))||((y2>y1)&&(y2>y1+30)));	 		  
000614  e9dd1016          LDRD     r1,r0,[sp,#0x58]
000618  4288              CMP      r0,r1
00061a  dd04              BLE      |L1.1574|
00061c  e9dd0116          LDRD     r0,r1,[sp,#0x58]
000620  301e              ADDS     r0,r0,#0x1e
000622  4281              CMP      r1,r0
000624  dc0c              BGT      |L1.1600|
                  |L1.1574|
000626  e9dd0116          LDRD     r0,r1,[sp,#0x58]
00062a  4288              CMP      r0,r1
00062c  dd04              BLE      |L1.1592|
00062e  e9dd1016          LDRD     r1,r0,[sp,#0x58]
000632  301e              ADDS     r0,r0,#0x1e
000634  4281              CMP      r1,r0
000636  dc03              BGT      |L1.1600|
                  |L1.1592|
000638  e9dd1014          LDRD     r1,r0,[sp,#0x50]
00063c  4288              CMP      r0,r1
00063e  e000              B        |L1.1602|
                  |L1.1600|
000640  e084              B        |L1.1868|
                  |L1.1602|
000642  dd04              BLE      |L1.1614|
000644  e9dd0114          LDRD     r0,r1,[sp,#0x50]
000648  301e              ADDS     r0,r0,#0x1e
00064a  4281              CMP      r1,r0
00064c  dc7e              BGT      |L1.1868|
                  |L1.1614|
00064e  e9dd0114          LDRD     r0,r1,[sp,#0x50]
000652  4288              CMP      r0,r1
000654  dd04              BLE      |L1.1632|
000656  e9dd1014          LDRD     r1,r0,[sp,#0x50]
00065a  301e              ADDS     r0,r0,#0x1e
00065c  4281              CMP      r1,r0
00065e  dc75              BGT      |L1.1868|
                  |L1.1632|
;;;669    //		if(0);
;;;670    		else
;;;671    		{
;;;672            
;;;673    		X1=(databuffer[0][3]+databuffer[0][4])/2;
000660  f8bd001e          LDRH     r0,[sp,#0x1e]
000664  f8bd1020          LDRH     r1,[sp,#0x20]
000668  4408              ADD      r0,r0,r1
00066a  9004              STR      r0,[sp,#0x10]
00066c  eb0070d0          ADD      r0,r0,r0,LSR #31
000670  1040              ASRS     r0,r0,#1
000672  9003              STR      r0,[sp,#0xc]
000674  f7fffffe          BL       __aeabi_i2f
000678  901a              STR      r0,[sp,#0x68]
;;;674    		Y1=(databuffer[1][3]+databuffer[1][4])/2;	
00067a  f8bd1032          LDRH     r1,[sp,#0x32]
00067e  f8bd0034          LDRH     r0,[sp,#0x34]
000682  4408              ADD      r0,r0,r1
000684  9004              STR      r0,[sp,#0x10]
000686  eb0070d0          ADD      r0,r0,r0,LSR #31
00068a  1040              ASRS     r0,r0,#1
00068c  9003              STR      r0,[sp,#0xc]
00068e  f7fffffe          BL       __aeabi_i2f
000692  9019              STR      r0,[sp,#0x64]
;;;675    		
;;;676    			if(X1<=4096&&Y1<=4096) //个人的屏根据初始参数修改.		  正常
000694  f04f418b          MOV      r1,#0x45800000
000698  981a              LDR      r0,[sp,#0x68]
00069a  f7fffffe          BL       __aeabi_cfcmple
00069e  d855              BHI      |L1.1868|
0006a0  f04f418b          MOV      r1,#0x45800000
0006a4  9819              LDR      r0,[sp,#0x64]
0006a6  f7fffffe          BL       __aeabi_cfcmple
0006aa  d84f              BHI      |L1.1868|
;;;677    			{	X=X1;
0006ac  981a              LDR      r0,[sp,#0x68]
0006ae  f7fffffe          BL       __aeabi_f2uiz
0006b2  497f              LDR      r1,|L1.2224|
0006b4  6008              STR      r0,[r1,#0]  ; X
;;;678    			    Y=Y1;
0006b6  9819              LDR      r0,[sp,#0x64]
0006b8  f7fffffe          BL       __aeabi_f2uiz
0006bc  497f              LDR      r1,|L1.2236|
0006be  6008              STR      r0,[r1,#0]  ; Y
;;;679    
;;;680    
;;;681                  if(dw==1)
0006c0  487f              LDR      r0,|L1.2240|
0006c2  7800              LDRB     r0,[r0,#0]  ; dw
0006c4  2801              CMP      r0,#1
0006c6  d141              BNE      |L1.1868|
;;;682    			  { 
;;;683    			   		if((Xs_1<Xs_3)&&(Ys_1<Ys_2))	//左下角为起始坐标时进入
0006c8  487e              LDR      r0,|L1.2244|
0006ca  6800              LDR      r0,[r0,#0]  ; Xs_1
0006cc  497e              LDR      r1,|L1.2248|
0006ce  6809              LDR      r1,[r1,#0]  ; Xs_3
0006d0  4288              CMP      r0,r1
0006d2  d27e              BCS      |L1.2002|
0006d4  487d              LDR      r0,|L1.2252|
0006d6  6801              LDR      r1,[r0,#0]  ; Ys_1
0006d8  487d              LDR      r0,|L1.2256|
0006da  6800              LDR      r0,[r0,#0]  ; Ys_2
0006dc  4281              CMP      r1,r0
0006de  d278              BCS      |L1.2002|
;;;684    					{
;;;685    						 if((Ys_1*5<Ys_2)&&(Xs_1*5<Xs_3))	//判断触摸方向
0006e0  487a              LDR      r0,|L1.2252|
0006e2  6800              LDR      r0,[r0,#0]  ; Ys_1
0006e4  eb000080          ADD      r0,r0,r0,LSL #2
0006e8  4979              LDR      r1,|L1.2256|
0006ea  6809              LDR      r1,[r1,#0]  ; Ys_2
0006ec  4288              CMP      r0,r1
0006ee  d271              BCS      |L1.2004|
0006f0  4874              LDR      r0,|L1.2244|
0006f2  6800              LDR      r0,[r0,#0]  ; Xs_1
0006f4  eb000080          ADD      r0,r0,r0,LSL #2
0006f8  4973              LDR      r1,|L1.2248|
0006fa  6809              LDR      r1,[r1,#0]  ; Xs_3
0006fc  4288              CMP      r0,r1
0006fe  d27f              BCS      |L1.2048|
;;;686    						 {
;;;687    						   xx=Ys_2-Ys_1;	//计算出Y1,Y2距离
000700  4873              LDR      r0,|L1.2256|
000702  6800              LDR      r0,[r0,#0]  ; Ys_2
000704  4971              LDR      r1,|L1.2252|
000706  6809              LDR      r1,[r1,#0]  ; Ys_1
000708  1a40              SUBS     r0,r0,r1
00070a  b280              UXTH     r0,r0
00070c  9013              STR      r0,[sp,#0x4c]
;;;688    						   hh=(float)xx/200;		//计算出X比例
00070e  9813              LDR      r0,[sp,#0x4c]
000710  f7fffffe          BL       __aeabi_ui2f
000714  496f              LDR      r1,|L1.2260|
000716  9004              STR      r0,[sp,#0x10]
000718  f7fffffe          BL       __aeabi_fdiv
00071c  9018              STR      r0,[sp,#0x60]
;;;689    						   xx=(float)((hh*240)-xx)/2;	//Y方向偏移量
00071e  9813              LDR      r0,[sp,#0x4c]
000720  f7fffffe          BL       __aeabi_ui2f
000724  496c              LDR      r1,|L1.2264|
000726  9002              STR      r0,[sp,#8]
000728  9818              LDR      r0,[sp,#0x60]
00072a  f7fffffe          BL       __aeabi_fmul
00072e  9001              STR      r0,[sp,#4]
000730  9902              LDR      r1,[sp,#8]
000732  f7fffffe          BL       __aeabi_fsub
000736  f04f4180          MOV      r1,#0x40000000
00073a  9003              STR      r0,[sp,#0xc]
00073c  f7fffffe          BL       __aeabi_fdiv
000740  9004              STR      r0,[sp,#0x10]
000742  f7fffffe          BL       __aeabi_f2uiz
000746  b280              UXTH     r0,r0
000748  9013              STR      r0,[sp,#0x4c]
;;;690    						   X=(Y1-(Ys_1-xx))/hh;		  //计算坐标
00074a  e000              B        |L1.1870|
                  |L1.1868|
00074c  e3c2              B        |L1.3796|
                  |L1.1870|
00074e  485f              LDR      r0,|L1.2252|
000750  6801              LDR      r1,[r0,#0]  ; Ys_1
000752  9813              LDR      r0,[sp,#0x4c]
000754  1a08              SUBS     r0,r1,r0
000756  9001              STR      r0,[sp,#4]
000758  f7fffffe          BL       __aeabi_ui2f
00075c  9002              STR      r0,[sp,#8]
00075e  9919              LDR      r1,[sp,#0x64]
000760  f7fffffe          BL       __aeabi_frsub
000764  9003              STR      r0,[sp,#0xc]
000766  9918              LDR      r1,[sp,#0x60]
000768  f7fffffe          BL       __aeabi_fdiv
00076c  9004              STR      r0,[sp,#0x10]
00076e  f7fffffe          BL       __aeabi_f2uiz
000772  494f              LDR      r1,|L1.2224|
000774  6008              STR      r0,[r1,#0]  ; X
;;;691    						   xx=Xs_3-Xs_1;	//计算出X1,X3距离
000776  4854              LDR      r0,|L1.2248|
000778  6800              LDR      r0,[r0,#0]  ; Xs_3
00077a  4952              LDR      r1,|L1.2244|
00077c  6809              LDR      r1,[r1,#0]  ; Xs_1
00077e  1a40              SUBS     r0,r0,r1
000780  b280              UXTH     r0,r0
000782  9013              STR      r0,[sp,#0x4c]
;;;692    						   hh=(float)xx/280;	//计算出X比例因子
000784  9813              LDR      r0,[sp,#0x4c]
000786  f7fffffe          BL       __aeabi_ui2f
00078a  4954              LDR      r1,|L1.2268|
00078c  9004              STR      r0,[sp,#0x10]
00078e  f7fffffe          BL       __aeabi_fdiv
000792  9018              STR      r0,[sp,#0x60]
;;;693    						   xx=(float)((hh*320)-xx)/2;  //X方向偏移量
000794  9813              LDR      r0,[sp,#0x4c]
000796  f7fffffe          BL       __aeabi_ui2f
00079a  4951              LDR      r1,|L1.2272|
00079c  9002              STR      r0,[sp,#8]
00079e  9818              LDR      r0,[sp,#0x60]
0007a0  f7fffffe          BL       __aeabi_fmul
0007a4  9001              STR      r0,[sp,#4]
0007a6  9902              LDR      r1,[sp,#8]
0007a8  f7fffffe          BL       __aeabi_fsub
0007ac  f04f4180          MOV      r1,#0x40000000
0007b0  9003              STR      r0,[sp,#0xc]
0007b2  f7fffffe          BL       __aeabi_fdiv
0007b6  9004              STR      r0,[sp,#0x10]
0007b8  f7fffffe          BL       __aeabi_f2uiz
0007bc  b280              UXTH     r0,r0
0007be  9013              STR      r0,[sp,#0x4c]
;;;694    						   Y=(X1-(Xs_1-xx))/hh;	//计算坐标
0007c0  4840              LDR      r0,|L1.2244|
0007c2  6801              LDR      r1,[r0,#0]  ; Xs_1
0007c4  9813              LDR      r0,[sp,#0x4c]
0007c6  1a08              SUBS     r0,r1,r0
0007c8  9001              STR      r0,[sp,#4]
0007ca  f7fffffe          BL       __aeabi_ui2f
0007ce  9002              STR      r0,[sp,#8]
0007d0  e001              B        |L1.2006|
                  |L1.2002|
0007d2  e0aa              B        |L1.2346|
                  |L1.2004|
0007d4  e014              B        |L1.2048|
                  |L1.2006|
0007d6  991a              LDR      r1,[sp,#0x68]
0007d8  f7fffffe          BL       __aeabi_frsub
0007dc  9003              STR      r0,[sp,#0xc]
0007de  9918              LDR      r1,[sp,#0x60]
0007e0  f7fffffe          BL       __aeabi_fdiv
0007e4  9004              STR      r0,[sp,#0x10]
0007e6  f7fffffe          BL       __aeabi_f2uiz
0007ea  4934              LDR      r1,|L1.2236|
0007ec  6008              STR      r0,[r1,#0]  ; Y
;;;695    						   drawbigpoint(X,Y);
0007ee  4608              MOV      r0,r1
0007f0  6800              LDR      r0,[r0,#0]  ; Y
0007f2  b281              UXTH     r1,r0
0007f4  482e              LDR      r0,|L1.2224|
0007f6  6800              LDR      r0,[r0,#0]  ; X
0007f8  b2c0              UXTB     r0,r0
0007fa  f7fffffe          BL       drawbigpoint
0007fe  e094              B        |L1.2346|
                  |L1.2048|
;;;696    						 }
;;;697    						 else
;;;698    						 {
;;;699    						   xx=Ys_2-Ys_1;	//计算出Y1,Y2距离
000800  4833              LDR      r0,|L1.2256|
000802  6801              LDR      r1,[r0,#0]  ; Ys_2
000804  4831              LDR      r0,|L1.2252|
000806  6800              LDR      r0,[r0,#0]  ; Ys_1
000808  1a08              SUBS     r0,r1,r0
00080a  b280              UXTH     r0,r0
00080c  9013              STR      r0,[sp,#0x4c]
;;;700    						   hh=(float)xx/280;		//计算出X比例
00080e  9813              LDR      r0,[sp,#0x4c]
000810  f7fffffe          BL       __aeabi_ui2f
000814  4931              LDR      r1,|L1.2268|
000816  9004              STR      r0,[sp,#0x10]
000818  f7fffffe          BL       __aeabi_fdiv
00081c  9018              STR      r0,[sp,#0x60]
;;;701    						   xx=(float)((hh*320)-xx)/2;	//Y方向偏移量
00081e  9813              LDR      r0,[sp,#0x4c]
000820  f7fffffe          BL       __aeabi_ui2f
000824  492e              LDR      r1,|L1.2272|
000826  9002              STR      r0,[sp,#8]
000828  9818              LDR      r0,[sp,#0x60]
00082a  f7fffffe          BL       __aeabi_fmul
00082e  9001              STR      r0,[sp,#4]
000830  9902              LDR      r1,[sp,#8]
000832  f7fffffe          BL       __aeabi_fsub
000836  f04f4180          MOV      r1,#0x40000000
00083a  9003              STR      r0,[sp,#0xc]
00083c  f7fffffe          BL       __aeabi_fdiv
000840  9004              STR      r0,[sp,#0x10]
000842  f7fffffe          BL       __aeabi_f2uiz
000846  b280              UXTH     r0,r0
000848  9013              STR      r0,[sp,#0x4c]
;;;702    						   Y=(Y1-(Ys_1-xx))/hh;		  //计算坐标
00084a  4820              LDR      r0,|L1.2252|
00084c  6801              LDR      r1,[r0,#0]  ; Ys_1
00084e  9813              LDR      r0,[sp,#0x4c]
000850  1a08              SUBS     r0,r1,r0
000852  9001              STR      r0,[sp,#4]
000854  f7fffffe          BL       __aeabi_ui2f
000858  9002              STR      r0,[sp,#8]
00085a  9919              LDR      r1,[sp,#0x64]
00085c  f7fffffe          BL       __aeabi_frsub
000860  9003              STR      r0,[sp,#0xc]
000862  9918              LDR      r1,[sp,#0x60]
000864  f7fffffe          BL       __aeabi_fdiv
000868  9004              STR      r0,[sp,#0x10]
00086a  f7fffffe          BL       __aeabi_f2uiz
00086e  4913              LDR      r1,|L1.2236|
000870  6008              STR      r0,[r1,#0]  ; Y
;;;703    						   xx=Xs_3-Xs_1;	//计算出X1,X3距离
000872  4815              LDR      r0,|L1.2248|
000874  6800              LDR      r0,[r0,#0]  ; Xs_3
000876  4913              LDR      r1,|L1.2244|
000878  6809              LDR      r1,[r1,#0]  ; Xs_1
00087a  1a40              SUBS     r0,r0,r1
00087c  b280              UXTH     r0,r0
00087e  9013              STR      r0,[sp,#0x4c]
;;;704    						   hh=(float)xx/200;	//计算出X比例因子
000880  9813              LDR      r0,[sp,#0x4c]
000882  f7fffffe          BL       __aeabi_ui2f
000886  4913              LDR      r1,|L1.2260|
000888  9004              STR      r0,[sp,#0x10]
00088a  f7fffffe          BL       __aeabi_fdiv
00088e  9018              STR      r0,[sp,#0x60]
;;;705    						   xx=(float)((hh*240)-xx)/2;  //X方向偏移量
000890  9813              LDR      r0,[sp,#0x4c]
000892  f7fffffe          BL       __aeabi_ui2f
000896  4910              LDR      r1,|L1.2264|
000898  9002              STR      r0,[sp,#8]
00089a  9818              LDR      r0,[sp,#0x60]
00089c  f7fffffe          BL       __aeabi_fmul
0008a0  9001              STR      r0,[sp,#4]
0008a2  9902              LDR      r1,[sp,#8]
0008a4  f7fffffe          BL       __aeabi_fsub
0008a8  f04f4180          MOV      r1,#0x40000000
0008ac  9003              STR      r0,[sp,#0xc]
0008ae  e019              B        |L1.2276|
                  |L1.2224|
                          DCD      X
                  |L1.2228|
                          DCD      0x40010c0c
                  |L1.2232|
                          DCD      0x40010000
                  |L1.2236|
                          DCD      Y
                  |L1.2240|
                          DCD      ||dw||
                  |L1.2244|
                          DCD      Xs_1
                  |L1.2248|
                          DCD      Xs_3
                  |L1.2252|
                          DCD      Ys_1
                  |L1.2256|
                          DCD      Ys_2
                  |L1.2260|
                          DCD      0x43480000
                  |L1.2264|
                          DCD      0x43700000
                  |L1.2268|
                          DCD      0x438c0000
                  |L1.2272|
                          DCD      0x43a00000
                  |L1.2276|
0008e4  f7fffffe          BL       __aeabi_fdiv
0008e8  9004              STR      r0,[sp,#0x10]
0008ea  f7fffffe          BL       __aeabi_f2uiz
0008ee  b280              UXTH     r0,r0
0008f0  9013              STR      r0,[sp,#0x4c]
;;;706    						   X=(X1-(Xs_1-xx))/hh;	//计算坐标
0008f2  48ff              LDR      r0,|L1.3312|
0008f4  6801              LDR      r1,[r0,#0]  ; Xs_1
0008f6  9813              LDR      r0,[sp,#0x4c]
0008f8  1a08              SUBS     r0,r1,r0
0008fa  9001              STR      r0,[sp,#4]
0008fc  f7fffffe          BL       __aeabi_ui2f
000900  9002              STR      r0,[sp,#8]
000902  991a              LDR      r1,[sp,#0x68]
000904  f7fffffe          BL       __aeabi_frsub
000908  9003              STR      r0,[sp,#0xc]
00090a  9918              LDR      r1,[sp,#0x60]
00090c  f7fffffe          BL       __aeabi_fdiv
000910  9004              STR      r0,[sp,#0x10]
000912  f7fffffe          BL       __aeabi_f2uiz
000916  49f7              LDR      r1,|L1.3316|
000918  6008              STR      r0,[r1,#0]  ; X
;;;707    						   drawbigpoint(X,Y);
00091a  48f7              LDR      r0,|L1.3320|
00091c  6800              LDR      r0,[r0,#0]  ; Y
00091e  b281              UXTH     r1,r0
000920  48f4              LDR      r0,|L1.3316|
000922  6800              LDR      r0,[r0,#0]  ; X
000924  b2c0              UXTB     r0,r0
000926  f7fffffe          BL       drawbigpoint
                  |L1.2346|
;;;708    						 }
;;;709    						 
;;;710    					}
;;;711    			   		
;;;712    					if((Xs_2<Xs_4)&&(Ys_2<Ys_1))	//左上角为起始坐标时进入
00092a  48f4              LDR      r0,|L1.3324|
00092c  6801              LDR      r1,[r0,#0]  ; Xs_2
00092e  48f4              LDR      r0,|L1.3328|
000930  6800              LDR      r0,[r0,#0]  ; Xs_4
000932  4281              CMP      r1,r0
000934  d27d              BCS      |L1.2610|
000936  48f3              LDR      r0,|L1.3332|
000938  6800              LDR      r0,[r0,#0]  ; Ys_2
00093a  49f3              LDR      r1,|L1.3336|
00093c  6809              LDR      r1,[r1,#0]  ; Ys_1
00093e  4288              CMP      r0,r1
000940  d277              BCS      |L1.2610|
;;;713    					{
;;;714    						 if((Ys_2*5<Ys_1)&&(Xs_2*5<Xs_4))	//判断触摸方向
000942  48f0              LDR      r0,|L1.3332|
000944  6800              LDR      r0,[r0,#0]  ; Ys_2
000946  eb000080          ADD      r0,r0,r0,LSL #2
00094a  49ef              LDR      r1,|L1.3336|
00094c  6809              LDR      r1,[r1,#0]  ; Ys_1
00094e  4288              CMP      r0,r1
000950  d270              BCS      |L1.2612|
000952  48ea              LDR      r0,|L1.3324|
000954  6800              LDR      r0,[r0,#0]  ; Xs_2
000956  eb000080          ADD      r0,r0,r0,LSL #2
00095a  49e9              LDR      r1,|L1.3328|
00095c  6809              LDR      r1,[r1,#0]  ; Xs_4
00095e  4288              CMP      r0,r1
000960  d268              BCS      |L1.2612|
;;;715    						 {
;;;716    						   xx=Ys_1-Ys_2;	//计算出Y1,Y2距离
000962  48e9              LDR      r0,|L1.3336|
000964  6800              LDR      r0,[r0,#0]  ; Ys_1
000966  49e7              LDR      r1,|L1.3332|
000968  6809              LDR      r1,[r1,#0]  ; Ys_2
00096a  1a40              SUBS     r0,r0,r1
00096c  b280              UXTH     r0,r0
00096e  9013              STR      r0,[sp,#0x4c]
;;;717    						   hh=(float)xx/200;		//计算出X比例
000970  9813              LDR      r0,[sp,#0x4c]
000972  f7fffffe          BL       __aeabi_ui2f
000976  49e5              LDR      r1,|L1.3340|
000978  9004              STR      r0,[sp,#0x10]
00097a  f7fffffe          BL       __aeabi_fdiv
00097e  9018              STR      r0,[sp,#0x60]
;;;718    						   xx=(float)((hh*240)-xx)/2;	//Y方向偏移量
000980  9813              LDR      r0,[sp,#0x4c]
000982  f7fffffe          BL       __aeabi_ui2f
000986  49e2              LDR      r1,|L1.3344|
000988  9002              STR      r0,[sp,#8]
00098a  9818              LDR      r0,[sp,#0x60]
00098c  f7fffffe          BL       __aeabi_fmul
000990  9001              STR      r0,[sp,#4]
000992  9902              LDR      r1,[sp,#8]
000994  f7fffffe          BL       __aeabi_fsub
000998  f04f4180          MOV      r1,#0x40000000
00099c  9003              STR      r0,[sp,#0xc]
00099e  f7fffffe          BL       __aeabi_fdiv
0009a2  9004              STR      r0,[sp,#0x10]
0009a4  f7fffffe          BL       __aeabi_f2uiz
0009a8  b280              UXTH     r0,r0
0009aa  9013              STR      r0,[sp,#0x4c]
;;;719    						   X=240-(Y1-(Ys_2-xx))/hh;		  //计算坐标
0009ac  48d5              LDR      r0,|L1.3332|
0009ae  6801              LDR      r1,[r0,#0]  ; Ys_2
0009b0  9813              LDR      r0,[sp,#0x4c]
0009b2  1a08              SUBS     r0,r1,r0
0009b4  9000              STR      r0,[sp,#0]
0009b6  f7fffffe          BL       __aeabi_ui2f
0009ba  9001              STR      r0,[sp,#4]
0009bc  9919              LDR      r1,[sp,#0x64]
0009be  f7fffffe          BL       __aeabi_frsub
0009c2  9002              STR      r0,[sp,#8]
0009c4  9918              LDR      r1,[sp,#0x60]
0009c6  f7fffffe          BL       __aeabi_fdiv
0009ca  49d1              LDR      r1,|L1.3344|
0009cc  9003              STR      r0,[sp,#0xc]
0009ce  f7fffffe          BL       __aeabi_frsub
0009d2  9004              STR      r0,[sp,#0x10]
0009d4  f7fffffe          BL       __aeabi_f2uiz
0009d8  49c6              LDR      r1,|L1.3316|
0009da  6008              STR      r0,[r1,#0]  ; X
;;;720    						   xx=Xs_4-Xs_2;	//计算出X2,X4距离
0009dc  48c8              LDR      r0,|L1.3328|
0009de  6800              LDR      r0,[r0,#0]  ; Xs_4
0009e0  49c6              LDR      r1,|L1.3324|
0009e2  6809              LDR      r1,[r1,#0]  ; Xs_2
0009e4  1a40              SUBS     r0,r0,r1
0009e6  b280              UXTH     r0,r0
0009e8  9013              STR      r0,[sp,#0x4c]
;;;721    						   hh=(float)xx/280;	//计算出X比例因子
0009ea  9813              LDR      r0,[sp,#0x4c]
0009ec  f7fffffe          BL       __aeabi_ui2f
0009f0  49c8              LDR      r1,|L1.3348|
0009f2  9004              STR      r0,[sp,#0x10]
0009f4  f7fffffe          BL       __aeabi_fdiv
0009f8  9018              STR      r0,[sp,#0x60]
;;;722    						   xx=(float)((hh*320)-xx)/2;  //X方向偏移量
0009fa  9813              LDR      r0,[sp,#0x4c]
0009fc  f7fffffe          BL       __aeabi_ui2f
000a00  49c5              LDR      r1,|L1.3352|
000a02  9002              STR      r0,[sp,#8]
000a04  9818              LDR      r0,[sp,#0x60]
000a06  f7fffffe          BL       __aeabi_fmul
000a0a  9001              STR      r0,[sp,#4]
000a0c  9902              LDR      r1,[sp,#8]
000a0e  f7fffffe          BL       __aeabi_fsub
000a12  f04f4180          MOV      r1,#0x40000000
000a16  9003              STR      r0,[sp,#0xc]
000a18  f7fffffe          BL       __aeabi_fdiv
000a1c  9004              STR      r0,[sp,#0x10]
000a1e  f7fffffe          BL       __aeabi_f2uiz
000a22  b280              UXTH     r0,r0
000a24  9013              STR      r0,[sp,#0x4c]
;;;723    						   Y=(X1-(Xs_2-xx))/hh;	//计算坐标
000a26  48b5              LDR      r0,|L1.3324|
000a28  6801              LDR      r1,[r0,#0]  ; Xs_2
000a2a  9813              LDR      r0,[sp,#0x4c]
000a2c  1a08              SUBS     r0,r1,r0
000a2e  9001              STR      r0,[sp,#4]
000a30  e001              B        |L1.2614|
                  |L1.2610|
000a32  e096              B        |L1.2914|
                  |L1.2612|
000a34  e017              B        |L1.2662|
                  |L1.2614|
000a36  f7fffffe          BL       __aeabi_ui2f
000a3a  9002              STR      r0,[sp,#8]
000a3c  991a              LDR      r1,[sp,#0x68]
000a3e  f7fffffe          BL       __aeabi_frsub
000a42  9003              STR      r0,[sp,#0xc]
000a44  9918              LDR      r1,[sp,#0x60]
000a46  f7fffffe          BL       __aeabi_fdiv
000a4a  9004              STR      r0,[sp,#0x10]
000a4c  f7fffffe          BL       __aeabi_f2uiz
000a50  49a9              LDR      r1,|L1.3320|
000a52  6008              STR      r0,[r1,#0]  ; Y
;;;724    						   drawbigpoint(X,Y);
000a54  4608              MOV      r0,r1
000a56  6800              LDR      r0,[r0,#0]  ; Y
000a58  b281              UXTH     r1,r0
000a5a  48a6              LDR      r0,|L1.3316|
000a5c  6800              LDR      r0,[r0,#0]  ; X
000a5e  b2c0              UXTB     r0,r0
000a60  f7fffffe          BL       drawbigpoint
000a64  e07d              B        |L1.2914|
                  |L1.2662|
;;;725    						 }
;;;726    						 else
;;;727    						 {
;;;728    						   xx=Ys_1-Ys_2;	//计算出Y1,Y2距离
000a66  48a8              LDR      r0,|L1.3336|
000a68  6800              LDR      r0,[r0,#0]  ; Ys_1
000a6a  49a6              LDR      r1,|L1.3332|
000a6c  6809              LDR      r1,[r1,#0]  ; Ys_2
000a6e  1a40              SUBS     r0,r0,r1
000a70  b280              UXTH     r0,r0
000a72  9013              STR      r0,[sp,#0x4c]
;;;729    						   hh=(float)xx/280;		//计算出X比例
000a74  9813              LDR      r0,[sp,#0x4c]
000a76  f7fffffe          BL       __aeabi_ui2f
000a7a  49a6              LDR      r1,|L1.3348|
000a7c  9004              STR      r0,[sp,#0x10]
000a7e  f7fffffe          BL       __aeabi_fdiv
000a82  9018              STR      r0,[sp,#0x60]
;;;730    						   xx=(float)((hh*320)-xx)/2;	//Y方向偏移量
000a84  9813              LDR      r0,[sp,#0x4c]
000a86  f7fffffe          BL       __aeabi_ui2f
000a8a  49a3              LDR      r1,|L1.3352|
000a8c  9002              STR      r0,[sp,#8]
000a8e  9818              LDR      r0,[sp,#0x60]
000a90  f7fffffe          BL       __aeabi_fmul
000a94  9001              STR      r0,[sp,#4]
000a96  9902              LDR      r1,[sp,#8]
000a98  f7fffffe          BL       __aeabi_fsub
000a9c  f04f4180          MOV      r1,#0x40000000
000aa0  9003              STR      r0,[sp,#0xc]
000aa2  f7fffffe          BL       __aeabi_fdiv
000aa6  9004              STR      r0,[sp,#0x10]
000aa8  f7fffffe          BL       __aeabi_f2uiz
000aac  b280              UXTH     r0,r0
000aae  9013              STR      r0,[sp,#0x4c]
;;;731    						   Y=320-(Y1-(Ys_2-xx))/hh;		  //计算坐标
000ab0  4894              LDR      r0,|L1.3332|
000ab2  6801              LDR      r1,[r0,#0]  ; Ys_2
000ab4  9813              LDR      r0,[sp,#0x4c]
000ab6  1a08              SUBS     r0,r1,r0
000ab8  9000              STR      r0,[sp,#0]
000aba  f7fffffe          BL       __aeabi_ui2f
000abe  9001              STR      r0,[sp,#4]
000ac0  9919              LDR      r1,[sp,#0x64]
000ac2  f7fffffe          BL       __aeabi_frsub
000ac6  9002              STR      r0,[sp,#8]
000ac8  9918              LDR      r1,[sp,#0x60]
000aca  f7fffffe          BL       __aeabi_fdiv
000ace  4992              LDR      r1,|L1.3352|
000ad0  9003              STR      r0,[sp,#0xc]
000ad2  f7fffffe          BL       __aeabi_frsub
000ad6  9004              STR      r0,[sp,#0x10]
000ad8  f7fffffe          BL       __aeabi_f2uiz
000adc  4986              LDR      r1,|L1.3320|
000ade  6008              STR      r0,[r1,#0]  ; Y
;;;732    						   xx=Xs_4-Xs_2;	//计算出X2,X4距离
000ae0  4887              LDR      r0,|L1.3328|
000ae2  6801              LDR      r1,[r0,#0]  ; Xs_4
000ae4  4885              LDR      r0,|L1.3324|
000ae6  6800              LDR      r0,[r0,#0]  ; Xs_2
000ae8  1a08              SUBS     r0,r1,r0
000aea  b280              UXTH     r0,r0
000aec  9013              STR      r0,[sp,#0x4c]
;;;733    						   hh=(float)xx/200;	//计算出X比例因子
000aee  9813              LDR      r0,[sp,#0x4c]
000af0  f7fffffe          BL       __aeabi_ui2f
000af4  4985              LDR      r1,|L1.3340|
000af6  9004              STR      r0,[sp,#0x10]
000af8  f7fffffe          BL       __aeabi_fdiv
000afc  9018              STR      r0,[sp,#0x60]
;;;734    						   xx=(float)((hh*240)-xx)/2;  //X方向偏移量
000afe  9813              LDR      r0,[sp,#0x4c]
000b00  f7fffffe          BL       __aeabi_ui2f
000b04  4982              LDR      r1,|L1.3344|
000b06  9002              STR      r0,[sp,#8]
000b08  9818              LDR      r0,[sp,#0x60]
000b0a  f7fffffe          BL       __aeabi_fmul
000b0e  9001              STR      r0,[sp,#4]
000b10  9902              LDR      r1,[sp,#8]
000b12  f7fffffe          BL       __aeabi_fsub
000b16  f04f4180          MOV      r1,#0x40000000
000b1a  9003              STR      r0,[sp,#0xc]
000b1c  f7fffffe          BL       __aeabi_fdiv
000b20  9004              STR      r0,[sp,#0x10]
000b22  f7fffffe          BL       __aeabi_f2uiz
000b26  b280              UXTH     r0,r0
000b28  9013              STR      r0,[sp,#0x4c]
;;;735    						   X=(X1-(Xs_2-xx))/hh;	//计算坐标
000b2a  4874              LDR      r0,|L1.3324|
000b2c  6801              LDR      r1,[r0,#0]  ; Xs_2
000b2e  9813              LDR      r0,[sp,#0x4c]
000b30  1a08              SUBS     r0,r1,r0
000b32  9001              STR      r0,[sp,#4]
000b34  f7fffffe          BL       __aeabi_ui2f
000b38  9002              STR      r0,[sp,#8]
000b3a  991a              LDR      r1,[sp,#0x68]
000b3c  f7fffffe          BL       __aeabi_frsub
000b40  9003              STR      r0,[sp,#0xc]
000b42  9918              LDR      r1,[sp,#0x60]
000b44  f7fffffe          BL       __aeabi_fdiv
000b48  9004              STR      r0,[sp,#0x10]
000b4a  f7fffffe          BL       __aeabi_f2uiz
000b4e  4969              LDR      r1,|L1.3316|
000b50  6008              STR      r0,[r1,#0]  ; X
;;;736    						   drawbigpoint(X,Y);
000b52  4869              LDR      r0,|L1.3320|
000b54  6800              LDR      r0,[r0,#0]  ; Y
000b56  b281              UXTH     r1,r0
000b58  4866              LDR      r0,|L1.3316|
000b5a  6800              LDR      r0,[r0,#0]  ; X
000b5c  b2c0              UXTB     r0,r0
000b5e  f7fffffe          BL       drawbigpoint
                  |L1.2914|
;;;737    						 }
;;;738    					}
;;;739    
;;;740    			   		if((Xs_3<Xs_1)&&(Ys_3<Ys_4))	//右下角为起始坐标时进入
000b62  486e              LDR      r0,|L1.3356|
000b64  6800              LDR      r0,[r0,#0]  ; Xs_3
000b66  4962              LDR      r1,|L1.3312|
000b68  6809              LDR      r1,[r1,#0]  ; Xs_1
000b6a  4288              CMP      r0,r1
000b6c  d27d              BCS      |L1.3178|
000b6e  486c              LDR      r0,|L1.3360|
000b70  6800              LDR      r0,[r0,#0]  ; Ys_3
000b72  496c              LDR      r1,|L1.3364|
000b74  6809              LDR      r1,[r1,#0]  ; Ys_4
000b76  4288              CMP      r0,r1
000b78  d277              BCS      |L1.3178|
;;;741    					{
;;;742    						 if((Ys_3<Ys_4)&&(Xs_3<Xs_1))	//判断触摸方向
000b7a  4869              LDR      r0,|L1.3360|
000b7c  6800              LDR      r0,[r0,#0]  ; Ys_3
000b7e  4969              LDR      r1,|L1.3364|
000b80  6809              LDR      r1,[r1,#0]  ; Ys_4
000b82  4288              CMP      r0,r1
000b84  d272              BCS      |L1.3180|
000b86  4865              LDR      r0,|L1.3356|
000b88  6800              LDR      r0,[r0,#0]  ; Xs_3
000b8a  4959              LDR      r1,|L1.3312|
000b8c  6809              LDR      r1,[r1,#0]  ; Xs_1
000b8e  4288              CMP      r0,r1
000b90  d26c              BCS      |L1.3180|
;;;743    						 {
;;;744    						   xx=Ys_4-Ys_3;	//计算出Y3,Y4距离
000b92  4864              LDR      r0,|L1.3364|
000b94  6800              LDR      r0,[r0,#0]  ; Ys_4
000b96  4962              LDR      r1,|L1.3360|
000b98  6809              LDR      r1,[r1,#0]  ; Ys_3
000b9a  1a40              SUBS     r0,r0,r1
000b9c  b280              UXTH     r0,r0
000b9e  9013              STR      r0,[sp,#0x4c]
;;;745    						   hh=(float)xx/200;		//计算出X比例
000ba0  9813              LDR      r0,[sp,#0x4c]
000ba2  f7fffffe          BL       __aeabi_ui2f
000ba6  4959              LDR      r1,|L1.3340|
000ba8  9004              STR      r0,[sp,#0x10]
000baa  f7fffffe          BL       __aeabi_fdiv
000bae  9018              STR      r0,[sp,#0x60]
;;;746    						   xx=(float)((hh*240)-xx)/2;	//Y方向偏移量
000bb0  9813              LDR      r0,[sp,#0x4c]
000bb2  f7fffffe          BL       __aeabi_ui2f
000bb6  4956              LDR      r1,|L1.3344|
000bb8  9002              STR      r0,[sp,#8]
000bba  9818              LDR      r0,[sp,#0x60]
000bbc  f7fffffe          BL       __aeabi_fmul
000bc0  9001              STR      r0,[sp,#4]
000bc2  9902              LDR      r1,[sp,#8]
000bc4  f7fffffe          BL       __aeabi_fsub
000bc8  f04f4180          MOV      r1,#0x40000000
000bcc  9003              STR      r0,[sp,#0xc]
000bce  f7fffffe          BL       __aeabi_fdiv
000bd2  9004              STR      r0,[sp,#0x10]
000bd4  f7fffffe          BL       __aeabi_f2uiz
000bd8  b280              UXTH     r0,r0
000bda  9013              STR      r0,[sp,#0x4c]
;;;747    						   X=(Y1-(Ys_3-xx))/hh;		  //计算坐标
000bdc  4850              LDR      r0,|L1.3360|
000bde  6801              LDR      r1,[r0,#0]  ; Ys_3
000be0  9813              LDR      r0,[sp,#0x4c]
000be2  1a08              SUBS     r0,r1,r0
000be4  9001              STR      r0,[sp,#4]
000be6  f7fffffe          BL       __aeabi_ui2f
000bea  9002              STR      r0,[sp,#8]
000bec  9919              LDR      r1,[sp,#0x64]
000bee  f7fffffe          BL       __aeabi_frsub
000bf2  9003              STR      r0,[sp,#0xc]
000bf4  9918              LDR      r1,[sp,#0x60]
000bf6  f7fffffe          BL       __aeabi_fdiv
000bfa  9004              STR      r0,[sp,#0x10]
000bfc  f7fffffe          BL       __aeabi_f2uiz
000c00  493c              LDR      r1,|L1.3316|
000c02  6008              STR      r0,[r1,#0]  ; X
;;;748    						   xx=Xs_1-Xs_3;	//计算出X1,X3距离
000c04  483a              LDR      r0,|L1.3312|
000c06  6800              LDR      r0,[r0,#0]  ; Xs_1
000c08  4944              LDR      r1,|L1.3356|
000c0a  6809              LDR      r1,[r1,#0]  ; Xs_3
000c0c  1a40              SUBS     r0,r0,r1
000c0e  b280              UXTH     r0,r0
000c10  9013              STR      r0,[sp,#0x4c]
;;;749    						   hh=(float)xx/280;	//计算出X比例因子
000c12  9813              LDR      r0,[sp,#0x4c]
000c14  f7fffffe          BL       __aeabi_ui2f
000c18  493e              LDR      r1,|L1.3348|
000c1a  9004              STR      r0,[sp,#0x10]
000c1c  f7fffffe          BL       __aeabi_fdiv
000c20  9018              STR      r0,[sp,#0x60]
;;;750    						   xx=(float)((hh*320)-xx)/2;  //X方向偏移量
000c22  9813              LDR      r0,[sp,#0x4c]
000c24  f7fffffe          BL       __aeabi_ui2f
000c28  493b              LDR      r1,|L1.3352|
000c2a  9002              STR      r0,[sp,#8]
000c2c  9818              LDR      r0,[sp,#0x60]
000c2e  f7fffffe          BL       __aeabi_fmul
000c32  9001              STR      r0,[sp,#4]
000c34  9902              LDR      r1,[sp,#8]
000c36  f7fffffe          BL       __aeabi_fsub
000c3a  f04f4180          MOV      r1,#0x40000000
000c3e  9003              STR      r0,[sp,#0xc]
000c40  f7fffffe          BL       __aeabi_fdiv
000c44  9004              STR      r0,[sp,#0x10]
000c46  f7fffffe          BL       __aeabi_f2uiz
000c4a  b280              UXTH     r0,r0
000c4c  9013              STR      r0,[sp,#0x4c]
;;;751    						   Y=320-(X1-(Xs_3-xx))/hh;	//计算坐标
000c4e  4833              LDR      r0,|L1.3356|
000c50  6801              LDR      r1,[r0,#0]  ; Xs_3
000c52  9813              LDR      r0,[sp,#0x4c]
000c54  1a08              SUBS     r0,r1,r0
000c56  9000              STR      r0,[sp,#0]
000c58  f7fffffe          BL       __aeabi_ui2f
000c5c  9001              STR      r0,[sp,#4]
000c5e  991a              LDR      r1,[sp,#0x68]
000c60  f7fffffe          BL       __aeabi_frsub
000c64  9002              STR      r0,[sp,#8]
000c66  9918              LDR      r1,[sp,#0x60]
000c68  e001              B        |L1.3182|
                  |L1.3178|
000c6a  e0af              B        |L1.3532|
                  |L1.3180|
000c6c  e013              B        |L1.3222|
                  |L1.3182|
000c6e  f7fffffe          BL       __aeabi_fdiv
000c72  4929              LDR      r1,|L1.3352|
000c74  9003              STR      r0,[sp,#0xc]
000c76  f7fffffe          BL       __aeabi_frsub
000c7a  9004              STR      r0,[sp,#0x10]
000c7c  f7fffffe          BL       __aeabi_f2uiz
000c80  491d              LDR      r1,|L1.3320|
000c82  6008              STR      r0,[r1,#0]  ; Y
;;;752    						   drawbigpoint(X,Y);
000c84  4608              MOV      r0,r1
000c86  6800              LDR      r0,[r0,#0]  ; Y
000c88  b281              UXTH     r1,r0
000c8a  481a              LDR      r0,|L1.3316|
000c8c  6800              LDR      r0,[r0,#0]  ; X
000c8e  b2c0              UXTB     r0,r0
000c90  f7fffffe          BL       drawbigpoint
000c94  e09a              B        |L1.3532|
                  |L1.3222|
;;;753    						 }
;;;754    						 else
;;;755    						 {
;;;756    						   xx=Ys_4-Ys_3;	//计算出Y3,Y4距离
000c96  4823              LDR      r0,|L1.3364|
000c98  6800              LDR      r0,[r0,#0]  ; Ys_4
000c9a  4921              LDR      r1,|L1.3360|
000c9c  6809              LDR      r1,[r1,#0]  ; Ys_3
000c9e  1a40              SUBS     r0,r0,r1
000ca0  b280              UXTH     r0,r0
000ca2  9013              STR      r0,[sp,#0x4c]
;;;757    						   hh=(float)xx/280;		//计算出X比例
000ca4  9813              LDR      r0,[sp,#0x4c]
000ca6  f7fffffe          BL       __aeabi_ui2f
000caa  491a              LDR      r1,|L1.3348|
000cac  9004              STR      r0,[sp,#0x10]
000cae  f7fffffe          BL       __aeabi_fdiv
000cb2  9018              STR      r0,[sp,#0x60]
;;;758    						   xx=(float)((hh*320)-xx)/2;	//Y方向偏移量
000cb4  9813              LDR      r0,[sp,#0x4c]
000cb6  f7fffffe          BL       __aeabi_ui2f
000cba  4917              LDR      r1,|L1.3352|
000cbc  9002              STR      r0,[sp,#8]
000cbe  9818              LDR      r0,[sp,#0x60]
000cc0  f7fffffe          BL       __aeabi_fmul
000cc4  9001              STR      r0,[sp,#4]
000cc6  9902              LDR      r1,[sp,#8]
000cc8  f7fffffe          BL       __aeabi_fsub
000ccc  f04f4180          MOV      r1,#0x40000000
000cd0  9003              STR      r0,[sp,#0xc]
000cd2  f7fffffe          BL       __aeabi_fdiv
000cd6  9004              STR      r0,[sp,#0x10]
000cd8  f7fffffe          BL       __aeabi_f2uiz
000cdc  b280              UXTH     r0,r0
000cde  9013              STR      r0,[sp,#0x4c]
;;;759    						   Y=(Y1-(Ys_3-xx))/hh;		  //计算坐标
000ce0  480f              LDR      r0,|L1.3360|
000ce2  6801              LDR      r1,[r0,#0]  ; Ys_3
000ce4  9813              LDR      r0,[sp,#0x4c]
000ce6  1a08              SUBS     r0,r1,r0
000ce8  9001              STR      r0,[sp,#4]
000cea  f7fffffe          BL       __aeabi_ui2f
000cee  e01b              B        |L1.3368|
                  |L1.3312|
                          DCD      Xs_1
                  |L1.3316|
                          DCD      X
                  |L1.3320|
                          DCD      Y
                  |L1.3324|
                          DCD      Xs_2
                  |L1.3328|
                          DCD      Xs_4
                  |L1.3332|
                          DCD      Ys_2
                  |L1.3336|
                          DCD      Ys_1
                  |L1.3340|
                          DCD      0x43480000
                  |L1.3344|
                          DCD      0x43700000
                  |L1.3348|
                          DCD      0x438c0000
                  |L1.3352|
                          DCD      0x43a00000
                  |L1.3356|
                          DCD      Xs_3
                  |L1.3360|
                          DCD      Ys_3
                  |L1.3364|
                          DCD      Ys_4
                  |L1.3368|
000d28  9002              STR      r0,[sp,#8]
000d2a  9919              LDR      r1,[sp,#0x64]
000d2c  f7fffffe          BL       __aeabi_frsub
000d30  9003              STR      r0,[sp,#0xc]
000d32  9918              LDR      r1,[sp,#0x60]
000d34  f7fffffe          BL       __aeabi_fdiv
000d38  9004              STR      r0,[sp,#0x10]
000d3a  f7fffffe          BL       __aeabi_f2uiz
000d3e  49fe              LDR      r1,|L1.4408|
000d40  6008              STR      r0,[r1,#0]  ; Y
;;;760    						   xx=Xs_1-Xs_3;	//计算出X1,X3距离
000d42  48fe              LDR      r0,|L1.4412|
000d44  6800              LDR      r0,[r0,#0]  ; Xs_1
000d46  49fe              LDR      r1,|L1.4416|
000d48  6809              LDR      r1,[r1,#0]  ; Xs_3
000d4a  1a40              SUBS     r0,r0,r1
000d4c  b280              UXTH     r0,r0
000d4e  9013              STR      r0,[sp,#0x4c]
;;;761    						   hh=(float)xx/200;	//计算出X比例因子
000d50  9813              LDR      r0,[sp,#0x4c]
000d52  f7fffffe          BL       __aeabi_ui2f
000d56  49fb              LDR      r1,|L1.4420|
000d58  9004              STR      r0,[sp,#0x10]
000d5a  f7fffffe          BL       __aeabi_fdiv
000d5e  9018              STR      r0,[sp,#0x60]
;;;762    						   xx=(float)((hh*240)-xx)/2;  //X方向偏移量
000d60  9813              LDR      r0,[sp,#0x4c]
000d62  f7fffffe          BL       __aeabi_ui2f
000d66  49f8              LDR      r1,|L1.4424|
000d68  9002              STR      r0,[sp,#8]
000d6a  9818              LDR      r0,[sp,#0x60]
000d6c  f7fffffe          BL       __aeabi_fmul
000d70  9001              STR      r0,[sp,#4]
000d72  9902              LDR      r1,[sp,#8]
000d74  f7fffffe          BL       __aeabi_fsub
000d78  f04f4180          MOV      r1,#0x40000000
000d7c  9003              STR      r0,[sp,#0xc]
000d7e  f7fffffe          BL       __aeabi_fdiv
000d82  9004              STR      r0,[sp,#0x10]
000d84  f7fffffe          BL       __aeabi_f2uiz
000d88  b280              UXTH     r0,r0
000d8a  9013              STR      r0,[sp,#0x4c]
;;;763    						   X=240-(X1-(Xs_3-xx))/hh;	//计算坐标
000d8c  48ec              LDR      r0,|L1.4416|
000d8e  6801              LDR      r1,[r0,#0]  ; Xs_3
000d90  9813              LDR      r0,[sp,#0x4c]
000d92  1a08              SUBS     r0,r1,r0
000d94  9000              STR      r0,[sp,#0]
000d96  f7fffffe          BL       __aeabi_ui2f
000d9a  9001              STR      r0,[sp,#4]
000d9c  991a              LDR      r1,[sp,#0x68]
000d9e  f7fffffe          BL       __aeabi_frsub
000da2  9002              STR      r0,[sp,#8]
000da4  9918              LDR      r1,[sp,#0x60]
000da6  f7fffffe          BL       __aeabi_fdiv
000daa  49e7              LDR      r1,|L1.4424|
000dac  9003              STR      r0,[sp,#0xc]
000dae  f7fffffe          BL       __aeabi_frsub
000db2  9004              STR      r0,[sp,#0x10]
000db4  f7fffffe          BL       __aeabi_f2uiz
000db8  49e4              LDR      r1,|L1.4428|
000dba  6008              STR      r0,[r1,#0]  ; X
;;;764    						   drawbigpoint(X,Y);
000dbc  48de              LDR      r0,|L1.4408|
000dbe  6800              LDR      r0,[r0,#0]  ; Y
000dc0  b281              UXTH     r1,r0
000dc2  48e2              LDR      r0,|L1.4428|
000dc4  6800              LDR      r0,[r0,#0]  ; X
000dc6  b2c0              UXTB     r0,r0
000dc8  f7fffffe          BL       drawbigpoint
                  |L1.3532|
;;;765    						 }
;;;766    					}
;;;767    
;;;768    			   		if((Xs_4<Xs_2)&&(Ys_4<Ys_3))	//右上角为起始坐标时进入
000dcc  48e0              LDR      r0,|L1.4432|
000dce  6800              LDR      r0,[r0,#0]  ; Xs_4
000dd0  49e0              LDR      r1,|L1.4436|
000dd2  6809              LDR      r1,[r1,#0]  ; Xs_2
000dd4  4288              CMP      r0,r1
000dd6  d27d              BCS      |L1.3796|
000dd8  48df              LDR      r0,|L1.4440|
000dda  6801              LDR      r1,[r0,#0]  ; Ys_4
000ddc  48df              LDR      r0,|L1.4444|
000dde  6800              LDR      r0,[r0,#0]  ; Ys_3
000de0  4281              CMP      r1,r0
000de2  d277              BCS      |L1.3796|
;;;769    					{
;;;770    						 if((Ys_4<Ys_3)&&(Xs_4<Xs_2))	//判断触摸方向
000de4  48dc              LDR      r0,|L1.4440|
000de6  6801              LDR      r1,[r0,#0]  ; Ys_4
000de8  48dc              LDR      r0,|L1.4444|
000dea  6800              LDR      r0,[r0,#0]  ; Ys_3
000dec  4281              CMP      r1,r0
000dee  d272              BCS      |L1.3798|
000df0  48d7              LDR      r0,|L1.4432|
000df2  6801              LDR      r1,[r0,#0]  ; Xs_4
000df4  48d7              LDR      r0,|L1.4436|
000df6  6800              LDR      r0,[r0,#0]  ; Xs_2
000df8  4281              CMP      r1,r0
000dfa  d26c              BCS      |L1.3798|
;;;771    						 {
;;;772    						   xx=Ys_3-Ys_4;	//计算出Y3,Y4距离
000dfc  48d7              LDR      r0,|L1.4444|
000dfe  6801              LDR      r1,[r0,#0]  ; Ys_3
000e00  48d5              LDR      r0,|L1.4440|
000e02  6800              LDR      r0,[r0,#0]  ; Ys_4
000e04  1a08              SUBS     r0,r1,r0
000e06  b280              UXTH     r0,r0
000e08  9013              STR      r0,[sp,#0x4c]
;;;773    						   hh=(float)xx/200;		//计算出X比例
000e0a  9813              LDR      r0,[sp,#0x4c]
000e0c  f7fffffe          BL       __aeabi_ui2f
000e10  49cc              LDR      r1,|L1.4420|
000e12  9004              STR      r0,[sp,#0x10]
000e14  f7fffffe          BL       __aeabi_fdiv
000e18  9018              STR      r0,[sp,#0x60]
;;;774    						   xx=(float)((hh*240)-xx)/2;	//Y方向偏移量
000e1a  9813              LDR      r0,[sp,#0x4c]
000e1c  f7fffffe          BL       __aeabi_ui2f
000e20  49c9              LDR      r1,|L1.4424|
000e22  9002              STR      r0,[sp,#8]
000e24  9818              LDR      r0,[sp,#0x60]
000e26  f7fffffe          BL       __aeabi_fmul
000e2a  9001              STR      r0,[sp,#4]
000e2c  9902              LDR      r1,[sp,#8]
000e2e  f7fffffe          BL       __aeabi_fsub
000e32  f04f4180          MOV      r1,#0x40000000
000e36  9003              STR      r0,[sp,#0xc]
000e38  f7fffffe          BL       __aeabi_fdiv
000e3c  9004              STR      r0,[sp,#0x10]
000e3e  f7fffffe          BL       __aeabi_f2uiz
000e42  b280              UXTH     r0,r0
000e44  9013              STR      r0,[sp,#0x4c]
;;;775    						   X=240-(Y1-(Ys_4-xx))/hh;		  //计算坐标
000e46  48c4              LDR      r0,|L1.4440|
000e48  6801              LDR      r1,[r0,#0]  ; Ys_4
000e4a  9813              LDR      r0,[sp,#0x4c]
000e4c  1a08              SUBS     r0,r1,r0
000e4e  9000              STR      r0,[sp,#0]
000e50  f7fffffe          BL       __aeabi_ui2f
000e54  9001              STR      r0,[sp,#4]
000e56  9919              LDR      r1,[sp,#0x64]
000e58  f7fffffe          BL       __aeabi_frsub
000e5c  9002              STR      r0,[sp,#8]
000e5e  9918              LDR      r1,[sp,#0x60]
000e60  f7fffffe          BL       __aeabi_fdiv
000e64  49b8              LDR      r1,|L1.4424|
000e66  9003              STR      r0,[sp,#0xc]
000e68  f7fffffe          BL       __aeabi_frsub
000e6c  9004              STR      r0,[sp,#0x10]
000e6e  f7fffffe          BL       __aeabi_f2uiz
000e72  49b6              LDR      r1,|L1.4428|
000e74  6008              STR      r0,[r1,#0]  ; X
;;;776    						   xx=Xs_2-Xs_4;	//计算出X2,X4距离
000e76  48b7              LDR      r0,|L1.4436|
000e78  6801              LDR      r1,[r0,#0]  ; Xs_2
000e7a  48b5              LDR      r0,|L1.4432|
000e7c  6800              LDR      r0,[r0,#0]  ; Xs_4
000e7e  1a08              SUBS     r0,r1,r0
000e80  b280              UXTH     r0,r0
000e82  9013              STR      r0,[sp,#0x4c]
;;;777    						   hh=(float)xx/280;	//计算出X比例因子
000e84  9813              LDR      r0,[sp,#0x4c]
000e86  f7fffffe          BL       __aeabi_ui2f
000e8a  49b5              LDR      r1,|L1.4448|
000e8c  9004              STR      r0,[sp,#0x10]
000e8e  f7fffffe          BL       __aeabi_fdiv
000e92  9018              STR      r0,[sp,#0x60]
;;;778    						   xx=(float)((hh*320)-xx)/2;  //X方向偏移量
000e94  9813              LDR      r0,[sp,#0x4c]
000e96  f7fffffe          BL       __aeabi_ui2f
000e9a  49b2              LDR      r1,|L1.4452|
000e9c  9002              STR      r0,[sp,#8]
000e9e  9818              LDR      r0,[sp,#0x60]
000ea0  f7fffffe          BL       __aeabi_fmul
000ea4  9001              STR      r0,[sp,#4]
000ea6  9902              LDR      r1,[sp,#8]
000ea8  f7fffffe          BL       __aeabi_fsub
000eac  f04f4180          MOV      r1,#0x40000000
000eb0  9003              STR      r0,[sp,#0xc]
000eb2  f7fffffe          BL       __aeabi_fdiv
000eb6  9004              STR      r0,[sp,#0x10]
000eb8  f7fffffe          BL       __aeabi_f2uiz
000ebc  b280              UXTH     r0,r0
000ebe  9013              STR      r0,[sp,#0x4c]
;;;779    						   Y=320-(X1-(Xs_4-xx))/hh;	//计算坐标
000ec0  48a3              LDR      r0,|L1.4432|
000ec2  6801              LDR      r1,[r0,#0]  ; Xs_4
000ec4  9813              LDR      r0,[sp,#0x4c]
000ec6  1a08              SUBS     r0,r1,r0
000ec8  9000              STR      r0,[sp,#0]
000eca  f7fffffe          BL       __aeabi_ui2f
000ece  9001              STR      r0,[sp,#4]
000ed0  991a              LDR      r1,[sp,#0x68]
000ed2  e001              B        |L1.3800|
                  |L1.3796|
000ed4  e09a              B        |L1.4108|
                  |L1.3798|
000ed6  e017              B        |L1.3848|
                  |L1.3800|
000ed8  f7fffffe          BL       __aeabi_frsub
000edc  9002              STR      r0,[sp,#8]
000ede  9918              LDR      r1,[sp,#0x60]
000ee0  f7fffffe          BL       __aeabi_fdiv
000ee4  499f              LDR      r1,|L1.4452|
000ee6  9003              STR      r0,[sp,#0xc]
000ee8  f7fffffe          BL       __aeabi_frsub
000eec  9004              STR      r0,[sp,#0x10]
000eee  f7fffffe          BL       __aeabi_f2uiz
000ef2  4991              LDR      r1,|L1.4408|
000ef4  6008              STR      r0,[r1,#0]  ; Y
;;;780    						   drawbigpoint(X,Y);
000ef6  4608              MOV      r0,r1
000ef8  6800              LDR      r0,[r0,#0]  ; Y
000efa  b281              UXTH     r1,r0
000efc  4893              LDR      r0,|L1.4428|
000efe  6800              LDR      r0,[r0,#0]  ; X
000f00  b2c0              UXTB     r0,r0
000f02  f7fffffe          BL       drawbigpoint
000f06  e081              B        |L1.4108|
                  |L1.3848|
;;;781    						 }
;;;782    						 else
;;;783    						 {
;;;784    						   xx=Ys_3-Ys_4;	//计算出Y3,Y4距离
000f08  4894              LDR      r0,|L1.4444|
000f0a  6801              LDR      r1,[r0,#0]  ; Ys_3
000f0c  4892              LDR      r0,|L1.4440|
000f0e  6800              LDR      r0,[r0,#0]  ; Ys_4
000f10  1a08              SUBS     r0,r1,r0
000f12  b280              UXTH     r0,r0
000f14  9013              STR      r0,[sp,#0x4c]
;;;785    						   hh=(float)xx/280;		//计算出X比例
000f16  9813              LDR      r0,[sp,#0x4c]
000f18  f7fffffe          BL       __aeabi_ui2f
000f1c  4990              LDR      r1,|L1.4448|
000f1e  9004              STR      r0,[sp,#0x10]
000f20  f7fffffe          BL       __aeabi_fdiv
000f24  9018              STR      r0,[sp,#0x60]
;;;786    						   xx=(float)((hh*320)-xx)/2;	//Y方向偏移量
000f26  9813              LDR      r0,[sp,#0x4c]
000f28  f7fffffe          BL       __aeabi_ui2f
000f2c  498d              LDR      r1,|L1.4452|
000f2e  9002              STR      r0,[sp,#8]
000f30  9818              LDR      r0,[sp,#0x60]
000f32  f7fffffe          BL       __aeabi_fmul
000f36  9001              STR      r0,[sp,#4]
000f38  9902              LDR      r1,[sp,#8]
000f3a  f7fffffe          BL       __aeabi_fsub
000f3e  f04f4180          MOV      r1,#0x40000000
000f42  9003              STR      r0,[sp,#0xc]
000f44  f7fffffe          BL       __aeabi_fdiv
000f48  9004              STR      r0,[sp,#0x10]
000f4a  f7fffffe          BL       __aeabi_f2uiz
000f4e  b280              UXTH     r0,r0
000f50  9013              STR      r0,[sp,#0x4c]
;;;787    						   Y=320-(Y1-(Ys_4-xx))/hh;		  //计算坐标
000f52  4881              LDR      r0,|L1.4440|
000f54  6801              LDR      r1,[r0,#0]  ; Ys_4
000f56  9813              LDR      r0,[sp,#0x4c]
000f58  1a08              SUBS     r0,r1,r0
000f5a  9000              STR      r0,[sp,#0]
000f5c  f7fffffe          BL       __aeabi_ui2f
000f60  9001              STR      r0,[sp,#4]
000f62  9919              LDR      r1,[sp,#0x64]
000f64  f7fffffe          BL       __aeabi_frsub
000f68  9002              STR      r0,[sp,#8]
000f6a  9918              LDR      r1,[sp,#0x60]
000f6c  f7fffffe          BL       __aeabi_fdiv
000f70  497c              LDR      r1,|L1.4452|
000f72  9003              STR      r0,[sp,#0xc]
000f74  f7fffffe          BL       __aeabi_frsub
000f78  9004              STR      r0,[sp,#0x10]
000f7a  f7fffffe          BL       __aeabi_f2uiz
000f7e  496e              LDR      r1,|L1.4408|
000f80  6008              STR      r0,[r1,#0]  ; Y
;;;788    						   xx=Xs_2-Xs_4;	//计算出X2,X4距离
000f82  4874              LDR      r0,|L1.4436|
000f84  6801              LDR      r1,[r0,#0]  ; Xs_2
000f86  4872              LDR      r0,|L1.4432|
000f88  6800              LDR      r0,[r0,#0]  ; Xs_4
000f8a  1a08              SUBS     r0,r1,r0
000f8c  b280              UXTH     r0,r0
000f8e  9013              STR      r0,[sp,#0x4c]
;;;789    						   hh=(float)xx/200;	//计算出X比例因子
000f90  9813              LDR      r0,[sp,#0x4c]
000f92  f7fffffe          BL       __aeabi_ui2f
000f96  496b              LDR      r1,|L1.4420|
000f98  9004              STR      r0,[sp,#0x10]
000f9a  f7fffffe          BL       __aeabi_fdiv
000f9e  9018              STR      r0,[sp,#0x60]
;;;790    						   xx=(float)((hh*240)-xx)/2;  //X方向偏移量
000fa0  9813              LDR      r0,[sp,#0x4c]
000fa2  f7fffffe          BL       __aeabi_ui2f
000fa6  4968              LDR      r1,|L1.4424|
000fa8  9002              STR      r0,[sp,#8]
000faa  9818              LDR      r0,[sp,#0x60]
000fac  f7fffffe          BL       __aeabi_fmul
000fb0  9001              STR      r0,[sp,#4]
000fb2  9902              LDR      r1,[sp,#8]
000fb4  f7fffffe          BL       __aeabi_fsub
000fb8  f04f4180          MOV      r1,#0x40000000
000fbc  9003              STR      r0,[sp,#0xc]
000fbe  f7fffffe          BL       __aeabi_fdiv
000fc2  9004              STR      r0,[sp,#0x10]
000fc4  f7fffffe          BL       __aeabi_f2uiz
000fc8  b280              UXTH     r0,r0
000fca  9013              STR      r0,[sp,#0x4c]
;;;791    						   X=240-(X1-(Xs_4-xx))/hh;	//计算坐标
000fcc  4860              LDR      r0,|L1.4432|
000fce  6801              LDR      r1,[r0,#0]  ; Xs_4
000fd0  9813              LDR      r0,[sp,#0x4c]
000fd2  1a08              SUBS     r0,r1,r0
000fd4  9000              STR      r0,[sp,#0]
000fd6  f7fffffe          BL       __aeabi_ui2f
000fda  9001              STR      r0,[sp,#4]
000fdc  991a              LDR      r1,[sp,#0x68]
000fde  f7fffffe          BL       __aeabi_frsub
000fe2  9002              STR      r0,[sp,#8]
000fe4  9918              LDR      r1,[sp,#0x60]
000fe6  f7fffffe          BL       __aeabi_fdiv
000fea  4957              LDR      r1,|L1.4424|
000fec  9003              STR      r0,[sp,#0xc]
000fee  f7fffffe          BL       __aeabi_frsub
000ff2  9004              STR      r0,[sp,#0x10]
000ff4  f7fffffe          BL       __aeabi_f2uiz
000ff8  4954              LDR      r1,|L1.4428|
000ffa  6008              STR      r0,[r1,#0]  ; X
;;;792    						   drawbigpoint(X,Y);
000ffc  484e              LDR      r0,|L1.4408|
000ffe  6800              LDR      r0,[r0,#0]  ; Y
001000  b281              UXTH     r1,r0
001002  4852              LDR      r0,|L1.4428|
001004  6800              LDR      r0,[r0,#0]  ; X
001006  b2c0              UXTB     r0,r0
001008  f7fffffe          BL       drawbigpoint
                  |L1.4108|
;;;793    						 }
;;;794    					}
;;;795    
;;;796    
;;;797    			  }  // 				*/
;;;798    			   }  // 
;;;799    
;;;800    		}   
;;;801    	}
;;;802    }	 
00100c  b01b              ADD      sp,sp,#0x6c
00100e  bd00              POP      {pc}
;;;803    
                          ENDP

                  delay_ms PROC
;;;813    //对72M条件下,Nms<=1864 
;;;814    void delay_ms(u16 nms)
001010  4601              MOV      r1,r0
;;;815    {	 		  	  
;;;816    	u32 temp;		   
;;;817    	SysTick->LOAD=(u32)nms*fac_ms;//时间加载
001012  4a55              LDR      r2,|L1.4456|
001014  8812              LDRH     r2,[r2,#0]  ; fac_ms
001016  434a              MULS     r2,r1,r2
001018  f04f23e0          MOV      r3,#0xe000e000
00101c  615a              STR      r2,[r3,#0x14]
;;;818    	SysTick->VAL =0x00;           //清空计数器
00101e  2200              MOVS     r2,#0
001020  619a              STR      r2,[r3,#0x18]
;;;819    	SysTick->CTRL=0x01 ;          //开始倒数  
001022  2201              MOVS     r2,#1
001024  611a              STR      r2,[r3,#0x10]
;;;820    	do
001026  bf00              NOP      
                  |L1.4136|
;;;821    	{
;;;822    		temp=SysTick->CTRL;
001028  f04f22e0          MOV      r2,#0xe000e000
00102c  6910              LDR      r0,[r2,#0x10]
;;;823    	}
;;;824    	while(temp&0x01&&!(temp&(1<<16)));//等待时间到达   
00102e  f0100f01          TST      r0,#1
001032  d002              BEQ      |L1.4154|
001034  f4103f80          TST      r0,#0x10000
001038  d0f6              BEQ      |L1.4136|
                  |L1.4154|
;;;825    	SysTick->CTRL=0x00;       //关闭计数器
00103a  2200              MOVS     r2,#0
00103c  f04f23e0          MOV      r3,#0xe000e000
001040  611a              STR      r2,[r3,#0x10]
;;;826    	SysTick->VAL =0X00;       //清空计数器	  	    
001042  619a              STR      r2,[r3,#0x18]
;;;827    }   
001044  4770              BX       lr
;;;828    //延时us								   
                          ENDP

                  drawbigpointxx PROC
;;;559    //画一个"+"
;;;560    void drawbigpointxx(u16 x,u16 y)
001046  b570              PUSH     {r4-r6,lr}
;;;561    {
001048  4604              MOV      r4,r0
00104a  460d              MOV      r5,r1
;;;562    POINT_COLOR=RED;
00104c  f44f4078          MOV      r0,#0xf800
001050  4946              LDR      r1,|L1.4460|
001052  8008              STRH     r0,[r1,#0]
;;;563    TFT_DrawLine(x-11,y,x+12,y+1);
001054  f1a4010b          SUB      r1,r4,#0xb
001058  b2c8              UXTB     r0,r1
00105a  1c69              ADDS     r1,r5,#1
00105c  b28b              UXTH     r3,r1
00105e  f104010c          ADD      r1,r4,#0xc
001062  b2ca              UXTB     r2,r1
001064  4629              MOV      r1,r5
001066  f7fffffe          BL       TFT_DrawLine
;;;564    TFT_DrawLine(x-11,y+1,x+12,y+2);
00106a  f1a4010b          SUB      r1,r4,#0xb
00106e  b2c8              UXTB     r0,r1
001070  1ca9              ADDS     r1,r5,#2
001072  b28b              UXTH     r3,r1
001074  f104010c          ADD      r1,r4,#0xc
001078  b2ca              UXTB     r2,r1
00107a  1c69              ADDS     r1,r5,#1
00107c  b289              UXTH     r1,r1
00107e  f7fffffe          BL       TFT_DrawLine
;;;565    TFT_DrawLine(x,y-11,x+1,y+12);
001082  f1a5000b          SUB      r0,r5,#0xb
001086  b281              UXTH     r1,r0
001088  3017              ADDS     r0,r0,#0x17
00108a  b283              UXTH     r3,r0
00108c  1c60              ADDS     r0,r4,#1
00108e  b2c2              UXTB     r2,r0
001090  b2e0              UXTB     r0,r4
001092  f7fffffe          BL       TFT_DrawLine
;;;566    TFT_DrawLine(x+1,y-11,x+2,y+12);
001096  f1a5000b          SUB      r0,r5,#0xb
00109a  b281              UXTH     r1,r0
00109c  3017              ADDS     r0,r0,#0x17
00109e  b283              UXTH     r3,r0
0010a0  1ca0              ADDS     r0,r4,#2
0010a2  b2c2              UXTB     r2,r0
0010a4  1c60              ADDS     r0,r4,#1
0010a6  b2c0              UXTB     r0,r0
0010a8  f7fffffe          BL       TFT_DrawLine
;;;567    
;;;568    }
0010ac  bd70              POP      {r4-r6,pc}
;;;569    
                          ENDP

                  heyaodz_TPad PROC
;;;121    
;;;122    void heyaodz_TPad(void)	//触摸屏校准
0010ae  b510              PUSH     {r4,lr}
;;;123    {
;;;124    
;;;125    	TFT_CLEAR(0,0,240,320);     //清屏		
0010b0  f44f73a0          MOV      r3,#0x140
0010b4  22f0              MOVS     r2,#0xf0
0010b6  2100              MOVS     r1,#0
0010b8  4608              MOV      r0,r1
0010ba  f7fffffe          BL       TFT_CLEAR
;;;126    	POINT_COLOR=RED;
0010be  f44f4078          MOV      r0,#0xf800
0010c2  492a              LDR      r1,|L1.4460|
0010c4  8008              STRH     r0,[r1,#0]
;;;127    	TFT_ShowString(80,40,"Touch First Point");
0010c6  a22a              ADR      r2,|L1.4464|
0010c8  2128              MOVS     r1,#0x28
0010ca  2050              MOVS     r0,#0x50
0010cc  f7fffffe          BL       TFT_ShowString
;;;128    	heyaodz_JF();	//显示字符串
0010d0  f7fffffe          BL       heyaodz_JF
;;;129    	drawbigpointxx(20,20);	// 画点1
0010d4  2114              MOVS     r1,#0x14
0010d6  4608              MOV      r0,r1
0010d8  f7fffffe          BL       drawbigpointxx
;;;130    
;;;131    	while (1)                   //等待中断到来
0010dc  e063              B        |L1.4518|
                  |L1.4318|
;;;132      	{    						   
;;;133    		
;;;134    //	    if(!GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_6))_it1=1;
;;;135    		if(_it1==1)
0010de  4829              LDR      r0,|L1.4484|
0010e0  7800              LDRB     r0,[r0,#0]  ; _it1
0010e2  2801              CMP      r0,#1
0010e4  d15f              BNE      |L1.4518|
;;;136    		{
;;;137    			delay_ms(340);
0010e6  f44f70aa          MOV      r0,#0x154
0010ea  f7fffffe          BL       delay_ms
;;;138    			a=PEN;
0010ee  2140              MOVS     r1,#0x40
0010f0  4825              LDR      r0,|L1.4488|
0010f2  f7fffffe          BL       GPIO_ReadInputDataBit
0010f6  4925              LDR      r1,|L1.4492|
0010f8  7008              STRB     r0,[r1,#0]
;;;139    			if(a==0)
0010fa  4608              MOV      r0,r1
0010fc  7800              LDRB     r0,[r0,#0]  ; a
0010fe  b9d0              CBNZ     r0,|L1.4406|
;;;140    			{
;;;141    				while(a==0)
001100  e048              B        |L1.4500|
                  |L1.4354|
;;;142    				{
;;;143    				    delay_us(10);
001102  200a              MOVS     r0,#0xa
001104  f7fffffe          BL       delay_us
;;;144    					Read_Ads7846();
001108  f7fffffe          BL       Read_Ads7846
;;;145    					delay_us(10);
00110c  200a              MOVS     r0,#0xa
00110e  f7fffffe          BL       delay_us
;;;146    					Xs_1=X; Ys_1=Y;
001112  480e              LDR      r0,|L1.4428|
001114  6800              LDR      r0,[r0,#0]  ; X
001116  4909              LDR      r1,|L1.4412|
001118  6008              STR      r0,[r1,#0]  ; Xs_1
00111a  4807              LDR      r0,|L1.4408|
00111c  6800              LDR      r0,[r0,#0]  ; Y
00111e  491c              LDR      r1,|L1.4496|
001120  6008              STR      r0,[r1,#0]  ; Ys_1
;;;147    					a=PEN;
001122  2140              MOVS     r1,#0x40
001124  4818              LDR      r0,|L1.4488|
001126  f7fffffe          BL       GPIO_ReadInputDataBit
00112a  4918              LDR      r1,|L1.4492|
00112c  7008              STRB     r0,[r1,#0]
;;;148    					_it1=0;	
00112e  2000              MOVS     r0,#0
001130  4914              LDR      r1,|L1.4484|
001132  7008              STRB     r0,[r1,#0]
;;;149    					break;
001134  e032              B        |L1.4508|
                  |L1.4406|
001136  e033              B        |L1.4512|
                  |L1.4408|
                          DCD      Y
                  |L1.4412|
                          DCD      Xs_1
                  |L1.4416|
                          DCD      Xs_3
                  |L1.4420|
                          DCD      0x43480000
                  |L1.4424|
                          DCD      0x43700000
                  |L1.4428|
                          DCD      X
                  |L1.4432|
                          DCD      Xs_4
                  |L1.4436|
                          DCD      Xs_2
                  |L1.4440|
                          DCD      Ys_4
                  |L1.4444|
                          DCD      Ys_3
                  |L1.4448|
                          DCD      0x438c0000
                  |L1.4452|
                          DCD      0x43a00000
                  |L1.4456|
                          DCD      fac_ms
                  |L1.4460|
                          DCD      POINT_COLOR
                  |L1.4464|
001170  546f7563          DCB      "Touch First Point",0
001174  68204669
001178  72737420
00117c  506f696e
001180  7400    
001182  00                DCB      0
001183  00                DCB      0
                  |L1.4484|
                          DCD      _it1
                  |L1.4488|
                          DCD      0x40010c00
                  |L1.4492|
                          DCD      a
                  |L1.4496|
                          DCD      Ys_1
                  |L1.4500|
001194  48f8              LDR      r0,|L1.5496|
001196  7800              LDRB     r0,[r0,#0]            ;141  ; a
001198  2800              CMP      r0,#0                 ;141
00119a  d0b2              BEQ      |L1.4354|
                  |L1.4508|
00119c  bf00              NOP      
;;;150    				}
;;;151    				 break;	 
00119e  e003              B        |L1.4520|
                  |L1.4512|
;;;152    			}
;;;153    			else _it1=0;	
0011a0  2000              MOVS     r0,#0
0011a2  49f6              LDR      r1,|L1.5500|
0011a4  7008              STRB     r0,[r1,#0]
                  |L1.4518|
0011a6  e79a              B        |L1.4318|
                  |L1.4520|
0011a8  bf00              NOP                            ;151
;;;154    		}				
;;;155      	}
;;;156    	  
;;;157    	TFT_CLEAR(0,0,240,320);     //清屏   
0011aa  f44f73a0          MOV      r3,#0x140
0011ae  22f0              MOVS     r2,#0xf0
0011b0  2100              MOVS     r1,#0
0011b2  4608              MOV      r0,r1
0011b4  f7fffffe          BL       TFT_CLEAR
;;;158    	TFT_ShowString(80,40,"Touch Second Point"); 		
0011b8  a2f1              ADR      r2,|L1.5504|
0011ba  2128              MOVS     r1,#0x28
0011bc  2050              MOVS     r0,#0x50
0011be  f7fffffe          BL       TFT_ShowString
;;;159    	heyaodz_JF();	//显示字符串
0011c2  f7fffffe          BL       heyaodz_JF
;;;160    	drawbigpointxx(220,20);	// 画点2
0011c6  2114              MOVS     r1,#0x14
0011c8  20dc              MOVS     r0,#0xdc
0011ca  f7fffffe          BL       drawbigpointxx
;;;161    	_it1=0;	
0011ce  2000              MOVS     r0,#0
0011d0  49ea              LDR      r1,|L1.5500|
0011d2  7008              STRB     r0,[r1,#0]
;;;162    	while (1)                   //等待中断到来
0011d4  e034              B        |L1.4672|
                  |L1.4566|
;;;163      	{    						   
;;;164    		if(_it1==1)
0011d6  48e9              LDR      r0,|L1.5500|
0011d8  7800              LDRB     r0,[r0,#0]  ; _it1
0011da  2801              CMP      r0,#1
0011dc  d130              BNE      |L1.4672|
;;;165    		{	 
;;;166    			delay_ms(340);
0011de  f44f70aa          MOV      r0,#0x154
0011e2  f7fffffe          BL       delay_ms
;;;167    			a=PEN;
0011e6  2140              MOVS     r1,#0x40
0011e8  48ea              LDR      r0,|L1.5524|
0011ea  f7fffffe          BL       GPIO_ReadInputDataBit
0011ee  49e2              LDR      r1,|L1.5496|
0011f0  7008              STRB     r0,[r1,#0]
;;;168    			if(a==0)
0011f2  4608              MOV      r0,r1
0011f4  7800              LDRB     r0,[r0,#0]  ; a
0011f6  bb00              CBNZ     r0,|L1.4666|
;;;169    			{
;;;170    				while(a==0)
0011f8  e019              B        |L1.4654|
                  |L1.4602|
;;;171    				{
;;;172    				    delay_us(10);
0011fa  200a              MOVS     r0,#0xa
0011fc  f7fffffe          BL       delay_us
;;;173    					Read_Ads7846();
001200  f7fffffe          BL       Read_Ads7846
;;;174    					delay_us(10);
001204  200a              MOVS     r0,#0xa
001206  f7fffffe          BL       delay_us
;;;175    					Xs_2=X; Ys_2=Y;
00120a  48e3              LDR      r0,|L1.5528|
00120c  6800              LDR      r0,[r0,#0]  ; X
00120e  49e3              LDR      r1,|L1.5532|
001210  6008              STR      r0,[r1,#0]  ; Xs_2
001212  48e3              LDR      r0,|L1.5536|
001214  6800              LDR      r0,[r0,#0]  ; Y
001216  49e3              LDR      r1,|L1.5540|
001218  6008              STR      r0,[r1,#0]  ; Ys_2
;;;176    					a=PEN;	
00121a  2140              MOVS     r1,#0x40
00121c  48dd              LDR      r0,|L1.5524|
00121e  f7fffffe          BL       GPIO_ReadInputDataBit
001222  49d5              LDR      r1,|L1.5496|
001224  7008              STRB     r0,[r1,#0]
;;;177    					_it1=0;	
001226  2000              MOVS     r0,#0
001228  49d4              LDR      r1,|L1.5500|
00122a  7008              STRB     r0,[r1,#0]
;;;178    					break;
00122c  e003              B        |L1.4662|
                  |L1.4654|
00122e  48d2              LDR      r0,|L1.5496|
001230  7800              LDRB     r0,[r0,#0]            ;170  ; a
001232  2800              CMP      r0,#0                 ;170
001234  d0e1              BEQ      |L1.4602|
                  |L1.4662|
001236  bf00              NOP      
;;;179    				}
;;;180    									
;;;181    				break;	 	
001238  e003              B        |L1.4674|
                  |L1.4666|
;;;182    			}
;;;183    			else _it1=0;		
00123a  2000              MOVS     r0,#0
00123c  49cf              LDR      r1,|L1.5500|
00123e  7008              STRB     r0,[r1,#0]
                  |L1.4672|
001240  e7c9              B        |L1.4566|
                  |L1.4674|
001242  bf00              NOP                            ;181
;;;184    		}				
;;;185      	}
;;;186    
;;;187    	TFT_CLEAR(0,0,240,320);     //清屏   
001244  f44f73a0          MOV      r3,#0x140
001248  22f0              MOVS     r2,#0xf0
00124a  2100              MOVS     r1,#0
00124c  4608              MOV      r0,r1
00124e  f7fffffe          BL       TFT_CLEAR
;;;188    	TFT_ShowString(80,40,"Touch Second Point"); 		
001252  a2cb              ADR      r2,|L1.5504|
001254  2128              MOVS     r1,#0x28
001256  2050              MOVS     r0,#0x50
001258  f7fffffe          BL       TFT_ShowString
;;;189    	heyaodz_JF();	//显示字符串
00125c  f7fffffe          BL       heyaodz_JF
;;;190    
;;;191    	drawbigpointxx(20,300);	// 画点3
001260  f44f7196          MOV      r1,#0x12c
001264  2014              MOVS     r0,#0x14
001266  f7fffffe          BL       drawbigpointxx
;;;192    	_it1=0;	
00126a  2000              MOVS     r0,#0
00126c  49c3              LDR      r1,|L1.5500|
00126e  7008              STRB     r0,[r1,#0]
;;;193    	while (1)                   //等待中断到来
001270  e034              B        |L1.4828|
                  |L1.4722|
;;;194    	{    						   
;;;195    		if(_it1==1)
001272  48c2              LDR      r0,|L1.5500|
001274  7800              LDRB     r0,[r0,#0]  ; _it1
001276  2801              CMP      r0,#1
001278  d130              BNE      |L1.4828|
;;;196    		{	 
;;;197    			delay_ms(340);
00127a  f44f70aa          MOV      r0,#0x154
00127e  f7fffffe          BL       delay_ms
;;;198    			a=PEN;
001282  2140              MOVS     r1,#0x40
001284  48c3              LDR      r0,|L1.5524|
001286  f7fffffe          BL       GPIO_ReadInputDataBit
00128a  49bb              LDR      r1,|L1.5496|
00128c  7008              STRB     r0,[r1,#0]
;;;199    			if(a==0)
00128e  4608              MOV      r0,r1
001290  7800              LDRB     r0,[r0,#0]  ; a
001292  bb00              CBNZ     r0,|L1.4822|
;;;200    			{
;;;201    				while(a==0)
001294  e019              B        |L1.4810|
                  |L1.4758|
;;;202    				{
;;;203    				    delay_us(10);
001296  200a              MOVS     r0,#0xa
001298  f7fffffe          BL       delay_us
;;;204    					Read_Ads7846();
00129c  f7fffffe          BL       Read_Ads7846
;;;205    					delay_us(10);
0012a0  200a              MOVS     r0,#0xa
0012a2  f7fffffe          BL       delay_us
;;;206    					Xs_3=X; Ys_3=Y;
0012a6  48bc              LDR      r0,|L1.5528|
0012a8  6800              LDR      r0,[r0,#0]  ; X
0012aa  49bf              LDR      r1,|L1.5544|
0012ac  6008              STR      r0,[r1,#0]  ; Xs_3
0012ae  48bc              LDR      r0,|L1.5536|
0012b0  6800              LDR      r0,[r0,#0]  ; Y
0012b2  49be              LDR      r1,|L1.5548|
0012b4  6008              STR      r0,[r1,#0]  ; Ys_3
;;;207    					a=PEN;	
0012b6  2140              MOVS     r1,#0x40
0012b8  48b6              LDR      r0,|L1.5524|
0012ba  f7fffffe          BL       GPIO_ReadInputDataBit
0012be  49ae              LDR      r1,|L1.5496|
0012c0  7008              STRB     r0,[r1,#0]
;;;208    					_it1=0;	
0012c2  2000              MOVS     r0,#0
0012c4  49ad              LDR      r1,|L1.5500|
0012c6  7008              STRB     r0,[r1,#0]
;;;209    					break;
0012c8  e003              B        |L1.4818|
                  |L1.4810|
0012ca  48ab              LDR      r0,|L1.5496|
0012cc  7800              LDRB     r0,[r0,#0]            ;201  ; a
0012ce  2800              CMP      r0,#0                 ;201
0012d0  d0e1              BEQ      |L1.4758|
                  |L1.4818|
0012d2  bf00              NOP      
;;;210    				}
;;;211    									
;;;212    				break;	 	
0012d4  e003              B        |L1.4830|
                  |L1.4822|
;;;213    			}
;;;214    			else _it1=0;		
0012d6  2000              MOVS     r0,#0
0012d8  49a8              LDR      r1,|L1.5500|
0012da  7008              STRB     r0,[r1,#0]
                  |L1.4828|
0012dc  e7c9              B        |L1.4722|
                  |L1.4830|
0012de  bf00              NOP                            ;212
;;;215    		}				
;;;216      	}
;;;217    	
;;;218    	TFT_CLEAR(0,0,240,320);     //清屏   
0012e0  f44f73a0          MOV      r3,#0x140
0012e4  22f0              MOVS     r2,#0xf0
0012e6  2100              MOVS     r1,#0
0012e8  4608              MOV      r0,r1
0012ea  f7fffffe          BL       TFT_CLEAR
;;;219    	TFT_ShowString(80,40,"Touch Second Point"); 		
0012ee  a2a4              ADR      r2,|L1.5504|
0012f0  2128              MOVS     r1,#0x28
0012f2  2050              MOVS     r0,#0x50
0012f4  f7fffffe          BL       TFT_ShowString
;;;220    	heyaodz_JF();	//显示字符串
0012f8  f7fffffe          BL       heyaodz_JF
;;;221    	drawbigpointxx(220,300); // 画点4
0012fc  f44f7196          MOV      r1,#0x12c
001300  20dc              MOVS     r0,#0xdc
001302  f7fffffe          BL       drawbigpointxx
;;;222    	_it1=0;	
001306  2000              MOVS     r0,#0
001308  499c              LDR      r1,|L1.5500|
00130a  7008              STRB     r0,[r1,#0]
;;;223    	while (1)                   //等待中断到来
00130c  e034              B        |L1.4984|
                  |L1.4878|
;;;224      	{    						   
;;;225    		if(_it1==1)
00130e  489b              LDR      r0,|L1.5500|
001310  7800              LDRB     r0,[r0,#0]  ; _it1
001312  2801              CMP      r0,#1
001314  d130              BNE      |L1.4984|
;;;226    		{	 
;;;227    			delay_ms(340);
001316  f44f70aa          MOV      r0,#0x154
00131a  f7fffffe          BL       delay_ms
;;;228    			a=PEN;
00131e  2140              MOVS     r1,#0x40
001320  489c              LDR      r0,|L1.5524|
001322  f7fffffe          BL       GPIO_ReadInputDataBit
001326  4994              LDR      r1,|L1.5496|
001328  7008              STRB     r0,[r1,#0]
;;;229    			if(a==0)
00132a  4608              MOV      r0,r1
00132c  7800              LDRB     r0,[r0,#0]  ; a
00132e  bb00              CBNZ     r0,|L1.4978|
;;;230    			{
;;;231    				while(a==0)
001330  e019              B        |L1.4966|
                  |L1.4914|
;;;232    				{
;;;233    				    delay_us(10);
001332  200a              MOVS     r0,#0xa
001334  f7fffffe          BL       delay_us
;;;234    					Read_Ads7846();
001338  f7fffffe          BL       Read_Ads7846
;;;235    					delay_us(10);
00133c  200a              MOVS     r0,#0xa
00133e  f7fffffe          BL       delay_us
;;;236    					Xs_4=X; Ys_4=Y;
001342  4895              LDR      r0,|L1.5528|
001344  6800              LDR      r0,[r0,#0]  ; X
001346  499a              LDR      r1,|L1.5552|
001348  6008              STR      r0,[r1,#0]  ; Xs_4
00134a  4895              LDR      r0,|L1.5536|
00134c  6800              LDR      r0,[r0,#0]  ; Y
00134e  4999              LDR      r1,|L1.5556|
001350  6008              STR      r0,[r1,#0]  ; Ys_4
;;;237    					a=PEN;	
001352  2140              MOVS     r1,#0x40
001354  488f              LDR      r0,|L1.5524|
001356  f7fffffe          BL       GPIO_ReadInputDataBit
00135a  4987              LDR      r1,|L1.5496|
00135c  7008              STRB     r0,[r1,#0]
;;;238    					_it1=0;	
00135e  2000              MOVS     r0,#0
001360  4986              LDR      r1,|L1.5500|
001362  7008              STRB     r0,[r1,#0]
;;;239    					break;
001364  e003              B        |L1.4974|
                  |L1.4966|
001366  4884              LDR      r0,|L1.5496|
001368  7800              LDRB     r0,[r0,#0]            ;231  ; a
00136a  2800              CMP      r0,#0                 ;231
00136c  d0e1              BEQ      |L1.4914|
                  |L1.4974|
00136e  bf00              NOP      
;;;240    				}
;;;241    									
;;;242    				break;	 	
001370  e003              B        |L1.4986|
                  |L1.4978|
;;;243    			}
;;;244    			else _it1=0;		
001372  2000              MOVS     r0,#0
001374  4981              LDR      r1,|L1.5500|
001376  7008              STRB     r0,[r1,#0]
                  |L1.4984|
001378  e7c9              B        |L1.4878|
                  |L1.4986|
00137a  bf00              NOP                            ;242
;;;245    		}				
;;;246      	}			
;;;247    	dw=1;
00137c  2001              MOVS     r0,#1
00137e  498e              LDR      r1,|L1.5560|
001380  7008              STRB     r0,[r1,#0]
;;;248    	M25P16_RamTo_buf_TP(); //保存校准数据  
001382  f7fffffe          BL       M25P16_RamTo_buf_TP
;;;249    
;;;250    
;;;251    
;;;252    }
001386  bd10              POP      {r4,pc}
;;;253    
                          ENDP

                  NVIC_Configuration PROC
;;;450    //////////////////////////////////////
;;;451    void NVIC_Configuration(void)
001388  b508              PUSH     {r3,lr}
;;;452    {
;;;453      NVIC_InitTypeDef NVIC_InitStructure;
;;;454      
;;;455      /* Configure one bit for preemption priority */
;;;456      NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
00138a  f44f60c0          MOV      r0,#0x600
00138e  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;457      
;;;458      /* Enable the EXTI9_5 Interrupt */
;;;459      
;;;460    
;;;461      NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn  ;
001392  2017              MOVS     r0,#0x17
001394  f88d0000          STRB     r0,[sp,#0]
;;;462    
;;;463      NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
001398  2000              MOVS     r0,#0
00139a  f88d0001          STRB     r0,[sp,#1]
;;;464      NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
00139e  f88d0002          STRB     r0,[sp,#2]
;;;465      NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
0013a2  2001              MOVS     r0,#1
0013a4  f88d0003          STRB     r0,[sp,#3]
;;;466      NVIC_Init(&NVIC_InitStructure);
0013a8  4668              MOV      r0,sp
0013aa  f7fffffe          BL       NVIC_Init
;;;467      
;;;468    }
0013ae  bd08              POP      {r3,pc}
;;;469    void Delay(__IO uint32_t nCount)
                          ENDP

                  GPIO_Configuration PROC
;;;327    
;;;328    void GPIO_Configuration(void)
0013b0  b508              PUSH     {r3,lr}
;;;329    {
;;;330      GPIO_InitTypeDef GPIO_InitStructure;
;;;331     
;;;332    
;;;333      RCC_APB2PeriphClockCmd( RCC_APB2Periph_USART1 |RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB |
0013b2  2101              MOVS     r1,#1
0013b4  f244007c          MOV      r0,#0x407c
0013b8  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;334                             RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD |
;;;335                             RCC_APB2Periph_GPIOE, ENABLE);
;;;336      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;				    
0013bc  2020              MOVS     r0,#0x20
0013be  f8ad0000          STRH     r0,[sp,#0]
;;;337      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
0013c2  2010              MOVS     r0,#0x10
0013c4  f88d0003          STRB     r0,[sp,#3]
;;;338      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0013c8  2003              MOVS     r0,#3
0013ca  f88d0002          STRB     r0,[sp,#2]
;;;339      GPIO_Init(GPIOB, &GPIO_InitStructure);					 
0013ce  4669              MOV      r1,sp
0013d0  4870              LDR      r0,|L1.5524|
0013d2  f7fffffe          BL       GPIO_Init
;;;340    
;;;341    // GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13 |GPIO_Pin_6|GPIO_Pin_3;		 
;;;342    //  GPIO_Init(GPIOD, &GPIO_InitStructure);
;;;343    
;;;344      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5|GPIO_Pin_2|GPIO_Pin_3;		 
0013d6  202c              MOVS     r0,#0x2c
0013d8  f8ad0000          STRH     r0,[sp,#0]
;;;345      GPIO_Init(GPIOC, &GPIO_InitStructure);
0013dc  4669              MOV      r1,sp
0013de  4877              LDR      r0,|L1.5564|
0013e0  f7fffffe          BL       GPIO_Init
;;;346    
;;;347      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;		 //COL4
0013e4  2040              MOVS     r0,#0x40
0013e6  f8ad0000          STRH     r0,[sp,#0]
;;;348      GPIO_Init(GPIOE, &GPIO_InitStructure);
0013ea  4669              MOV      r1,sp
0013ec  4874              LDR      r0,|L1.5568|
0013ee  f7fffffe          BL       GPIO_Init
;;;349    
;;;350      GPIO_SetBits(GPIOC, GPIO_Pin_5|GPIO_Pin_2|GPIO_Pin_3);
0013f2  212c              MOVS     r1,#0x2c
0013f4  4871              LDR      r0,|L1.5564|
0013f6  f7fffffe          BL       GPIO_SetBits
;;;351      GPIO_SetBits(GPIOE, GPIO_Pin_6);	     
0013fa  2140              MOVS     r1,#0x40
0013fc  4870              LDR      r0,|L1.5568|
0013fe  f7fffffe          BL       GPIO_SetBits
;;;352    
;;;353        
;;;354      GPIO_SetBits(GPIOB, GPIO_Pin_5);	     //
001402  2120              MOVS     r1,#0x20
001404  4863              LDR      r0,|L1.5524|
001406  f7fffffe          BL       GPIO_SetBits
;;;355      GPIO_SetBits(GPIOD, GPIO_Pin_6|GPIO_Pin_3 );	    
00140a  2148              MOVS     r1,#0x48
00140c  486d              LDR      r0,|L1.5572|
00140e  f7fffffe          BL       GPIO_SetBits
;;;356         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;		
001412  2001              MOVS     r0,#1
001414  f8ad0000          STRH     r0,[sp,#0]
;;;357      GPIO_Init(GPIOE, &GPIO_InitStructure);
001418  4669              MOV      r1,sp
00141a  4869              LDR      r0,|L1.5568|
00141c  f7fffffe          BL       GPIO_Init
;;;358      
;;;359      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 ; 	 //LCD-RST
001420  2002              MOVS     r0,#2
001422  f8ad0000          STRH     r0,[sp,#0]
;;;360      GPIO_Init(GPIOE, &GPIO_InitStructure);  	
001426  4669              MOV      r1,sp
001428  4865              LDR      r0,|L1.5568|
00142a  f7fffffe          BL       GPIO_Init
;;;361        
;;;362     
;;;363     
;;;364    
;;;365      //PB10, PD9, PD10   CS,SI,CLK
;;;366      
;;;367      GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_7;
00142e  2080              MOVS     r0,#0x80
001430  f8ad0000          STRH     r0,[sp,#0]
;;;368      //GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;		 //推挽输出
;;;369      //GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
;;;370      GPIO_Init(GPIOB, &GPIO_InitStructure);
001434  4669              MOV      r1,sp
001436  4857              LDR      r0,|L1.5524|
001438  f7fffffe          BL       GPIO_Init
;;;371    
;;;372      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5|GPIO_Pin_7 ;  
00143c  20a0              MOVS     r0,#0xa0
00143e  f8ad0000          STRH     r0,[sp,#0]
;;;373      GPIO_Init(GPIOA, &GPIO_InitStructure);
001442  4669              MOV      r1,sp
001444  4860              LDR      r0,|L1.5576|
001446  f7fffffe          BL       GPIO_Init
;;;374     
;;;375      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;           //SPI1 CS1 
00144a  2010              MOVS     r0,#0x10
00144c  f8ad0000          STRH     r0,[sp,#0]
;;;376      GPIO_Init(GPIOC, &GPIO_InitStructure);
001450  4669              MOV      r1,sp
001452  485a              LDR      r0,|L1.5564|
001454  f7fffffe          BL       GPIO_Init
;;;377      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;           //SPI1 CS4 
001458  f44f5080          MOV      r0,#0x1000
00145c  f8ad0000          STRH     r0,[sp,#0]
;;;378      GPIO_Init(GPIOB, &GPIO_InitStructure);
001460  4669              MOV      r1,sp
001462  484c              LDR      r0,|L1.5524|
001464  f7fffffe          BL       GPIO_Init
;;;379      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;           //SPI1 NSS 
001468  2010              MOVS     r0,#0x10
00146a  f8ad0000          STRH     r0,[sp,#0]
;;;380      GPIO_Init(GPIOA, &GPIO_InitStructure);
00146e  4669              MOV      r1,sp
001470  4855              LDR      r0,|L1.5576|
001472  f7fffffe          BL       GPIO_Init
;;;381    
;;;382    
;;;383      	
;;;384      //PENIRQ, SO	
;;;385      GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6;
001476  2040              MOVS     r0,#0x40
001478  f8ad0000          STRH     r0,[sp,#0]
;;;386      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
00147c  2028              MOVS     r0,#0x28
00147e  f88d0003          STRB     r0,[sp,#3]
;;;387      //GPIO_InitStructure.GPIO_Speed = GPIO_Speed_10MHz;
;;;388      GPIO_Init(GPIOB, &GPIO_InitStructure);
001482  4669              MOV      r1,sp
001484  4843              LDR      r0,|L1.5524|
001486  f7fffffe          BL       GPIO_Init
;;;389    
;;;390      GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_6;
00148a  2040              MOVS     r0,#0x40
00148c  f8ad0000          STRH     r0,[sp,#0]
;;;391      GPIO_Init(GPIOA, &GPIO_InitStructure);
001490  4669              MOV      r1,sp
001492  484d              LDR      r0,|L1.5576|
001494  f7fffffe          BL       GPIO_Init
;;;392    
;;;393      //GPIO_InitStructure.GPIO_Pin =  GPIO_Pin_11;
;;;394      //GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
;;;395      //GPIO_Init(GPIOB, &GPIO_InitStructure);
;;;396      
;;;397    
;;;398    
;;;399      
;;;400      	
;;;401      
;;;402    /*-- GPIO Configuration ------------------------------------------------------*/  
;;;403      //GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
;;;404      //GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	
;;;405     
;;;406      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_4 | GPIO_Pin_5 |
001498  f24c7033          MOV      r0,#0xc733
00149c  f8ad0000          STRH     r0,[sp,#0]
;;;407                                    GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | GPIO_Pin_14 | 
;;;408                                    GPIO_Pin_15;
;;;409      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
0014a0  2003              MOVS     r0,#3
0014a2  f88d0002          STRB     r0,[sp,#2]
;;;410      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
0014a6  2018              MOVS     r0,#0x18
0014a8  f88d0003          STRB     r0,[sp,#3]
;;;411      GPIO_Init(GPIOD, &GPIO_InitStructure);
0014ac  4669              MOV      r1,sp
0014ae  4845              LDR      r0,|L1.5572|
0014b0  f7fffffe          BL       GPIO_Init
;;;412    
;;;413      /* Set PE.07(D4), PE.08(D5), PE.09(D6), PE.10(D7), PE.11(D8), PE.12(D9), PE.13(D10),
;;;414         PE.14(D11), PE.15(D12) as alternate function push pull */
;;;415      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10 | 
0014b4  f64f7080          MOV      r0,#0xff80
0014b8  f8ad0000          STRH     r0,[sp,#0]
;;;416                                    GPIO_Pin_11 | GPIO_Pin_12 | GPIO_Pin_13 | GPIO_Pin_14 | 
;;;417                                    GPIO_Pin_15;
;;;418      GPIO_Init(GPIOE, &GPIO_InitStructure); 
0014bc  4669              MOV      r1,sp
0014be  4840              LDR      r0,|L1.5568|
0014c0  f7fffffe          BL       GPIO_Init
;;;419    
;;;420    
;;;421      
;;;422      /* NE1 configuration */
;;;423      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7; 
0014c4  2080              MOVS     r0,#0x80
0014c6  f8ad0000          STRH     r0,[sp,#0]
;;;424      GPIO_Init(GPIOD, &GPIO_InitStructure);
0014ca  4669              MOV      r1,sp
0014cc  483d              LDR      r0,|L1.5572|
0014ce  f7fffffe          BL       GPIO_Init
;;;425      
;;;426      /* RS */
;;;427      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11 ; 
0014d2  f44f6000          MOV      r0,#0x800
0014d6  f8ad0000          STRH     r0,[sp,#0]
;;;428      GPIO_Init(GPIOD, &GPIO_InitStructure); 
0014da  4669              MOV      r1,sp
0014dc  4839              LDR      r0,|L1.5572|
0014de  f7fffffe          BL       GPIO_Init
;;;429    
;;;430      
;;;431      GPIO_SetBits(GPIOD, GPIO_Pin_7);			//CS=1 
0014e2  2180              MOVS     r1,#0x80
0014e4  4837              LDR      r0,|L1.5572|
0014e6  f7fffffe          BL       GPIO_SetBits
;;;432      GPIO_SetBits(GPIOD, GPIO_Pin_14| GPIO_Pin_15 |GPIO_Pin_0 | GPIO_Pin_1);  	 
0014ea  f24c0103          MOV      r1,#0xc003
0014ee  4835              LDR      r0,|L1.5572|
0014f0  f7fffffe          BL       GPIO_SetBits
;;;433      GPIO_SetBits(GPIOE, GPIO_Pin_7 | GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10);   
0014f4  f44f61f0          MOV      r1,#0x780
0014f8  4831              LDR      r0,|L1.5568|
0014fa  f7fffffe          BL       GPIO_SetBits
;;;434      GPIO_ResetBits(GPIOE, GPIO_Pin_0);
0014fe  2101              MOVS     r1,#1
001500  482f              LDR      r0,|L1.5568|
001502  f7fffffe          BL       GPIO_ResetBits
;;;435      GPIO_ResetBits(GPIOE, GPIO_Pin_1);		//RESET=0
001506  2102              MOVS     r1,#2
001508  482d              LDR      r0,|L1.5568|
00150a  f7fffffe          BL       GPIO_ResetBits
;;;436      GPIO_SetBits(GPIOD, GPIO_Pin_4);		    //RD=1
00150e  2110              MOVS     r1,#0x10
001510  482c              LDR      r0,|L1.5572|
001512  f7fffffe          BL       GPIO_SetBits
;;;437      GPIO_SetBits(GPIOD, GPIO_Pin_5);			//WR=1
001516  2120              MOVS     r1,#0x20
001518  482a              LDR      r0,|L1.5572|
00151a  f7fffffe          BL       GPIO_SetBits
;;;438    
;;;439      GPIO_SetBits(GPIOB, GPIO_Pin_6);			//PEn
00151e  2140              MOVS     r1,#0x40
001520  481c              LDR      r0,|L1.5524|
001522  f7fffffe          BL       GPIO_SetBits
;;;440      //GPIO_SetBits(GPIOA, GPIO_Pin_6);			//PEn
;;;441      GPIO_SetBits(GPIOD, GPIO_Pin_13);			//LIGHT
001526  f44f5100          MOV      r1,#0x2000
00152a  4826              LDR      r0,|L1.5572|
00152c  f7fffffe          BL       GPIO_SetBits
;;;442      //GPIO_SetBits(GPIOB, GPIO_Pin_7);			//SPI CS3
;;;443      GPIO_SetBits(GPIOC, GPIO_Pin_4);			//SPI CS1
001530  2110              MOVS     r1,#0x10
001532  4822              LDR      r0,|L1.5564|
001534  f7fffffe          BL       GPIO_SetBits
;;;444      GPIO_SetBits(GPIOB, GPIO_Pin_12);			//SPI CS4
001538  f44f5180          MOV      r1,#0x1000
00153c  4815              LDR      r0,|L1.5524|
00153e  f7fffffe          BL       GPIO_SetBits
;;;445      GPIO_SetBits(GPIOA, GPIO_Pin_4);			//SPI NSS
001542  2110              MOVS     r1,#0x10
001544  4820              LDR      r0,|L1.5576|
001546  f7fffffe          BL       GPIO_SetBits
;;;446    }
00154a  bd08              POP      {r3,pc}
;;;447    
                          ENDP

                  delay_init PROC
;;;803    
;;;804     void delay_init(u8 SYSCLK)
00154c  f04f21e0          MOV      r1,#0xe000e000
;;;805    {
;;;806    	SysTick->CTRL&=0xfffffffb;//选择内部时钟 HCLK/8
001550  6909              LDR      r1,[r1,#0x10]
001552  f0210104          BIC      r1,r1,#4
001556  f04f22e0          MOV      r2,#0xe000e000
00155a  6111              STR      r1,[r2,#0x10]
;;;807    	fac_us=SYSCLK/8;		    
00155c  17c2              ASRS     r2,r0,#31
00155e  eb007252          ADD      r2,r0,r2,LSR #29
001562  10d2              ASRS     r2,r2,#3
001564  4b19              LDR      r3,|L1.5580|
001566  701a              STRB     r2,[r3,#0]
;;;808    	fac_ms=(u16)fac_us*1000;
001568  4619              MOV      r1,r3
00156a  7809              LDRB     r1,[r1,#0]  ; fac_us
00156c  f44f727a          MOV      r2,#0x3e8
001570  4351              MULS     r1,r2,r1
001572  4a17              LDR      r2,|L1.5584|
001574  8011              STRH     r1,[r2,#0]
;;;809    }								    
001576  4770              BX       lr
                  |L1.5496|
                          DCD      a
                  |L1.5500|
                          DCD      _it1
                  |L1.5504|
001580  546f7563          DCB      "Touch Second Point",0
001584  68205365
001588  636f6e64
00158c  20506f69
001590  6e7400  
001593  00                DCB      0
                  |L1.5524|
                          DCD      0x40010c00
                  |L1.5528|
                          DCD      X
                  |L1.5532|
                          DCD      Xs_2
                  |L1.5536|
                          DCD      Y
                  |L1.5540|
                          DCD      Ys_2
                  |L1.5544|
                          DCD      Xs_3
                  |L1.5548|
                          DCD      Ys_3
                  |L1.5552|
                          DCD      Xs_4
                  |L1.5556|
                          DCD      Ys_4
                  |L1.5560|
                          DCD      ||dw||
                  |L1.5564|
                          DCD      0x40011000
                  |L1.5568|
                          DCD      0x40011800
                  |L1.5572|
                          DCD      0x40011400
                  |L1.5576|
                          DCD      0x40010800
                  |L1.5580|
                          DCD      fac_us
                  |L1.5584|
                          DCD      fac_ms
                          ENDP

                  RCC_Configuration PROC
;;;314    
;;;315    void RCC_Configuration(void)
0015d4  b510              PUSH     {r4,lr}
;;;316    {
;;;317      /* Setup the microcontroller system. Initialize the Embedded Flash Interface,  
;;;318         initialize the PLL and update the SystemFrequency variable. */
;;;319      SystemInit();
0015d6  f7fffffe          BL       SystemInit
;;;320       
;;;321      /* Enable Key Button GPIO Port, GPIO_LED and AFIO clock */
;;;322      RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
0015da  2101              MOVS     r1,#1
0015dc  4608              MOV      r0,r1
0015de  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;323    }
0015e2  bd10              POP      {r4,pc}
;;;324    
                          ENDP

                  main PROC
;;;70     		 		 
;;;71     int main()
0015e4  f7fffffe          BL       RCC_Configuration
;;;72     {//	
;;;73     
;;;74     	RCC_Configuration();   
;;;75     
;;;76       /* Enable the FSMC Clock */
;;;77         
;;;78       	delay_init(72);
0015e8  2048              MOVS     r0,#0x48
0015ea  f7fffffe          BL       delay_init
;;;79       	
;;;80         GPIO_Configuration();	  
0015ee  f7fffffe          BL       GPIO_Configuration
;;;81     	SPI1_Init();
0015f2  f7fffffe          BL       SPI1_Init
;;;82     //	SPI1_Init25();
;;;83     	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_FSMC, ENABLE);	  
0015f6  2101              MOVS     r1,#1
0015f8  0208              LSLS     r0,r1,#8
0015fa  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;84     	FSMC_LCD_Init();	//FSMC初始化								 
0015fe  f7fffffe          BL       FSMC_LCD_Init
;;;85         LCD_Init();	 //LCD初始化
001602  f7fffffe          BL       LCD_Init
;;;86     	//delay_ms(800);   	
;;;87     //	while(1);
;;;88     	NVIC_Configuration();
001606  f7fffffe          BL       NVIC_Configuration
;;;89     
;;;90     	GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource6);		 //触摸IRQ
00160a  2106              MOVS     r1,#6
00160c  2001              MOVS     r0,#1
00160e  f7fffffe          BL       GPIO_EXTILineConfig
;;;91     
;;;92       /* Configure Key Button EXTI Line to generate an interrupt on falling edge */  
;;;93         EXTI_InitStructure.EXTI_Line = EXTI_Line6;
001612  2040              MOVS     r0,#0x40
001614  4957              LDR      r1,|L1.6004|
001616  6008              STR      r0,[r1,#0]  ; EXTI_InitStructure
;;;94         EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
001618  2000              MOVS     r0,#0
00161a  7108              STRB     r0,[r1,#4]
;;;95         EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;
00161c  200c              MOVS     r0,#0xc
00161e  7148              STRB     r0,[r1,#5]
;;;96         EXTI_InitStructure.EXTI_LineCmd = ENABLE;
001620  2001              MOVS     r0,#1
001622  7188              STRB     r0,[r1,#6]
;;;97         EXTI_Init(&EXTI_InitStructure);
001624  4608              MOV      r0,r1
001626  f7fffffe          BL       EXTI_Init
;;;98     
;;;99     	//while(1) a=read_once();
;;;100    	/* NVIC configuration */
;;;101        
;;;102    	heyaodz_TPad();	//触摸屏校准
00162a  f7fffffe          BL       heyaodz_TPad
;;;103    	M25P80_buf_ToRam_TP();	 //读取保存的值
00162e  f7fffffe          BL       M25P80_buf_ToRam_TP
;;;104    	heyaodz_TPad0();
001632  f7fffffe          BL       heyaodz_TPad0
;;;105    	heyaodz_JF();	//显示字符串
001636  f7fffffe          BL       heyaodz_JF
;;;106    	TFT_ShowString(80,110,"Init....OK"); 
00163a  a24f              ADR      r2,|L1.6008|
00163c  216e              MOVS     r1,#0x6e
00163e  2050              MOVS     r0,#0x50
001640  f7fffffe          BL       TFT_ShowString
;;;107    	TFT_ShowString(80,130,"Please Wait...OK"); 	
001644  a24f              ADR      r2,|L1.6020|
001646  2182              MOVS     r1,#0x82
001648  2050              MOVS     r0,#0x50
00164a  f7fffffe          BL       TFT_ShowString
;;;108    	while (1)                   //等待中断到来
00164e  bf00              NOP      
                  |L1.5712|
001650  e7fe              B        |L1.5712|
;;;109      	{    						   
;;;110    
;;;111      	}   	 
;;;112    }
;;;113    
                          ENDP

                  Delay PROC
;;;468    }
;;;469    void Delay(__IO uint32_t nCount)
001652  e000              B        |L1.5718|
                  |L1.5716|
;;;470    {
;;;471      for(; nCount != 0; nCount--);
001654  1e40              SUBS     r0,r0,#1
                  |L1.5718|
001656  2800              CMP      r0,#0
001658  d1fc              BNE      |L1.5716|
;;;472    }
00165a  4770              BX       lr
;;;473    
                          ENDP

                  lcd_rst PROC
;;;474    // ++++++++++++++++TFT 复位操作
;;;475    void lcd_rst(void){
00165c  b510              PUSH     {r4,lr}
;;;476    	GPIO_ResetBits(GPIOE, GPIO_Pin_1);
00165e  2102              MOVS     r1,#2
001660  484d              LDR      r0,|L1.6040|
001662  f7fffffe          BL       GPIO_ResetBits
;;;477        Delay(0x1FFFFf);					   
001666  484d              LDR      r0,|L1.6044|
001668  f7fffffe          BL       Delay
;;;478        GPIO_SetBits(GPIOE, GPIO_Pin_1 );		 	 
00166c  2102              MOVS     r1,#2
00166e  484a              LDR      r0,|L1.6040|
001670  f7fffffe          BL       GPIO_SetBits
;;;479    	Delay(0x1FFFFf);	
001674  4849              LDR      r0,|L1.6044|
001676  f7fffffe          BL       Delay
;;;480    }
00167a  bd10              POP      {r4,pc}
;;;481    
                          ENDP

                  start_spi PROC
;;;482    void start_spi(void)   
00167c  4848              LDR      r0,|L1.6048|
;;;483    { 	  
;;;484    	//TCLK_SET(0);   
;;;485    	//TCS_SET(1); 	 
;;;486    	//TDIN_SET(1);  
;;;487    	//sTCLK_SET(1);
;;;488    	//SPI_Flash_SendByte(1);  
;;;489    	TCS_SET(0);   
00167e  6800              LDR      r0,[r0,#0]
001680  f0200080          BIC      r0,r0,#0x80
001684  4947              LDR      r1,|L1.6052|
001686  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;490    }
00168a  4770              BX       lr
;;;491    //SPI写数据
                          ENDP

                  WriteByteADS PROC
;;;492    //向7846写入1byte数据   
;;;493    void WriteByteADS(u8 num)    
00168c  2100              MOVS     r1,#0
;;;494    {  
;;;495    	u8 count=0;  
;;;496    	TCLK_SET(0);   
00168e  4a46              LDR      r2,|L1.6056|
001690  6812              LDR      r2,[r2,#0]
001692  f0220220          BIC      r2,r2,#0x20
001696  4b43              LDR      r3,|L1.6052|
001698  f8c3280c          STR      r2,[r3,#0x80c]
;;;497    	for(count=0;count<8;count++)  
00169c  bf00              NOP      
00169e  e023              B        |L1.5864|
                  |L1.5792|
;;;498    	{ 	  
;;;499    		if(num&0x80)TDIN_SET(1);  
0016a0  f0100f80          TST      r0,#0x80
0016a4  d007              BEQ      |L1.5814|
0016a6  4a40              LDR      r2,|L1.6056|
0016a8  6812              LDR      r2,[r2,#0]
0016aa  f0420280          ORR      r2,r2,#0x80
0016ae  4b3d              LDR      r3,|L1.6052|
0016b0  f8c3280c          STR      r2,[r3,#0x80c]
0016b4  e006              B        |L1.5828|
                  |L1.5814|
;;;500    		else TDIN_SET(0);   
0016b6  4a3c              LDR      r2,|L1.6056|
0016b8  6812              LDR      r2,[r2,#0]
0016ba  f0220280          BIC      r2,r2,#0x80
0016be  4b39              LDR      r3,|L1.6052|
0016c0  f8c3280c          STR      r2,[r3,#0x80c]
                  |L1.5828|
;;;501    		num<<=1;    
0016c4  0642              LSLS     r2,r0,#25
0016c6  0e10              LSRS     r0,r2,#24
;;;502    		TCLK_SET(0);//上升沿有效  	 
0016c8  4a37              LDR      r2,|L1.6056|
0016ca  6812              LDR      r2,[r2,#0]
0016cc  f0220220          BIC      r2,r2,#0x20
0016d0  4b34              LDR      r3,|L1.6052|
0016d2  f8c3280c          STR      r2,[r3,#0x80c]
;;;503    		TCLK_SET(1);      
0016d6  4a34              LDR      r2,|L1.6056|
0016d8  6812              LDR      r2,[r2,#0]
0016da  f0420220          ORR      r2,r2,#0x20
0016de  f8c3280c          STR      r2,[r3,#0x80c]
0016e2  f1010201          ADD      r2,r1,#1              ;497
0016e6  b2d1              UXTB     r1,r2                 ;497
                  |L1.5864|
0016e8  2908              CMP      r1,#8                 ;497
0016ea  dbd9              BLT      |L1.5792|
;;;504    	} 			    
;;;505    } 
0016ec  4770              BX       lr
;;;506    //SPI读数据 
                          ENDP

                  ReadWordADS PROC
;;;507    //从7846读取adc值	   
;;;508    u16 ReadWordADS(void)	  
0016ee  2100              MOVS     r1,#0
;;;509    { 	 
;;;510    	u8 count=0; 	  
;;;511    	u16 Num=0; 	 
0016f0  2000              MOVS     r0,#0
;;;512    	for(count=0;count<12;count++)  
0016f2  bf00              NOP      
0016f4  e018              B        |L1.5928|
                  |L1.5878|
;;;513    	{ 				  
;;;514    		Num<<=1; 	 
0016f6  0442              LSLS     r2,r0,#17
0016f8  0c10              LSRS     r0,r2,#16
;;;515    		TCLK_SET(1);//下降沿有效 	   
0016fa  4a2b              LDR      r2,|L1.6056|
0016fc  6812              LDR      r2,[r2,#0]
0016fe  f0420220          ORR      r2,r2,#0x20
001702  4b28              LDR      r3,|L1.6052|
001704  f8c3280c          STR      r2,[r3,#0x80c]
;;;516    		TCLK_SET(0);    
001708  461a              MOV      r2,r3
00170a  f8d2280c          LDR      r2,[r2,#0x80c]
00170e  f0220220          BIC      r2,r2,#0x20
001712  f8c3280c          STR      r2,[r3,#0x80c]
;;;517    		if(DOUT)Num++; 		 
001716  4a25              LDR      r2,|L1.6060|
001718  6812              LDR      r2,[r2,#0]
00171a  f0120f40          TST      r2,#0x40
00171e  d001              BEQ      |L1.5924|
001720  1c42              ADDS     r2,r0,#1
001722  b290              UXTH     r0,r2
                  |L1.5924|
001724  1c4a              ADDS     r2,r1,#1              ;512
001726  b2d1              UXTB     r1,r2                 ;512
                  |L1.5928|
001728  290c              CMP      r1,#0xc               ;512
00172a  dbe4              BLT      |L1.5878|
;;;518    	} 		  
;;;519    	return(Num);   
;;;520    }
00172c  4770              BX       lr
;;;521    #define CMD_RDX 0X90  //0B10010000即用差分方式读X坐标
                          ENDP

                  FillColor PROC
;;;605    
;;;606    void FillColor(u8 x,u16 y, u8 x1, u16 y1, u16 z)
00172e  e92d47f0          PUSH     {r4-r10,lr}
;;;607    {	u16 a,b;
001732  4604              MOV      r4,r0
001734  460d              MOV      r5,r1
001736  4690              MOV      r8,r2
001738  4699              MOV      r9,r3
00173a  f8dda020          LDR      r10,[sp,#0x20]
;;;608    	POINT_COLOR=z; 
00173e  481c              LDR      r0,|L1.6064|
001740  f8a0a000          STRH     r10,[r0,#0]
;;;609    	for(a=0; a<(y1-y); a++)
001744  2600              MOVS     r6,#0
001746  e00f              B        |L1.5992|
                  |L1.5960|
;;;610    	{
;;;611    	  for(b=0; b<(x1-x); b++)
001748  2700              MOVS     r7,#0
00174a  e007              B        |L1.5980|
                  |L1.5964|
;;;612    	  {
;;;613    	   TFT_DrawPoint(x+b,y+a);
00174c  19aa              ADDS     r2,r5,r6
00174e  b291              UXTH     r1,r2
001750  19e2              ADDS     r2,r4,r7
001752  b2d0              UXTB     r0,r2
001754  f7fffffe          BL       TFT_DrawPoint
001758  1c78              ADDS     r0,r7,#1              ;611
00175a  b287              UXTH     r7,r0                 ;611
                  |L1.5980|
00175c  eba80004          SUB      r0,r8,r4              ;611
001760  42b8              CMP      r0,r7                 ;611
001762  dcf3              BGT      |L1.5964|
001764  1c70              ADDS     r0,r6,#1              ;609
001766  b286              UXTH     r6,r0                 ;609
                  |L1.5992|
001768  eba90005          SUB      r0,r9,r5              ;609
00176c  42b0              CMP      r0,r6                 ;609
00176e  dceb              BGT      |L1.5960|
;;;614    	  }
;;;615    	}	  	
;;;616    }
001770  e8bd87f0          POP      {r4-r10,pc}
;;;617     
                          ENDP

                  |L1.6004|
                          DCD      EXTI_InitStructure
                  |L1.6008|
001778  496e6974          DCB      "Init....OK",0
00177c  2e2e2e2e
001780  4f4b00  
001783  00                DCB      0
                  |L1.6020|
001784  506c6561          DCB      "Please Wait...OK",0
001788  73652057
00178c  6169742e
001790  2e2e4f4b
001794  00      
001795  00                DCB      0
001796  00                DCB      0
001797  00                DCB      0
                  |L1.6040|
                          DCD      0x40011800
                  |L1.6044|
                          DCD      0x001fffff
                  |L1.6048|
                          DCD      0x40010c0c
                  |L1.6052|
                          DCD      0x40010000
                  |L1.6056|
                          DCD      0x4001080c
                  |L1.6060|
                          DCD      0x40010808
                  |L1.6064|
                          DCD      POINT_COLOR

                          AREA ||.data||, DATA, ALIGN=2

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000
                  _it0
000004  00                DCB      0x00
                  _it1
000005  00                DCB      0x00
                  _it2
000006  00                DCB      0x00
                  _it3
000007  00                DCB      0x00
                  num
000008  00                DCB      0x00
                  ||dw||
000009  00                DCB      0x00
                  a
00000a  00                DCB      0x00
                  b
00000b  00                DCB      0x00
                  TP_B
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  Xs_1
                          DCD      0x00000000
                  Xs_2
                          DCD      0x00000000
                  Xs_3
                          DCD      0x00000000
                  Xs_4
                          DCD      0x00000000
                  Ys_1
                          DCD      0x00000000
                  Ys_2
                          DCD      0x00000000
                  Ys_3
                          DCD      0x00000000
                  Ys_4
                          DCD      0x00000000
                  X
                          DCD      0x00000000
                  Y
                          DCD      0x00000000
                  ||X2||
000038  00000000          DCFS     0x00000000 ; 0
                  ||Y2||
00003c  00000000          DCFS     0x00000000 ; 0
                  EXTI_InitStructure
                          %        8

                  __ARM_use_no_argv EQU 0
