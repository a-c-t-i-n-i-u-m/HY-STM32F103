; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\obj\spi_flash.o --depend=.\obj\spi_flash.d --cpu=Cortex-M3 --apcs=interwork -O0 -I.\FWlib\inc -I.\user -I.\CM3 -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\ST\STM32F10x -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210B_EVAL --omf_browse=.\obj\spi_flash.crf user\SPI_Flash.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SPI1_Init PROC
;;;29     *******************************************************************************/
;;;30     extern void SPI1_Init(void)
000000  b500              PUSH     {lr}
;;;31     {
000002  b087              SUB      sp,sp,#0x1c
;;;32       SPI_InitTypeDef  SPI_InitStructure;
;;;33       GPIO_InitTypeDef GPIO_InitStructure;
;;;34        
;;;35       /* Enable SPI2 GPIOB clocks */
;;;36       RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1 ,ENABLE);
000004  2101              MOVS     r1,#1
000006  0308              LSLS     r0,r1,#12
000008  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;37       RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  2004              MOVS     r0,#4
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;38       /* Configure SPI2 pins: SCK, MISO and MOSI */
;;;39       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;
000014  20e0              MOVS     r0,#0xe0
000016  f8ad0004          STRH     r0,[sp,#4]
;;;40       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001a  2003              MOVS     r0,#3
00001c  f88d0006          STRB     r0,[sp,#6]
;;;41       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000020  2018              MOVS     r0,#0x18
000022  f88d0007          STRB     r0,[sp,#7]
;;;42       GPIO_Init(GPIOA, &GPIO_InitStructure);
000026  a901              ADD      r1,sp,#4
000028  487c              LDR      r0,|L1.540|
00002a  f7fffffe          BL       GPIO_Init
;;;43     
;;;44       /* Configure PB.12 as Output push-pull, used as Flash Chip select */
;;;45       GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;
00002e  2010              MOVS     r0,#0x10
000030  f8ad0004          STRH     r0,[sp,#4]
;;;46       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000034  2003              MOVS     r0,#3
000036  f88d0006          STRB     r0,[sp,#6]
;;;47       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
00003a  2010              MOVS     r0,#0x10
00003c  f88d0007          STRB     r0,[sp,#7]
;;;48       GPIO_Init(GPIOA, &GPIO_InitStructure);
000040  a901              ADD      r1,sp,#4
000042  4876              LDR      r0,|L1.540|
000044  f7fffffe          BL       GPIO_Init
;;;49     
;;;50       /* Deselect the FLASH: Chip Select high */
;;;51       NotSelect_Flash();
000048  2110              MOVS     r1,#0x10
00004a  4874              LDR      r0,|L1.540|
00004c  f7fffffe          BL       GPIO_SetBits
;;;52     
;;;53       /* SPI2 configuration */ 
;;;54       SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;
000050  2000              MOVS     r0,#0
000052  f8ad0008          STRH     r0,[sp,#8]
;;;55       SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
000056  f44f7082          MOV      r0,#0x104
00005a  f8ad000a          STRH     r0,[sp,#0xa]
;;;56       SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;
00005e  2000              MOVS     r0,#0
000060  f8ad000c          STRH     r0,[sp,#0xc]
;;;57       SPI_InitStructure.SPI_CPOL = SPI_CPOL_High;
000064  2002              MOVS     r0,#2
000066  f8ad000e          STRH     r0,[sp,#0xe]
;;;58       SPI_InitStructure.SPI_CPHA = SPI_CPHA_2Edge;
00006a  2001              MOVS     r0,#1
00006c  f8ad0010          STRH     r0,[sp,#0x10]
;;;59       SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;
000070  0240              LSLS     r0,r0,#9
000072  f8ad0012          STRH     r0,[sp,#0x12]
;;;60       SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_16;
000076  2018              MOVS     r0,#0x18
000078  f8ad0014          STRH     r0,[sp,#0x14]
;;;61       SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;
00007c  2000              MOVS     r0,#0
00007e  f8ad0016          STRH     r0,[sp,#0x16]
;;;62       SPI_InitStructure.SPI_CRCPolynomial = 7;
000082  2007              MOVS     r0,#7
000084  f8ad0018          STRH     r0,[sp,#0x18]
;;;63       SPI_Init(SPI1, &SPI_InitStructure);
000088  a902              ADD      r1,sp,#8
00008a  4865              LDR      r0,|L1.544|
00008c  f7fffffe          BL       SPI_Init
;;;64       
;;;65       /* Enable SPI2  */
;;;66       SPI_Cmd(SPI1, ENABLE);   
000090  2101              MOVS     r1,#1
000092  4863              LDR      r0,|L1.544|
000094  f7fffffe          BL       SPI_Cmd
;;;67     }
000098  b007              ADD      sp,sp,#0x1c
00009a  bd00              POP      {pc}
;;;68     /*******************************************************************************
                          ENDP

                  SPI_SendByte PROC
;;;105    *******************************************************************************/
;;;106    u16 SPI_SendByte(u8 byte)
00009c  b510              PUSH     {r4,lr}
;;;107    {
00009e  4604              MOV      r4,r0
;;;108      /* Loop while DR register in not emplty */
;;;109      while(SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_TXE) == RESET);
0000a0  bf00              NOP      
                  |L1.162|
0000a2  2102              MOVS     r1,#2
0000a4  485e              LDR      r0,|L1.544|
0000a6  f7fffffe          BL       SPI_I2S_GetFlagStatus
0000aa  2800              CMP      r0,#0
0000ac  d0f9              BEQ      |L1.162|
;;;110      //NotSelect_Flash();  while(1);
;;;111      /* Send byte through the SPI2 peripheral */
;;;112      SPI_I2S_SendData(SPI1, byte);
0000ae  4621              MOV      r1,r4
0000b0  485b              LDR      r0,|L1.544|
0000b2  f7fffffe          BL       SPI_I2S_SendData
;;;113    
;;;114      /* Wait to receive a byte */
;;;115      while(SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_RXNE) == RESET);
0000b6  bf00              NOP      
                  |L1.184|
0000b8  2101              MOVS     r1,#1
0000ba  4859              LDR      r0,|L1.544|
0000bc  f7fffffe          BL       SPI_I2S_GetFlagStatus
0000c0  2800              CMP      r0,#0
0000c2  d0f9              BEQ      |L1.184|
;;;116    
;;;117      /* Return the byte read from the SPI bus */
;;;118      return SPI_I2S_ReceiveData(SPI1);
0000c4  4856              LDR      r0,|L1.544|
0000c6  f7fffffe          BL       SPI_I2S_ReceiveData
;;;119    }
0000ca  bd10              POP      {r4,pc}
;;;120    
                          ENDP

                  SPI_ReadByte PROC
;;;92     *******************************************************************************/
;;;93     u16 SPI_ReadByte(u8 a)
0000cc  b510              PUSH     {r4,lr}
;;;94     {
0000ce  4604              MOV      r4,r0
;;;95       return (SPI_SendByte(a));
0000d0  4620              MOV      r0,r4
0000d2  f7fffffe          BL       SPI_SendByte
;;;96     }
0000d6  bd10              POP      {r4,pc}
;;;97     
                          ENDP

                  FlashWaitBusy PROC
;;;161    
;;;162    void FlashWaitBusy(void)//FlashÃ¦¼ì²â
0000d8  b510              PUSH     {r4,lr}
;;;163    {
;;;164    
;;;165      u8 FLASH_Status = 0;
0000da  2400              MOVS     r4,#0
;;;166    
;;;167      Select_Flash();	
0000dc  2110              MOVS     r1,#0x10
0000de  484f              LDR      r0,|L1.540|
0000e0  f7fffffe          BL       GPIO_ResetBits
;;;168    
;;;169      SPI_ReadByte(RDSR);//¶Á×´Ì¬
0000e4  2005              MOVS     r0,#5
0000e6  f7fffffe          BL       SPI_ReadByte
;;;170    
;;;171      do
0000ea  bf00              NOP      
                  |L1.236|
;;;172      {
;;;173    
;;;174        FLASH_Status = SPI_ReadByte(Dummy_Byte);
0000ec  20a5              MOVS     r0,#0xa5
0000ee  f7fffffe          BL       SPI_ReadByte
0000f2  b2c4              UXTB     r4,r0
;;;175    
;;;176      }
;;;177      while ((FLASH_Status & WIP_Flag) == SET); 
0000f4  f0040001          AND      r0,r4,#1
0000f8  2801              CMP      r0,#1
0000fa  d0f7              BEQ      |L1.236|
;;;178      NotSelect_Flash();	   
0000fc  2110              MOVS     r1,#0x10
0000fe  4847              LDR      r0,|L1.540|
000100  f7fffffe          BL       GPIO_SetBits
;;;179    
;;;180    }
000104  bd10              POP      {r4,pc}
;;;181    
                          ENDP

                  FlashPageEarse PROC
;;;143    
;;;144    void FlashPageEarse(u16 page) //²Á³ýÖ¸¶¨µÄÒ³,Ò³·¶Î§0-4095
000106  b510              PUSH     {r4,lr}
;;;145    {	
000108  4604              MOV      r4,r0
;;;146    
;;;147      FlashWaitBusy();//FlashÃ¦¼ì²â
00010a  f7fffffe          BL       FlashWaitBusy
;;;148      Select_Flash(); //CSÖÃ"0"
00010e  2110              MOVS     r1,#0x10
000110  4842              LDR      r0,|L1.540|
000112  f7fffffe          BL       GPIO_ResetBits
;;;149      SPI_ReadByte(0X06);	//Ð´Ê¹ÄÜ
000116  2006              MOVS     r0,#6
000118  f7fffffe          BL       SPI_ReadByte
;;;150      NotSelect_Flash(); //CSÖÃ"1"
00011c  2110              MOVS     r1,#0x10
00011e  483f              LDR      r0,|L1.540|
000120  f7fffffe          BL       GPIO_SetBits
;;;151    
;;;152      FlashWaitBusy();//FlashÃ¦¼ì²â
000124  f7fffffe          BL       FlashWaitBusy
;;;153      Select_Flash(); //CSÖÃ"0"
000128  2110              MOVS     r1,#0x10
00012a  483c              LDR      r0,|L1.540|
00012c  f7fffffe          BL       GPIO_ResetBits
;;;154      SPI_ReadByte(SE);  //¿é²Á³ý
000130  20d8              MOVS     r0,#0xd8
000132  f7fffffe          BL       SPI_ReadByte
;;;155      SPI_ReadByte((page & 0xFF0000) >> 16);
000136  0c20              LSRS     r0,r4,#16
000138  f7fffffe          BL       SPI_ReadByte
;;;156      SPI_ReadByte((page & 0xFF00) >> 8);
00013c  0a20              LSRS     r0,r4,#8
00013e  f7fffffe          BL       SPI_ReadByte
;;;157      SPI_ReadByte(page & 0xFF);
000142  b2e0              UXTB     r0,r4
000144  f7fffffe          BL       SPI_ReadByte
;;;158      NotSelect_Flash(); //CSÖÃ"1"
000148  2110              MOVS     r1,#0x10
00014a  4834              LDR      r0,|L1.540|
00014c  f7fffffe          BL       GPIO_SetBits
;;;159    
;;;160    }
000150  bd10              POP      {r4,pc}
;;;161    
                          ENDP

                  M25P16_RamTo_buf PROC
;;;122    //½«DF_buffer[]Êý×éÖÐÖ¸¶¨³¤¶ÈµÄÊý¾ÝÐ´Èë
;;;123    unsigned char M25P16_RamTo_buf(unsigned char buffer,unsigned int start_address,unsigned int length)
000152  e92d41f0          PUSH     {r4-r8,lr}
;;;124    {
000156  4607              MOV      r7,r0
000158  460c              MOV      r4,r1
00015a  4616              MOV      r6,r2
;;;125      unsigned int i;
;;;126      FlashPageEarse(0X02); //²Á³ýÖ¸¶¨µÄÒ³,Ò³·¶Î§0-4095
00015c  2002              MOVS     r0,#2
00015e  f7fffffe          BL       FlashPageEarse
;;;127    
;;;128      FlashWaitBusy();//FlashÃ¦¼ì²â
000162  f7fffffe          BL       FlashWaitBusy
;;;129      Select_Flash(); //CSÖÃ"0"
000166  2110              MOVS     r1,#0x10
000168  482c              LDR      r0,|L1.540|
00016a  f7fffffe          BL       GPIO_ResetBits
;;;130      SPI_ReadByte(0X06);	//Ð´Ê¹ÄÜ
00016e  2006              MOVS     r0,#6
000170  f7fffffe          BL       SPI_ReadByte
;;;131      NotSelect_Flash(); //CSÖÃ"1"
000174  2110              MOVS     r1,#0x10
000176  4829              LDR      r0,|L1.540|
000178  f7fffffe          BL       GPIO_SetBits
;;;132    
;;;133      FlashWaitBusy();//FlashÃ¦¼ì²â
00017c  f7fffffe          BL       FlashWaitBusy
;;;134      Select_Flash(); //CSÖÃ"0"
000180  2110              MOVS     r1,#0x10
000182  4826              LDR      r0,|L1.540|
000184  f7fffffe          BL       GPIO_ResetBits
;;;135      SPI_ReadByte(0X02);	//Ò³Ð´
000188  2002              MOVS     r0,#2
00018a  f7fffffe          BL       SPI_ReadByte
;;;136      SPI_ReadByte((start_address & 0xFF0000) >> 16);
00018e  f3c44007          UBFX     r0,r4,#16,#8
000192  f7fffffe          BL       SPI_ReadByte
;;;137      SPI_ReadByte((start_address & 0xFF00) >> 8);
000196  f3c42007          UBFX     r0,r4,#8,#8
00019a  f7fffffe          BL       SPI_ReadByte
;;;138      SPI_ReadByte(start_address & 0xFF);
00019e  b2e0              UXTB     r0,r4
0001a0  f7fffffe          BL       SPI_ReadByte
;;;139      for (i=0;i<length;i++)SPI_ReadByte(AT45_buffer[i]);
0001a4  2500              MOVS     r5,#0
0001a6  e004              B        |L1.434|
                  |L1.424|
0001a8  491e              LDR      r1,|L1.548|
0001aa  5d48              LDRB     r0,[r1,r5]
0001ac  f7fffffe          BL       SPI_ReadByte
0001b0  1c6d              ADDS     r5,r5,#1
                  |L1.434|
0001b2  42b5              CMP      r5,r6
0001b4  d3f8              BCC      |L1.424|
;;;140    
;;;141      NotSelect_Flash();
0001b6  2110              MOVS     r1,#0x10
0001b8  4818              LDR      r0,|L1.540|
0001ba  f7fffffe          BL       GPIO_SetBits
;;;142    }
0001be  e8bd81f0          POP      {r4-r8,pc}
;;;143    
                          ENDP

                  M25P80_buf_ToRam PROC
;;;182    //¶ÁÈ¡Êý¾Ý£¬±£´æÔÚDF_buffer[]Êý×éÖÐ
;;;183    unsigned char M25P80_buf_ToRam(unsigned char buffer,unsigned int start_address,unsigned int length)
0001c2  e92d41f0          PUSH     {r4-r8,lr}
;;;184    {
0001c6  4607              MOV      r7,r0
0001c8  460c              MOV      r4,r1
0001ca  4616              MOV      r6,r2
;;;185    	unsigned int i;
;;;186    		FlashWaitBusy(); //FlashÃ¦¼ì²â
0001cc  f7fffffe          BL       FlashWaitBusy
;;;187    		Select_Flash();//CSÖÃ"0" 		
0001d0  2110              MOVS     r1,#0x10
0001d2  4812              LDR      r0,|L1.540|
0001d4  f7fffffe          BL       GPIO_ResetBits
;;;188    
;;;189            SPI_ReadByte(0X03);//	¶ÁÊý¾Ý
0001d8  2003              MOVS     r0,#3
0001da  f7fffffe          BL       SPI_ReadByte
;;;190    
;;;191            SPI_ReadByte((start_address & 0xFF0000) >> 16);
0001de  f3c44007          UBFX     r0,r4,#16,#8
0001e2  f7fffffe          BL       SPI_ReadByte
;;;192            SPI_ReadByte((start_address & 0xFF00) >> 8);
0001e6  f3c42007          UBFX     r0,r4,#8,#8
0001ea  f7fffffe          BL       SPI_ReadByte
;;;193            SPI_ReadByte(start_address & 0xFF);
0001ee  b2e0              UXTB     r0,r4
0001f0  f7fffffe          BL       SPI_ReadByte
;;;194      		for (i=0;i<length;i++)
0001f4  2500              MOVS     r5,#0
0001f6  e008              B        |L1.522|
                  |L1.504|
;;;195    		{
;;;196    			AT45_buffer[i+17] = SPI_ReadByte(0);
0001f8  2000              MOVS     r0,#0
0001fa  f7fffffe          BL       SPI_ReadByte
0001fe  b2c1              UXTB     r1,r0
000200  4a08              LDR      r2,|L1.548|
000202  f1050011          ADD      r0,r5,#0x11
000206  5411              STRB     r1,[r2,r0]
000208  1c6d              ADDS     r5,r5,#1              ;194
                  |L1.522|
00020a  42b5              CMP      r5,r6                 ;194
00020c  d3f4              BCC      |L1.504|
;;;197    		}
;;;198    
;;;199    		NotSelect_Flash();//CSÖÃ"1"
00020e  2110              MOVS     r1,#0x10
000210  4802              LDR      r0,|L1.540|
000212  f7fffffe          BL       GPIO_SetBits
;;;200    }
000216  e8bd81f0          POP      {r4-r8,pc}
                          ENDP

00021a  0000              DCW      0x0000
                  |L1.540|
                          DCD      0x40010800
                  |L1.544|
                          DCD      0x40013000
                  |L1.548|
                          DCD      AT45_buffer

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  AT45_buffer
                          %        40
